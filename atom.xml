<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sheen&#39;s Blog</title>
  
  <subtitle>随笔，技术笔记</subtitle>
  <link href="https://sheenzxx.github.io/atom.xml" rel="self"/>
  
  <link href="https://sheenzxx.github.io/"/>
  <updated>2023-09-25T04:02:32.499Z</updated>
  <id>https://sheenzxx.github.io/</id>
  
  <author>
    <name>Sheen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 gin 优化一例</title>
    <link href="https://sheenzxx.github.io/2023/09/25/gincase/"/>
    <id>https://sheenzxx.github.io/2023/09/25/gincase/</id>
    <published>2023-09-25T03:44:10.000Z</published>
    <updated>2023-09-25T04:02:32.499Z</updated>
    
    <content type="html"><![CDATA[<p>大数据组那边有个系统用了PG 。在慢语句告警中发现有个update 用了 78 秒<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> tag_users_mapping </span><br><span class="line">  <span class="keyword">set</span> user_ids<span class="operator">=</span>(<span class="keyword">select</span> <span class="built_in">coalesce</span>(rb_build_agg(user_id), rb_build(<span class="string">&#x27;&#123;&#125;&#x27;</span>))</span><br><span class="line"><span class="keyword">from</span>  user_tags_mapping </span><br><span class="line"><span class="keyword">where</span> leave <span class="operator">~</span> <span class="string">&#x27;(^20411947,)|(,20411947,)|(,20411947$)&#x27;</span> <span class="keyword">or</span> leave<span class="operator">=</span><span class="string">&#x27;20411947&#x27;</span>) <span class="keyword">where</span> id<span class="operator">=</span><span class="number">156518</span></span><br></pre></td></tr></table></figure><br>通过分析可以看到慢的是在update set 的子句里面。leave 用了正则表达式，user_tags_mapping 有2300W数据。走全表扫描。<br>查看表数据库可以看到leave 是使用text 类型存的数据为：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&quot;20121054,202365,20490503,500902&quot;</span><br><span class="line">&quot;2014550,204104135,20210,2013225,2022,20495281,500605,500902&quot;</span><br><span class="line">&quot;2011726,2023,20489521,50402,500902&quot;</span><br><span class="line">&quot;2013286,2022,204102891,50402,500902&quot;</span><br><span class="line">&quot;2013836,20210,204106485,50402,500902&quot;</span><br><span class="line">&quot;2019306,20217,204105486,500605,500902&quot;</span><br><span class="line">&quot;2013286,2022,204102891,50402,500902&quot;</span><br><span class="line">&quot;20124394,202107,20488918,500605,500902&quot;</span><br><span class="line">&quot;204108669,2013996,20215,204108668,500902&quot;</span><br><span class="line">&quot;2013286,2022,50402,500902&quot;</span><br></pre></td></tr></table></figure><br>开发用了正则匹配只是为了匹配 某个ID 存在于leave 中。<br>如何加速查询呢？唯有索引。看到这种按逗号分隔的组成，可以想到如果是array 数组，我们可以加上gin 索引来提高检索速度。<br>PG 有提供 string_to_array 将字符串分割成array 。也支持函数索引。于是建索引如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> index idx_user_tags_mapping_leave <span class="keyword">on</span>  user_tags_mapping <span class="keyword">using</span> gin(string_to_array(leave,<span class="string">&#x27;,&#x27;</span>))</span><br></pre></td></tr></table></figure><br>将SQL改写,利用 &amp;&amp; 匹配 某个数组中的元素是否存在另一个数组<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> tag_users_mapping </span><br><span class="line">  <span class="keyword">set</span> user_ids<span class="operator">=</span>(<span class="keyword">select</span> <span class="built_in">coalesce</span>(rb_build_agg(user_id), rb_build(<span class="string">&#x27;&#123;&#125;&#x27;</span>)) <span class="keyword">from</span> tmp_user_tags_mapping <span class="keyword">where</span> <span class="keyword">array</span>[<span class="string">&#x27;20411947&#x27;</span>]<span class="operator">&amp;&amp;</span>string_to_array(leave,<span class="string">&#x27;,&#x27;</span>)) <span class="keyword">where</span> id<span class="operator">=</span><span class="number">156518</span></span><br></pre></td></tr></table></figure><br>这个查询需要花费 56ms 。性能提升 1300+ 倍。优化效果很明显。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;大数据组那边有个系统用了PG 。在慢语句告警中发现有个update 用了 78 秒&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;</summary>
      
    
    
    
    <category term="postgresql" scheme="https://sheenzxx.github.io/categories/postgresql/"/>
    
    
    <category term="gin index" scheme="https://sheenzxx.github.io/tags/gin-index/"/>
    
  </entry>
  
  <entry>
    <title>记一次 waiting for table flush 故障</title>
    <link href="https://sheenzxx.github.io/2023/09/06/waitTableFlush/"/>
    <id>https://sheenzxx.github.io/2023/09/06/waitTableFlush/</id>
    <published>2023-09-06T08:22:50.000Z</published>
    <updated>2023-09-06T09:05:58.343Z</updated>
    
    <content type="html"><![CDATA[<p>早上运维同事说某一个应用的数据库突然报 too many session<br>于是登上数据库查看。发现数据库里堆积了有1000个会话。并且全部处于state: waiting for table flush<br>优先处理故障，将所有阻塞语句全部杀掉</p><p>通过监控，agent 日志等发现有一个慢语句在昨天下午两点多一直运行到早上5点。在慢语句系统中找出来发现<br>这个语句2表关联查询。并没有关联条件。导致SQL 出现笛卡尔积。因为表比较大。导致SQL 一直运行。可这个<br>语句为啥会导致 在5点钟左右开始所有的会话都陷入等待呢。</p><p>最终排查到我们的定时任务刚好在4点57 分开始。<br>xtrabackup 备份 会在备份非innodb 文件之前执行 flush tables with read lock. 以确保备份一致性。<br>这个时候一个长查询一直没有结束。导致 xtrabckup 进入等待，又因为是获取全局读锁。导致其他会话进来<br>后也一起陷入 waiting for table flush 。最终连接被耗尽，故障发生。</p><p>对于xtrabackup 官网针对这个问题提供了一些解决方案<br><a href="https://docs.percona.com/percona-xtrabackup/2.4/innobackupex/improved_ftwrl.html">https://docs.percona.com/percona-xtrabackup/2.4/innobackupex/improved_ftwrl.html</a></p><p>通过对下列参数的设置。可以避免trabackup 长时间等待，从而引发系统故障。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ftwrl-wait-query-type             ALL  <span class="comment"># which long queries should be finished before ftwrl</span></span><br><span class="line">ftwrl-wait-threshold              60   <span class="comment"># how long query should be running before we consider it long running and potential blocker of global lock</span></span><br><span class="line">kill-long-query-type              SELECT <span class="comment"># which queries should be killed once kill-long-queries-timeout has expired.</span></span><br><span class="line">kill-long-queries-timeout         0    <span class="comment"># how many time we give for queries to complete after FLUSH TABLES WITH READ LOCK is issued before start to kill. Default if 0, not to kill</span></span><br><span class="line">ftwrl-wait-timeout                0    <span class="comment"># how long to wait for a good moment. Default is 0, not to wait.</span></span><br><span class="line"></span><br><span class="line">example:</span><br><span class="line">$ innobackupex --ftwrl-wait-threshold=40 --ftwrl-wait-query-type=all --ftwrl-wait-timeout=180 --kill-long-queries-timeout=20 --kill-long-query-type=all /data/backups/</span><br></pre></td></tr></table></figure><br>当然对数据库长查询的监控也很有必要。之前是通过邮件告警。告警太多。被淹没了。这次也将告警接入企微。更加重视它。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;早上运维同事说某一个应用的数据库突然报 too many session&lt;br&gt;于是登上数据库查看。发现数据库里堆积了有1000个会话。并且全部处于state: waiting for table flush&lt;br&gt;优先处理故障，将所有阻塞语句全部杀掉&lt;/p&gt;
&lt;p&gt;通过监</summary>
      
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="long query" scheme="https://sheenzxx.github.io/tags/long-query/"/>
    
    <category term="xtrabackup" scheme="https://sheenzxx.github.io/tags/xtrabackup/"/>
    
  </entry>
  
  <entry>
    <title>单机版将mongodb单节点升级为副本集群</title>
    <link href="https://sheenzxx.github.io/2023/09/01/mongoSingle-Replicaset/"/>
    <id>https://sheenzxx.github.io/2023/09/01/mongoSingle-Replicaset/</id>
    <published>2023-09-01T02:42:44.000Z</published>
    <updated>2023-09-01T02:51:11.275Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>1.修改配置文件 /etc/mongod.conf,添加<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">replication:</span><br><span class="line">  oplogSizeMB: 2048</span><br><span class="line">  replSetName: mmp_wuid</span><br><span class="line">  </span><br><span class="line">security:</span><br><span class="line">  keyFile: /data/mongodb/etc/mongo.keyfile </span><br><span class="line">  authorization: &quot;enabled&quot;</span><br><span class="line">  </span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">2.生成keyFile ,replica 开启security 需要设置keyFile</span><br><span class="line">```bash</span><br><span class="line">mkdir -p /data/mongodb/etc</span><br><span class="line">openssl rand -base64 753 &gt; /data/mongodb/etc/mongo.keyfile</span><br><span class="line">chmod 600 /app/mongodb/etc/mongo.keyfile</span><br></pre></td></tr></table></figure></p><h2 id="停止monogdb-服务"><a href="#停止monogdb-服务" class="headerlink" title="停止monogdb 服务"></a>停止monogdb 服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mongo   </span><br><span class="line">&gt;use admin</span><br><span class="line">&gt;db.auth(<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;xxxx&#x27;</span>) </span><br><span class="line">&gt;db.shutdownServer()</span><br><span class="line"><span class="comment">## 重启mongodb 服务</span></span><br><span class="line">systemctl start mongodb.service</span><br></pre></td></tr></table></figure><h2 id="配置复制集"><a href="#配置复制集" class="headerlink" title="配置复制集"></a>配置复制集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mongo</span><br><span class="line">&gt;use admin</span><br><span class="line">&gt;db.auth(<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;xxxx&#x27;</span>)</span><br><span class="line">&gt;config = &#123;<span class="string">&quot;_id&quot;</span>:<span class="string">&quot;mmp_wuid&quot;</span>,members : [&#123;_id:0, host:<span class="string">&quot;192.168.30.207:27017&quot;</span>&#125;]&#125;</span><br><span class="line">&gt;rs.initiate(config)</span><br></pre></td></tr></table></figure><h2 id="搭建从节点"><a href="#搭建从节点" class="headerlink" title="搭建从节点"></a>搭建从节点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mkidr -p /app/mongodb_rep/&#123;<span class="built_in">log</span>,mongodb,etc&#125;</span><br><span class="line"><span class="built_in">cp</span> /etc/mongod.conf /etc/mongo_rep.conf</span><br><span class="line"><span class="comment">##修改 logfile 以及dbpath 指向从库实际路径,以及端口</span></span><br><span class="line"><span class="built_in">cp</span> /data/mongodb/etc/mongo.keyfile /app/mongodb_rep/etc/</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> /lib/systemd/system/mongodb.service /lib/systemd/system/mongodb_rep.service</span><br><span class="line">vi mongodb_rep.service </span><br><span class="line"><span class="comment">##修改指向rep 配置文件的路径</span></span><br><span class="line"></span><br><span class="line">systemclt daemon-reaload</span><br><span class="line">systemctl start mongodb_rep.service</span><br></pre></td></tr></table></figure><h2 id="主节点上添加-replica-节点"><a href="#主节点上添加-replica-节点" class="headerlink" title="主节点上添加 replica 节点"></a>主节点上添加 replica 节点</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; rs.add(&quot;192.168.30.207:27018&quot;)</span><br><span class="line">&gt; rs.status()</span><br></pre></td></tr></table></figure><p>可以看到节点2 处于 startup2 状态。为同步数据</p><h1 id="到此。单节点升级为replica-集群完成"><a href="#到此。单节点升级为replica-集群完成" class="headerlink" title="到此。单节点升级为replica 集群完成"></a>到此。单节点升级为replica 集群完成</h1><h2 id="错误与解决"><a href="#错误与解决" class="headerlink" title="错误与解决"></a>错误与解决</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">在副本集中启用认证后需要配置security.keyFile，否则会报如下错误</span><br><span class="line">1. BadValue: security.keyFile is required when authorization is enabled with replica sets</span><br><span class="line">try &#x27;/usr/local/mongodb/bin/mongod --help&#x27; for more information]</span><br><span class="line"></span><br><span class="line">在节点1上</span><br><span class="line">openssl rand -base64 753 &gt; /data/mongodb/etc/mongo.keyfile</span><br><span class="line">chmod 600 /app/mongodb/etc/mongo.keyfile</span><br><span class="line">拷贝到节点2</span><br><span class="line">scp mongo.keyfile mongodb2:`pwd`</span><br><span class="line"></span><br><span class="line">2. permissions on /app/mongodb_rep/etc/mongo.keyfile are too open</span><br><span class="line"></span><br><span class="line">mongo.keyfile 权限过大</span><br><span class="line">chmod 600 /app/mongodb_rep/etc/mongo.keyfile</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;1.修改配置文件 /etc/mongod.conf,添加&lt;br&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;t</summary>
      
    
    
    
    <category term="mongodb" scheme="https://sheenzxx.github.io/categories/mongodb/"/>
    
    
    <category term="replica" scheme="https://sheenzxx.github.io/tags/replica/"/>
    
  </entry>
  
  <entry>
    <title>利用hive将habse数据导入clickhouse</title>
    <link href="https://sheenzxx.github.io/2023/08/25/hvie2clickhouse/"/>
    <id>https://sheenzxx.github.io/2023/08/25/hvie2clickhouse/</id>
    <published>2023-08-25T07:42:12.000Z</published>
    <updated>2023-08-25T10:24:19.967Z</updated>
    
    <content type="html"><![CDATA[<p>如何将hbase 的数据导入clickhouse 呢。一种通过第三方工具,例如 datax 来传输，但是配置比较麻烦。<br>想到clickhouse 支持 hive 外部表查询。我们可以利用建立外部表的方式。将数据抽取到clickhouse 本地。</p><h3 id="clickhouse数据库的准备，起开远程本地缓存"><a href="#clickhouse数据库的准备，起开远程本地缓存" class="headerlink" title="clickhouse数据库的准备，起开远程本地缓存"></a>clickhouse数据库的准备，起开远程本地缓存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启本地cache 可以使 查询速度提高2x</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data1/clickhouse/local_cache</span><br><span class="line"><span class="built_in">chown</span> -R clickhouse:clickhouse /data1/clickhouse</span><br><span class="line">vi /etc/clickhouse-server/config.xml</span><br><span class="line"><span class="comment">##开启添加本地缓存</span></span><br><span class="line">    &lt;local_cache_for_remote_fs&gt;</span><br><span class="line">        &lt;<span class="built_in">enable</span>&gt;<span class="literal">true</span>&lt;/enable&gt;</span><br><span class="line">        &lt;root_dir&gt;/data1/clickhouse/local_cache&lt;/root_dir&gt;</span><br><span class="line">        &lt;limit_size&gt;559096952&lt;/limit_size&gt;</span><br><span class="line">        &lt;bytes_read_before_flush&gt;1048576&lt;/bytes_read_before_flush&gt;</span><br><span class="line">    &lt;/local_cache_for_remote_fs&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable: ClickHouse will maintain local cache for remote filesystem(HDFS) after startup if true.</span></span><br><span class="line"><span class="comment"># root_dir: Required. The root directory to store local cache files for remote filesystem.</span></span><br><span class="line"><span class="comment"># limit_size: Required. The maximum size(in bytes) of local cache files.</span></span><br><span class="line"><span class="comment"># bytes_read_before_flush: Control bytes before flush to local filesystem when downloading file from remote filesystem. The default value is 1MB.</span></span><br><span class="line"><span class="comment"># 重启数据库</span></span><br><span class="line"><span class="comment"># 用户可以通过设置 set use_local_cache_for_remote_fs = 0 关闭使用本地缓存</span></span><br></pre></td></tr></table></figure><h3 id="hbase-中的表"><a href="#hbase-中的表" class="headerlink" title="hbase 中的表"></a>hbase 中的表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="string">&#x27;hive_hbase_table&#x27;</span>,<span class="string">&#x27;cf1&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="在-hive-中建立访问-hbase-的表"><a href="#在-hive-中建立访问-hbase-的表" class="headerlink" title="在 hive 中建立访问 hbase 的表"></a>在 hive 中建立访问 hbase 的表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use test;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">EXTERNAL</span> <span class="keyword">TABLE</span> hive_hbase_table(key <span class="type">int</span>, <span class="keyword">value</span> string) <span class="operator">/</span><span class="operator">/</span> key 字段必须，对应 hbase 中的rowkey</span><br><span class="line">STORED <span class="keyword">BY</span> <span class="string">&#x27;org.apache.hadoop.hive.hbase.HBaseStorageHandler&#x27;</span> </span><br><span class="line"><span class="keyword">WITH</span> SERDEPROPERTIES (&quot;hbase.columns.mapping&quot; <span class="operator">=</span> &quot;:key,cf1:val&quot;) <span class="operator">/</span><span class="operator">/</span> hbase 字段映射</span><br><span class="line">TBLPROPERTIES (&quot;hbase.table.name&quot; <span class="operator">=</span> &quot;hive_hbase_table&quot;); <span class="operator">/</span><span class="operator">/</span> 映射hbase 中的表名</span><br></pre></td></tr></table></figure><h3 id="在-clickhouse-中间-hive-外部表"><a href="#在-clickhouse-中间-hive-外部表" class="headerlink" title="在 clickhouse 中间 hive 外部表"></a>在 clickhouse 中间 hive 外部表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test.test_orc</span><br><span class="line">(</span><br><span class="line">    `key` Int32,</span><br><span class="line">    `val` Int16</span><br><span class="line">)</span><br><span class="line">ENGINE <span class="operator">=</span> Hive(<span class="string">&#x27;thrift://xxx.xxx.xxx.xxx:9083&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;hive_hbase_table&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如何将hbase 的数据导入clickhouse 呢。一种通过第三方工具,例如 datax 来传输，但是配置比较麻烦。&lt;br&gt;想到clickhouse 支持 hive 外部表查询。我们可以利用建立外部表的方式。将数据抽取到clickhouse 本地。&lt;/p&gt;
&lt;h3 id=</summary>
      
    
    
    
    <category term="clickhouse" scheme="https://sheenzxx.github.io/categories/clickhouse/"/>
    
    
    <category term="hive" scheme="https://sheenzxx.github.io/tags/hive/"/>
    
    <category term="clickhouse" scheme="https://sheenzxx.github.io/tags/clickhouse/"/>
    
    <category term="hbase" scheme="https://sheenzxx.github.io/tags/hbase/"/>
    
  </entry>
  
  <entry>
    <title>maxscale 安装与配置</title>
    <link href="https://sheenzxx.github.io/2023/08/17/maxscale/"/>
    <id>https://sheenzxx.github.io/2023/08/17/maxscale/</id>
    <published>2023-08-17T03:14:31.000Z</published>
    <updated>2023-09-25T07:09:31.559Z</updated>
    
    <content type="html"><![CDATA[<p>maridb 的中间件 maxscale 一个C语言实现的智能代理(intelligent proxy), 提供读写分离,负载均衡和高可用性。它同时维护client端请求的连接以及到后端server的连接。</p><p>下载<br><a href="https://mariadb.com/downloads/community/maxscale/">https://mariadb.com/downloads/community/maxscale/</a></p><p>使用二进制压缩包安装的方式<br>下载: <a href="https://dlm.mariadb.com/3440302/MaxScale/23.08.1/centos/7/x86_64/maxscale-23.08.1.rhel.7.tar.gz">https://dlm.mariadb.com/3440302/MaxScale/23.08.1/centos/7/x86_64/maxscale-23.08.1.rhel.7.tar.gz</a></p><p>安装需要的库<br>libcurl<br>libaio<br>OpenSSL<br>gnutls<br>libatomic<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum -y install libaio  libcurl OpenSSL gnutls libatomic</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /data</span><br><span class="line"></span><br><span class="line">tar -xzvf maxscale-23.08.1.rhel.7.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/local</span><br><span class="line"><span class="built_in">ln</span> -s /data/maxscale-23.08.1.rhel.7 maxscale</span><br><span class="line"></span><br><span class="line">groupadd maxscale</span><br><span class="line">useradd -g maxscale maxscale</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R maxscale:maxscale /data/maxscale</span><br></pre></td></tr></table></figure><br>编辑配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/maxscale/etc</span><br><span class="line"><span class="built_in">cp</span> maxscale.cnf.template maxscale.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment">## 定义写实例</span></span><br><span class="line">[server1]</span><br><span class="line"><span class="built_in">type</span>=server</span><br><span class="line">address=192.168.12.5</span><br><span class="line">port=3306</span><br><span class="line">protocol=MySQLBackend</span><br><span class="line"></span><br><span class="line">[server2]</span><br><span class="line"><span class="built_in">type</span>=server</span><br><span class="line">address=192.168.12.6</span><br><span class="line">port=3306</span><br><span class="line">protocol=MySQLBackend</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义监控</span></span><br><span class="line">[MariaDB-Monitor]</span><br><span class="line"><span class="built_in">type</span>=monitor</span><br><span class="line">module=mariadbmon</span><br><span class="line">servers=server1,server2</span><br><span class="line">user=monitor_user</span><br><span class="line">password=monitor_pw</span><br><span class="line">monitor_interval=2s</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义只读服务</span></span><br><span class="line">[Read-Only-Service]</span><br><span class="line"><span class="built_in">type</span>=service</span><br><span class="line">router=readconnroute</span><br><span class="line">servers=server2</span><br><span class="line">user=service_user</span><br><span class="line">password=service_pw</span><br><span class="line">router_options=slave</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义读写分离服务</span></span><br><span class="line">[Read-Write-Service]</span><br><span class="line"><span class="built_in">type</span>=service</span><br><span class="line">router=readwritesplit</span><br><span class="line">servers=server1,server2</span><br><span class="line">max_slave_replication_lag=3  </span><br><span class="line">user=service_user</span><br><span class="line">password=service_pw</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义只读监听端口</span></span><br><span class="line">[Read-Only-Listener]</span><br><span class="line"><span class="built_in">type</span>=listener</span><br><span class="line">service=Read-Only-Service</span><br><span class="line">protocol=MariaDBClient</span><br><span class="line">port=4008</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义读写监听端口</span></span><br><span class="line">[Read-Write-Listener]</span><br><span class="line"><span class="built_in">type</span>=listener</span><br><span class="line">service=Read-Write-Service</span><br><span class="line">protocol=MariaDBClient</span><br><span class="line">port=4006</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#在实例 server 1,sever 2 上</span></span><br><span class="line"><span class="comment">#创建监控用户</span></span><br><span class="line">CREATE USER <span class="string">&#x27;monitor_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;monitor_pw&#x27;</span>;</span><br><span class="line">GRANT REPLICATION CLIENT, FILE, SUPER, RELOAD, PROCESS, SHOW DATABASES, EVENT ON *.* TO <span class="string">&#x27;monitor_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建连接用户</span></span><br><span class="line">CREATE USER <span class="string">&#x27;service_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;service_pw&#x27;</span>;</span><br><span class="line">GRANT SELECT ON mysql.user TO <span class="string">&#x27;service_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">GRANT SELECT ON mysql.db TO <span class="string">&#x27;service_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">GRANT SELECT ON mysql.tables_priv TO <span class="string">&#x27;service_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">GRANT SELECT ON mysql.columns_priv TO <span class="string">&#x27;service_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">GRANT SELECT ON mysql.procs_priv TO <span class="string">&#x27;service_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">GRANT SELECT ON mysql.proxies_priv TO <span class="string">&#x27;service_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">GRANT SELECT ON mysql.roles_mapping TO <span class="string">&#x27;service_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">GRANT SHOW DATABASES ON *.* TO <span class="string">&#x27;service_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="comment">#指定对库所有操作权限</span></span><br><span class="line">grant all on db.* TO <span class="string">&#x27;service_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动maxscale</span></span><br><span class="line">bin/maxscale -d --basedir=.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#maxscale 部署最佳实践就跟应用部署在同一个服务器上，应用通过连localhost 或 127.0.0.1 来连接数据库</span></span><br><span class="line"><span class="comment">#也可以多台部署。前端通过nginx 等做负载均衡，统一入口</span></span><br></pre></td></tr></table></figure><p>maxctrl 的 相关用法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">Commands:</span><br><span class="line">  maxctrl list &lt;<span class="built_in">command</span>&gt;        List objects</span><br><span class="line">  maxctrl show &lt;<span class="built_in">command</span>&gt;        Show objects</span><br><span class="line">  maxctrl <span class="built_in">set</span> &lt;<span class="built_in">command</span>&gt;         Set object state</span><br><span class="line">  maxctrl clear &lt;<span class="built_in">command</span>&gt;       Clear object state</span><br><span class="line">  maxctrl <span class="built_in">enable</span> &lt;<span class="built_in">command</span>&gt;      Enable functionality</span><br><span class="line">  maxctrl <span class="built_in">disable</span> &lt;<span class="built_in">command</span>&gt;     Disable functionality</span><br><span class="line">  maxctrl create &lt;<span class="built_in">command</span>&gt;      Create objects</span><br><span class="line">  maxctrl destroy &lt;<span class="built_in">command</span>&gt;     Destroy objects</span><br><span class="line">  maxctrl <span class="built_in">link</span> &lt;<span class="built_in">command</span>&gt;        Link objects</span><br><span class="line">  maxctrl <span class="built_in">unlink</span> &lt;<span class="built_in">command</span>&gt;      Unlink objects</span><br><span class="line">  maxctrl start &lt;<span class="built_in">command</span>&gt;       Start objects</span><br><span class="line">  maxctrl stop &lt;<span class="built_in">command</span>&gt;        Stop objects</span><br><span class="line">  maxctrl alter &lt;<span class="built_in">command</span>&gt;       Alter objects</span><br><span class="line">  maxctrl rotate &lt;<span class="built_in">command</span>&gt;      Rotate <span class="built_in">log</span> files</span><br><span class="line">  maxctrl reload &lt;<span class="built_in">command</span>&gt;      Reload objects</span><br><span class="line">  maxctrl call &lt;<span class="built_in">command</span>&gt;        Call module commands</span><br><span class="line">  maxctrl api &lt;<span class="built_in">command</span>&gt;         Raw REST API access</span><br><span class="line">  maxctrl classify &lt;statement&gt;  Classify statement</span><br><span class="line"></span><br><span class="line">Global Options:</span><br><span class="line">  -c, --config     MaxCtrl configuration file</span><br><span class="line">                                            [string] [default: <span class="string">&quot;~/.maxctrl.cnf&quot;</span>]</span><br><span class="line">  -u, --user       Username to use                   [string] [default: <span class="string">&quot;admin&quot;</span>]</span><br><span class="line">  -p, --password   Password <span class="keyword">for</span> the user. To input the password manually, use -p</span><br><span class="line">                   <span class="string">&#x27;&#x27;</span> or --password=<span class="string">&#x27;&#x27;</span>             [string] [default: <span class="string">&quot;mariadb&quot;</span>]</span><br><span class="line">  -h, --hosts      List of MaxScale hosts. The hosts must be <span class="keyword">in</span> HOST:PORT format</span><br><span class="line">                   and each value must be separated by a comma.</span><br><span class="line">                                            [string] [default: <span class="string">&quot;127.0.0.1:8989&quot;</span>]</span><br><span class="line">  -t, --<span class="built_in">timeout</span>    Request <span class="built_in">timeout</span> <span class="keyword">in</span> plain milliseconds, e.g <span class="string">&#x27;-t 1000&#x27;</span>, or as</span><br><span class="line">                   duration with suffix [h|m|s|ms], e.g. <span class="string">&#x27;-t 10s&#x27;</span></span><br><span class="line">                                                     [string] [default: <span class="string">&quot;10000&quot;</span>]</span><br><span class="line">  -q, --quiet      Silence all output. Ignored <span class="keyword">while</span> <span class="keyword">in</span> interactive mode.</span><br><span class="line">                                                      [boolean] [default: <span class="literal">false</span>]</span><br><span class="line">      --tsv        Print tab separated output         [boolean] [default: <span class="literal">false</span>]</span><br><span class="line">      --skip-sync  Disable configuration synchronization <span class="keyword">for</span> this <span class="built_in">command</span></span><br><span class="line">                                                      [boolean] [default: <span class="literal">false</span>]</span><br><span class="line"></span><br><span class="line">HTTPS/TLS Options:</span><br><span class="line">  -s, --secure                  Enable HTTPS requests [boolean] [default: <span class="literal">false</span>]</span><br><span class="line">      --tls-key                 Path to TLS private key                 [string]</span><br><span class="line">      --tls-passphrase          Password <span class="keyword">for</span> the TLS private key        [string]</span><br><span class="line">      --tls-cert                Path to TLS public certificate          [string]</span><br><span class="line">      --tls-ca-cert             Path to TLS CA certificate              [string]</span><br><span class="line">  -n, --tls-verify-server-cert  Whether to verify server TLS certificates</span><br><span class="line">                                                       [boolean] [default: <span class="literal">true</span>]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">      --version  Show version number                                   [boolean]</span><br><span class="line">      --<span class="built_in">help</span>     Show <span class="built_in">help</span>                                             [boolean]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line">maxctrl list --<span class="built_in">help</span></span><br><span class="line">Commands:</span><br><span class="line">  maxctrl list servers              List servers</span><br><span class="line">  maxctrl list services             List services</span><br><span class="line">  maxctrl list listeners [service]  List listeners</span><br><span class="line">  maxctrl list monitors             List monitors</span><br><span class="line">  maxctrl list sessions             List sessions</span><br><span class="line">  maxctrl list filters              List filters</span><br><span class="line">  maxctrl list modules              List loaded modules</span><br><span class="line">  maxctrl list threads              List threads</span><br><span class="line">  maxctrl list <span class="built_in">users</span>                List created <span class="built_in">users</span></span><br><span class="line">  maxctrl list commands             List module commands</span><br><span class="line">  maxctrl list queries              List active queries from all sessions</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;maridb 的中间件 maxscale 一个C语言实现的智能代理(intelligent proxy), 提供读写分离,负载均衡和高可用性。它同时维护client端请求的连接以及到后端server的连接。&lt;/p&gt;
&lt;p&gt;下载&lt;br&gt;&lt;a href=&quot;https://mar</summary>
      
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="中间件" scheme="https://sheenzxx.github.io/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="读写分离" scheme="https://sheenzxx.github.io/tags/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>搭建 shardingsphere-proxy-4.1.1</title>
    <link href="https://sheenzxx.github.io/2023/07/27/sharding-proxy/"/>
    <id>https://sheenzxx.github.io/2023/07/27/sharding-proxy/</id>
    <published>2023-07-27T07:29:41.000Z</published>
    <updated>2023-07-27T07:59:54.254Z</updated>
    
    <content type="html"><![CDATA[<p>shardingsphere-proxy 4.x 跟 5.x 差别比较大。这里介绍4.x proxy 的搭建<br>在 <a href="https://archive.apache.org/dist/shardingsphere/">https://archive.apache.org/dist/shardingsphere/</a> 下载所需版本<br>本文选择的是 apache-shardingsphere-4.1.1-sharding-proxy-bin.tar.gz </p><p>1.安装jdk<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /app</span><br><span class="line">tar -xzvf jdk-8u341-linux-x64.tar.gz </span><br><span class="line">vi ~/.bash_profile</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/app/jdk1.8.0_341</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/.local/bin:<span class="variable">$HOME</span>/bin:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure></p><p>2.解压配置proxy<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 解压bin 包</span></span><br><span class="line"><span class="built_in">cd</span> /app</span><br><span class="line">tar -xzvf apache-shardingsphere-4.1.1-sharding-proxy-bin.tar.gz </span><br><span class="line"><span class="built_in">mv</span> apache-shardingsphere-4.1.1-sharding-proxy-bin shardingsphere-proxy-4.11</span><br><span class="line"></span><br><span class="line"><span class="comment">## 配置授权文件，定义了shardingsphere-proxy 登录的用户以及密码。</span></span><br><span class="line"><span class="built_in">cd</span> shardingsphere-proxy-4.11</span><br><span class="line">vi conf/server.yaml</span><br><span class="line"></span><br><span class="line">authentication:</span><br><span class="line">  <span class="built_in">users</span>:</span><br><span class="line">    root:         <span class="comment"># 用户</span></span><br><span class="line">      password: root  <span class="comment"># 密码</span></span><br><span class="line">    sharding:     <span class="comment"># 用户</span></span><br><span class="line">      password: sharding  <span class="comment"># 密码</span></span><br><span class="line">      authorizedSchemas: beauty_db <span class="comment"># 授权数据库,要设置 在config-x 里面定义的 schemaName</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 配置分片文件</span></span><br><span class="line">vi conf/config-sharding.yaml</span><br><span class="line">schemaName: beauty_db  <span class="comment">## proxy 库名定义</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">dataSources: <span class="comment">## 设置数据源</span></span><br><span class="line">  o2o:  <span class="comment">##数据源名称</span></span><br><span class="line">    url: jdbc:mysql://10.xx.xx.xx:3306/beautydb?serverTimezone=UTC&amp;useSSL=<span class="literal">false</span></span><br><span class="line">    username: beauty</span><br><span class="line">    password: beauty123</span><br><span class="line">    connectionTimeoutMilliseconds: 30000</span><br><span class="line">    idleTimeoutMilliseconds: 60000</span><br><span class="line">    maxLifetimeMilliseconds: 1800000</span><br><span class="line"><span class="comment">## 分片规则定义</span></span><br><span class="line">shardingRule:</span><br><span class="line">  tables:</span><br><span class="line">    wb_service_order:  <span class="comment">## 逻辑表名</span></span><br><span class="line">      actualDataNodes: o2o.wb_service_order_$-&gt;&#123;2022..2023&#125;_$-&gt;&#123;0..9&#125; <span class="comment">## 实际映射的分表&#123;wb_server_order_2022_0 --&gt; wb_server_order_2023_9 &#125;</span></span><br><span class="line">      tableStrategy:</span><br><span class="line">        complex:  <span class="comment">## 分片策略 &#123;standard:标准型 complex: 复合型 inline: 行表达式  hint: 基于hint 的分片策略&#125;</span></span><br><span class="line">          shardingColumns: union_id,create_time  <span class="comment">## 分片字段 ，单字段用shardingColumn 多字段用 shardingColumns</span></span><br><span class="line">          algorithmClassName: cn.smartbreeze.biz.beauty.sharding.algorithm.UnionIdHash10AndTimeYearShardingAlgorithm <span class="comment">##自定义逻辑分片类名</span></span><br><span class="line">    wb_service_order_ext:</span><br><span class="line">      actualDataNodes: o2o.wb_service_order_ext_$-&gt;&#123;2022..2023&#125;_$-&gt;&#123;0..9&#125;</span><br><span class="line">      tableStrategy:</span><br><span class="line">        complex:</span><br><span class="line">          shardingColumns: order_id,create_time</span><br><span class="line">          algorithmClassName: cn.smartbreeze.biz.beauty.sharding.algorithm.OrderId10AndTimeYearShardingAlgorithm</span><br><span class="line">    wb_service_order_log:</span><br><span class="line">      actualDataNodes: o2o.wb_service_order_log_$-&gt;&#123;2023..2023&#125;_$-&gt;&#123;0..9&#125;</span><br><span class="line">      tableStrategy:</span><br><span class="line">        complex:</span><br><span class="line">          shardingColumns: order_id,create_time</span><br><span class="line">          algorithmClassName: cn.smartbreeze.biz.beauty.sharding.algorithm.OrderId10AndTimeYearShardingAlgorithm</span><br><span class="line">    wb_store_schedule:</span><br><span class="line">      actualDataNodes: o2o.wb_store_schedule_$-&gt;&#123;2023..2023&#125;_$-&gt;&#123;0..9&#125;</span><br><span class="line">      tableStrategy:</span><br><span class="line">        complex:</span><br><span class="line">          shardingColumns: store_id,start_time</span><br><span class="line">          algorithmClassName: cn.smartbreeze.biz.beauty.sharding.algorithm.StoreId10AndTimeYearShardingAlgorithm</span><br><span class="line">  bindingTables: <span class="comment">## 需要绑定的表。只展示逻辑名。不展示详细分片表</span></span><br><span class="line">    - wb_service_order ,wb_service_order_ext ,wb_service_order_log ,wb_store_schedule</span><br></pre></td></tr></table></figure><br>3.追加相应jar包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># postgresql 类型的数据库不需要加载驱动包</span></span><br><span class="line"><span class="comment"># mysql 类型数据库需要加载驱动包</span></span><br><span class="line">tar -xzvf mysql-connector-java-5.1.49.tar.gz</span><br><span class="line"><span class="built_in">cp</span> mysql-connector-java-5.1.49/mysql-connector-java-5.1.49.jar  /app/shardingsphere-proxy-4.11/lib <span class="comment"># 驱动包放这个目录底下。</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /app/shardingsphere-proxy-4.11</span><br><span class="line"><span class="built_in">mkdir</span> ext-lib</span><br><span class="line"><span class="built_in">cp</span> store-beauty-biz-0.0.1-SNAPSHOT.jar  store-beauty-core-0.0.1-SNAPSHOT.jar ext-lib <span class="comment">## 这2个为开发写的自定义规则jar 包</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>4.启动验证<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /app/shardingsphere-proxy-4.11</span><br><span class="line">sh bin/start.sh  <span class="comment"># 启动 默认3307 端口。可以通过 sh bin/start.sh $&#123;proxy-port&#125; 的方式自定义端口号</span></span><br><span class="line">sh bin/stop.sh   <span class="comment"># 停止</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#登录验证</span></span><br><span class="line">mysql -usharding -psharding beauty_db --host=x.x.x.x --port=3307 </span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;shardingsphere-proxy 4.x 跟 5.x 差别比较大。这里介绍4.x proxy 的搭建&lt;br&gt;在 &lt;a href=&quot;https://archive.apache.org/dist/shardingsphere/&quot;&gt;https://archive.apa</summary>
      
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="中间件" scheme="https://sheenzxx.github.io/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="分库分表" scheme="https://sheenzxx.github.io/tags/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>处理clickhouse MaterializeMySQL 数据库故障一则</title>
    <link href="https://sheenzxx.github.io/2023/07/21/clickhouseMaterializeMySQL/"/>
    <id>https://sheenzxx.github.io/2023/07/21/clickhouseMaterializeMySQL/</id>
    <published>2023-07-21T06:04:34.000Z</published>
    <updated>2023-07-27T02:32:32.028Z</updated>
    
    <content type="html"><![CDATA[<p>开发同事报clickhouse 的 MaterializeMySQL 数据库查询都报错<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SQL 错误 [48] [07000]: Code: 48, e.displayText() = DB::Exception: Cannot rename and modify the same column `invitation_task_detail` <span class="keyword">in</span> a single ALTER query (version 20.12.4.5 (official build))</span><br><span class="line">, server ClickHouseNode [uri=http://10.82.xxx.xxx:8123/xxxx, options=&#123;use_server_time_zone=<span class="literal">false</span>,use_time_zone=Asia/Shanghai&#125;]@2105728836</span><br></pre></td></tr></table></figure></p><p>后查明原因竟是开发同事在对应的mysql 库修改了表结构。这个时候需要删除重建 MaterializeMySQL 数据库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">sudo docker <span class="built_in">exec</span> -it clickhouse bash</span><br><span class="line">root@WCN-GDUVA-SBKAP1:/<span class="comment"># clickhouse-client --user=default</span></span><br><span class="line">WCN-GDUVA-SBKAP1.aswgcn.asiapacific.aswgroup.net :) drop database store_beauty;</span><br><span class="line"></span><br><span class="line">DROP DATABASE store_beauty</span><br><span class="line"></span><br><span class="line">Query <span class="built_in">id</span>: c4e3933d-8eb4-4ca0-a867-457d4d7e2007</span><br><span class="line"></span><br><span class="line">Ok.</span><br><span class="line"></span><br><span class="line"><span class="comment">## 这里需要开启 allow_experimental_database_materialize_mysql 参数。</span></span><br><span class="line">WCN-GDUVA-SBKAP1.aswgcn.asiapacific.aswgroup.net :) SET allow_experimental_database_materialize_mysql = 1;</span><br><span class="line"></span><br><span class="line">WCN-GDUVA-SBKAP1.aswgcn.asiapacific.aswgroup.net :) CREATE DATABASE store_beauty ENGINE = MaterializeMySQL(<span class="string">&#x27;10.82.xx.xxx:3306&#x27;</span>, <span class="string">&#x27;store_beauty&#x27;</span>, <span class="string">&#x27;repl&#x27;</span>, <span class="string">&#x27;xxxxxx&#x27;</span>);</span><br><span class="line"></span><br><span class="line">WCN-GDUVA-SBKAP1.aswgcn.asiapacific.aswgroup.net :) use store_beauty</span><br><span class="line"></span><br><span class="line">WCN-GDUVA-SBKAP1.aswgcn.asiapacific.aswgroup.net :) show tables;</span><br><span class="line">....</span><br><span class="line">....</span><br><span class="line"><span class="comment">## 发现 生产库正常同步，而uat 只同步了40个表就挂住了。翻看日志</span></span><br><span class="line"><span class="built_in">cd</span> /var/log/clickhouse-server</span><br><span class="line"><span class="built_in">tail</span> -100f clickhouse-server.err.log</span><br><span class="line">...</span><br><span class="line">2023.07.21 03:13:24.147160 [ 128 ] &#123;1ac67e78-ef20-4f55-a3a4-d9d0f96fce9a&#125; &lt;Error&gt; DynamicQueryHandler: Code: 50, e.displayText() = DB::Exception: Unknown data <span class="built_in">type</span> family: json, Stack trace (when copying this message, always include the lines below):</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">## 发现这里报了一个类型错误。相同的操作 在线上没问题。在uat 反而卡住了。开发说uat mysql 库也没动过。</span></span><br><span class="line"><span class="comment">## 一时间以为是uat percona 升级了数据库版本引发的。想尝试升级clickhouse 版本看看</span></span><br><span class="line"><span class="comment">## 拉取最新的 docker 镜像</span></span><br><span class="line">docker pull clickhouse/clickhouse-server:23.4</span><br><span class="line"><span class="comment">## 保存镜像并同步到uat 环境</span></span><br><span class="line">docker save -o clickhouse-server.tar clickhouse/clickhouse-server </span><br><span class="line"><span class="comment">## 在uat 环境中导入</span></span><br><span class="line">sudo docker load -i clickhouse-server.tar</span><br><span class="line"></span><br><span class="line"><span class="comment">## 拉起一个新版本镜像的container</span></span><br><span class="line">sudo docker run -d --name=clickhouse23.4 -p 18123:8123 -p19000:9000  -v /app/clickhouse/data234:/var/lib/clickhouse  --<span class="built_in">ulimit</span> nofile=262144:262144 clickhouse/clickhouse-server</span><br><span class="line"></span><br><span class="line"><span class="comment">## 登入镜像</span></span><br><span class="line">sudo docker <span class="built_in">exec</span> -it clickhouse23.4 bash</span><br><span class="line"><span class="comment">## 开启物化库参数。这里比20.12 的版本上 参数有区别 。materialize(d) 多了一个 字符</span></span><br><span class="line">SET allow_experimental_database_materialized_mysql = 1;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 建库后。发现依然卡在 40个表</span></span><br><span class="line">CREATE DATABASE store_beauty ENGINE = MaterializeMySQL(<span class="string">&#x27;10.82.xx.xxx:3306&#x27;</span>, <span class="string">&#x27;store_beauty&#x27;</span>, <span class="string">&#x27;repl&#x27;</span>, <span class="string">&#x27;xxxxxx&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">## 这次翻看日志可以发现比较清晰。它指出了在dump wb_user_calendar 表的时候，列 spa_content 的 json 类型转换错误。该列在uat 上是json 类型。开发说有很多表都有json 类型</span></span><br><span class="line"><span class="comment">## 查看线上表数据。该列都有数据。而uat 该列没有数据，于是更新该列非null 后问题依旧。</span></span><br><span class="line"><span class="comment">## 于是查看线上mysql 同名表发现 该表实际上是text 类型。而不是json 类型。存储的是json 格式的字符串。</span></span><br><span class="line"><span class="comment">## 修改 uat 字段与线上一致 </span></span><br><span class="line">alter table wb_user_calendar change spa_content spa_content text default null comment <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除数据库重建</span></span><br><span class="line"><span class="comment">## 这次所有表都同步过来了。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="从这次故障可以看出-clickhouse-的-MaterializeMySQL-引擎并不支持-mysql-的json-格式。"><a href="#从这次故障可以看出-clickhouse-的-MaterializeMySQL-引擎并不支持-mysql-的json-格式。" class="headerlink" title="从这次故障可以看出 clickhouse 的 MaterializeMySQL 引擎并不支持 mysql 的json 格式。"></a>从这次故障可以看出 clickhouse 的 MaterializeMySQL 引擎并不支持 mysql 的json 格式。</h2><h2 id="升级clickhouse-到最新版本可解决-mysql-变更表结构不同步clickhouse-问题-并且需要注意MYSQL-修改表的语法"><a href="#升级clickhouse-到最新版本可解决-mysql-变更表结构不同步clickhouse-问题-并且需要注意MYSQL-修改表的语法" class="headerlink" title="升级clickhouse 到最新版本可解决 mysql 变更表结构不同步clickhouse 问题,并且需要注意MYSQL 修改表的语法"></a>升级clickhouse 到最新版本可解决 mysql 变更表结构不同步clickhouse 问题,并且需要注意MYSQL 修改表的语法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 改字段名不要用change的语法， 用rename的语法</span><br><span class="line"></span><br><span class="line">ALTER TABLE 表名 RENAME COLUMN 原字段名 TO 新字段名;</span><br><span class="line"></span><br><span class="line">2. 改字段属性用modify</span><br><span class="line"></span><br><span class="line">ALTER TABLE 表名 MODIFY 字段名 属性;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;开发同事报clickhouse 的 MaterializeMySQL 数据库查询都报错&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/sp</summary>
      
    
    
    
    <category term="clickhouse" scheme="https://sheenzxx.github.io/categories/clickhouse/"/>
    
    
    <category term="MaterializeMySQL" scheme="https://sheenzxx.github.io/tags/MaterializeMySQL/"/>
    
  </entry>
  
  <entry>
    <title>mongodb shard 集群开启分片</title>
    <link href="https://sheenzxx.github.io/2023/07/19/mongoDBUseShared/"/>
    <id>https://sheenzxx.github.io/2023/07/19/mongoDBUseShared/</id>
    <published>2023-07-19T03:22:11.000Z</published>
    <updated>2023-07-19T03:57:07.165Z</updated>
    
    <content type="html"><![CDATA[<p>使用了mongodb 集群。如果没有对数据库。以及表开启分片。所有的库表默认只存在主节点上。分片集群也失去了意义。<br>这里介绍下如何开始数据库分片</p><p>1.安装mongosh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1. 下载mongoshell 1.0 版本</span><br><span class="line"></span><br><span class="line">2. tar -xzvf mongosh-1.10.0-linux-x64.tgz</span><br><span class="line"></span><br><span class="line">3. <span class="built_in">cd</span> mongosh-1.10.0-linux-x64/bin</span><br><span class="line"></span><br><span class="line">4. mongodb 管理控制台上添加白名单</span><br><span class="line"></span><br><span class="line">5. 登录mongoshard 集群</span><br><span class="line">./mongosh <span class="string">&quot;mongodb://s-xxxxxx.mongodb.rds.aliyuncs.com:3717,s-xxxxx.mongodb.rds.aliyuncs.com:3717/admin&quot;</span></span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>2.登录集群后。先授权登录，然后切换到 config 库查看 当前shard集群的同步状态。以及查看分片集群的状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[mongos] admin&gt; db.auth(<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line"> &#123; ok: 1 &#125;</span><br><span class="line"> [mongos] admin&gt; use config</span><br><span class="line"> 查看当前Balancer的状态</span><br><span class="line"> sh.getBalancerState()</span><br><span class="line"> </span><br><span class="line"> 查看分片集群的状态</span><br><span class="line"> sh.status()</span><br></pre></td></tr></table></figure><p>3.设置同步平衡时间窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">设置 Balancer 窗口 窗口时间格式 时间格式为HH:MM  HH取值范围为00 - 23，MM取值范围为00 - 59</span><br><span class="line"> db.settings.updateOne(</span><br><span class="line">   &#123; _id: <span class="string">&quot;balancer&quot;</span> &#125;,</span><br><span class="line">   &#123; <span class="variable">$set</span>: &#123; activeWindow : &#123; start : <span class="string">&quot;00:00&quot;</span>, stop : <span class="string">&quot;09:00&quot;</span> &#125; &#125; &#125;,</span><br><span class="line">   &#123; upsert: <span class="literal">true</span> &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">如果需要balancer 始终运行，则设置如下</span><br><span class="line">db.settings.updateOne(&#123; _id : <span class="string">&quot;balancer&quot;</span> &#125;, &#123; <span class="variable">$unset</span> : &#123; activeWindow : <span class="literal">true</span> &#125; &#125;)  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.开启 Balancer 功能<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh.setBalancerState(<span class="literal">true</span>) </span><br></pre></td></tr></table></figure></p><p>5.如何关闭 Balancer 功能<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 执行如下脚本。确定 balaner 进程没在运行</span></span><br><span class="line"><span class="keyword">while</span>( sh.isBalancerRunning()[<span class="string">&quot;inBalancerRound&quot;</span>]) &#123;</span><br><span class="line">          <span class="built_in">print</span>(<span class="string">&quot;waiting...&quot;</span>);</span><br><span class="line">          <span class="built_in">sleep</span>(1000);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">## 返回值为空，表示Balancer没有处于执行任务的状态，此时可执行下一步的操作，关闭Balancer </span></span><br><span class="line"><span class="comment">## 返回值为waiting，表示Balancer正在执行块迁移，此时不能执行关闭Balancer的命令，否则可能引起数据不一致</span></span><br><span class="line"><span class="comment">## 需注意的是 在同步过程中sh.isBalancerRunning 也可能出现短暂的终止。 配合  sh.getBalancerState() 一起看比较稳妥</span></span><br><span class="line"><span class="comment">## 另一个可以观察 shard 分片上的 CPU 波动。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 确认没有同步任务时可以执行停止</span></span><br><span class="line">sh.stopBalancer()</span><br></pre></td></tr></table></figure></p><p>6.为数据库开启分片功能(config 库上执行)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 数据库开启分片[config库上执行]</span></span><br><span class="line">sh.enableSharding(<span class="string">&quot;&lt;database&gt;&quot;</span>)</span><br><span class="line"><span class="comment">## 例如</span></span><br><span class="line">sh.enableSharding(<span class="string">&quot;mongodbtest&quot;</span>)</span><br></pre></td></tr></table></figure></p><p>7.为collection 建立分片索引(在目标库上执行)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 命令</span></span><br><span class="line">db.&lt;collection&gt;.createIndex(&lt;keyPatterns&gt;,&lt;options&gt;)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 参数说明：</span></span><br><span class="line">    &lt;collection&gt;：集合名。</span><br><span class="line">    &lt;keyPatterns&gt;：包含用于建立索引的字段和索引类型。</span><br><span class="line">    常见的索引类型如下：</span><br><span class="line">       1：创建升序索引</span><br><span class="line">       -1：创建降序索引</span><br><span class="line">       <span class="string">&quot;hashed&quot;</span>：创建哈希索引</span><br><span class="line">    &lt;options&gt;：表示接收可选参数，详情请参见db.collection.createIndex()，本操作示例中暂未使用到该字段</span><br><span class="line"><span class="comment">## 例子</span></span><br><span class="line"><span class="comment">##创建升序索引示例，基于范围的分片</span></span><br><span class="line">db.customer.createIndex(&#123;name:1&#125;)</span><br><span class="line"><span class="comment">## 创建哈希索引示例，基于指定列的hash 分片</span></span><br><span class="line">db.customer.createIndex(&#123;name:<span class="string">&quot;hashed&quot;</span>&#125;)</span><br></pre></td></tr></table></figure></p><p>8.开启 collection 的分片<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 命令</span></span><br><span class="line">sh.shardCollection(<span class="string">&quot;&lt;database&gt;.&lt;collection&gt;&quot;</span>,&#123; <span class="string">&quot;&lt;key&gt;&quot;</span>:&lt;value&gt; &#125; )</span><br><span class="line"></span><br><span class="line"><span class="comment">##参数说明：</span></span><br><span class="line">    &lt;database&gt;：数据库名。</span><br><span class="line">    &lt;collection&gt;：集合名。</span><br><span class="line">    &lt;key&gt;：分片的键，MongoDB将根据片键的值进行数据分片。</span><br><span class="line">    &lt;value&gt;  1：表示基于范围分片，通常能很好地支持基于片键的范围查询。</span><br><span class="line">             “hashed”：表示基于哈希分片，通常能将写入均衡分布到各Shard节点中。</span><br><span class="line"></span><br><span class="line"><span class="comment">## 例子</span></span><br><span class="line"><span class="comment">## 基于范围分片的配置示例</span></span><br><span class="line">sh.shardCollection(<span class="string">&quot;mongodbtest.customer&quot;</span>,&#123;<span class="string">&quot;name&quot;</span>:1&#125;)</span><br><span class="line"><span class="comment">## 基于哈希分片的配置示例</span></span><br><span class="line">sh.shardCollection(<span class="string">&quot;mongodbtest.customer&quot;</span>,&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;hashed&quot;</span>&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用了mongodb 集群。如果没有对数据库。以及表开启分片。所有的库表默认只存在主节点上。分片集群也失去了意义。&lt;br&gt;这里介绍下如何开始数据库分片&lt;/p&gt;
&lt;p&gt;1.安装mongosh&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;</summary>
      
    
    
    
    <category term="mongodb" scheme="https://sheenzxx.github.io/categories/mongodb/"/>
    
    
    <category term="sharding" scheme="https://sheenzxx.github.io/tags/sharding/"/>
    
    <category term="replica" scheme="https://sheenzxx.github.io/tags/replica/"/>
    
  </entry>
  
  <entry>
    <title>用xtrabackup 备份恢复Docker 的实例</title>
    <link href="https://sheenzxx.github.io/2023/07/17/xtrabackupwithDocker/"/>
    <id>https://sheenzxx.github.io/2023/07/17/xtrabackupwithDocker/</id>
    <published>2023-07-17T06:28:36.000Z</published>
    <updated>2023-07-19T01:59:39.371Z</updated>
    
    <content type="html"><![CDATA[<p>1.拉取 xtrbackup Docker 镜像<br>镜像版本可以在 <a href="https://hub.docker.com/r/percona/percona-xtrabackup/tags">https://hub.docker.com/r/percona/percona-xtrabackup/tags</a> 查找<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull percona/percona-xtrabackup:8.0.33-27 </span><br></pre></td></tr></table></figure></p><p>2.写一个可以支持全备和增量备份的脚本。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> xtrabackupDocker.sh </span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="comment"># 注意所有要docker挂载的路径都要有777 权限。否则都会报权限错误</span></span><br><span class="line"><span class="comment"># 全备和增备都以日期目录存储</span></span><br><span class="line"><span class="comment"># 增量备份 为取全备目录里面最新的一个全备为基础备份。没有基础备份退出增量备份</span></span><br><span class="line"></span><br><span class="line">fullTag=<span class="variable">$1</span></span><br><span class="line">BACKUP_PATH=/data/percona_data/backup</span><br><span class="line"></span><br><span class="line">today=`<span class="built_in">date</span> +<span class="string">&#x27;%Y%m%d_%H%M&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">##创建备份路径</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">build_path</span></span>()&#123;</span><br><span class="line">   <span class="keyword">if</span> [ ! -d <span class="variable">$&#123;BACKUP_PATH&#125;</span>/full ];<span class="keyword">then</span></span><br><span class="line">      <span class="built_in">mkdir</span> -p <span class="variable">$&#123;BACKUP_PATH&#125;</span>/full</span><br><span class="line">      <span class="built_in">chmod</span> 777 <span class="variable">$&#123;BACKUP_PATH&#125;</span>/full</span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">   <span class="keyword">if</span> [ ! -d <span class="variable">$&#123;BACKUP_PATH&#125;</span>/inc ];<span class="keyword">then</span></span><br><span class="line">      <span class="built_in">mkdir</span> -p <span class="variable">$&#123;BACKUP_PATH&#125;</span>/inc</span><br><span class="line">      <span class="built_in">chmod</span> 777 <span class="variable">$&#123;BACKUP_PATH&#125;</span>/inc</span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 全备函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">full_backup</span></span>()&#123;</span><br><span class="line">   <span class="built_in">cd</span> <span class="variable">$&#123;BACKUP_PATH&#125;</span>/full</span><br><span class="line">   <span class="keyword">if</span> [ -d <span class="variable">$&#123;BACKUP_PATH&#125;</span>/full/<span class="variable">$today</span> ];<span class="keyword">then</span></span><br><span class="line">      <span class="built_in">rm</span> -rf <span class="variable">$&#123;BACKUP_PATH&#125;</span>/full/<span class="variable">$today</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">   <span class="built_in">mkdir</span> <span class="variable">$today</span></span><br><span class="line">   <span class="built_in">chmod</span> 777 <span class="variable">$today</span></span><br><span class="line">   </span><br><span class="line">   docker run --name percona-xtrabackup \</span><br><span class="line">     --volumes-from percona-server8033 \    </span><br><span class="line">     -v <span class="variable">$&#123;BACKUP_PATH&#125;</span>/full/<span class="variable">$today</span>:/backup \</span><br><span class="line">     percona/percona-xtrabackup:8.0.33-27  \</span><br><span class="line">     xtrabackup --backup --datadir=/var/lib/mysql/ --target-dir=/backup \</span><br><span class="line">     --user=root --password=123456</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 增量备份</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">inc_backup</span></span>()&#123;</span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$&#123;BACKUP_PATH&#125;</span>/inc</span><br><span class="line">  <span class="keyword">if</span> [ -d <span class="variable">$&#123;BACKUP_PATH&#125;</span>/inc/<span class="variable">$today</span> ];<span class="keyword">then</span></span><br><span class="line">      <span class="built_in">rm</span> -rf <span class="variable">$&#123;BACKUP_PATH&#125;</span>/inc/<span class="variable">$today</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">mkdir</span> <span class="variable">$today</span></span><br><span class="line">  <span class="built_in">chmod</span> 777 <span class="variable">$today</span></span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$&#123;BACKUP_PATH&#125;</span>/full</span><br><span class="line">  last_full=<span class="variable">$BACKUP_PATH</span>/full/$(<span class="built_in">ls</span> -t | <span class="built_in">head</span> -1)</span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$last_full</span>&quot;</span> = <span class="string">&quot;<span class="variable">$BACKUP_PATH</span>/full/&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">     <span class="built_in">exit</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$&#123;BACKUP_PATH&#125;</span>/inc</span><br><span class="line">  docker run --name percona-xtrabackup \</span><br><span class="line">     --volumes-from percona-server8033 \</span><br><span class="line">     -v <span class="variable">$last_full</span>:/backup \</span><br><span class="line">     -v <span class="variable">$&#123;BACKUP_PATH&#125;</span>/inc/<span class="variable">$today</span>:/inc \</span><br><span class="line">     percona/percona-xtrabackup:8.0.33-27  \</span><br><span class="line">     xtrabackup --backup --datadir=/var/lib/mysql/ --target-dir=/inc \</span><br><span class="line">     --incremental-basedir=/backup \</span><br><span class="line">     --user=root --password=123456</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">##创建路径</span></span><br><span class="line">build_path || <span class="built_in">return</span> 1</span><br><span class="line"></span><br><span class="line"><span class="comment">##清除docker 容器</span></span><br><span class="line">containerId=`docker ps -a |grep percona-xtrabackup|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`</span><br><span class="line">docker <span class="built_in">rm</span> <span class="variable">$containerId</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$fullTag</span>&quot;</span> = <span class="string">&quot;full&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">   full_backup</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   inc_backup</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><p>3.发起备份<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x xtrabackupDocker.sh</span><br><span class="line">./xtrabackupDocker.sh full <span class="comment">## 为发起全备</span></span><br><span class="line">./xtrabackupDocker.sh <span class="comment">## 不加参数为增备</span></span><br></pre></td></tr></table></figure></p><p>4.恢复备份<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span>  /data/percona_data/backup/full</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">20230714_1528</span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建恢复容器</span></span><br><span class="line">docker create --name percona-xtrabackup_recovery --volumes-from percona-server8033 \</span><br><span class="line">-v /data/percona_data/backup/full/20230714_1528:/backup \</span><br><span class="line">-v /data/percona_data/conf/my.cnf:/etc/mysql/conf.d/my.cnf \</span><br><span class="line">percona/percona-xtrabackup:8.0.33-27  \</span><br><span class="line">xtrabackup --defaults-file=/etc/mysql/conf.d/my.cnf  --prepare --target-dir=/backup \</span><br><span class="line">--user=root --password=123456</span><br><span class="line"></span><br><span class="line"><span class="comment">## 执行恢复命令</span></span><br><span class="line">docker start -ai percona-xtrabackup  <span class="comment"># 第一遍执行</span></span><br><span class="line">docker start -ai percona-xtrabackup  <span class="comment"># 第二遍执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 将目录拷回原来的数据目录</span></span><br><span class="line">docker stop percona-server8033</span><br><span class="line"><span class="built_in">cd</span> /data/percona_data/</span><br><span class="line"><span class="built_in">mv</span> data8033 data8033_bak</span><br><span class="line"><span class="built_in">mv</span> /data/percona_data/backup/full/20230714_1528 data8033</span><br><span class="line">docker start percona-server8033</span><br></pre></td></tr></table></figure></p><p>5.增量备份的恢复<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 先全量恢复。需要带  --apply-log-only 只应用日志</span></span><br><span class="line">docker run --name percona-xtrabackup_recovery --volumes-from percona-server8033 \</span><br><span class="line">-v /data/percona_data/backup/full/20230714_1528:/backup \</span><br><span class="line">-v /data/percona_data/conf/my.cnf:/etc/mysql/conf.d/my.cnf \</span><br><span class="line">percona/percona-xtrabackup:8.0.33-27  \</span><br><span class="line">xtrabackup --defaults-file=/etc/mysql/conf.d/my.cnf  --prepare --apply-log-only --target-dir=/backup \</span><br><span class="line">--user=root --password=123456</span><br><span class="line"></span><br><span class="line"><span class="comment">## 跑完就删 container .或者指定不同名字的container </span></span><br><span class="line"></span><br><span class="line">docker ps -a |grep percona-xtrabackup_recovery </span><br><span class="line">docker <span class="built_in">rm</span> <span class="variable">$container_id</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 恢复增量 本文实例为基于全量的增量。所以恢复时只需要指定最后一个增量 </span></span><br><span class="line"><span class="comment">## 如果是多级增量备份 只要不是最后一个增量，就需要加上 --apply-log-only 选项。最后一个增量恢复去除该选项即可</span></span><br><span class="line">docker run --name percona-xtrabackup_recovery --volumes-from percona-server8033 \</span><br><span class="line">-v /data/percona_data/backup/inc/20230715_1528:/inc \</span><br><span class="line">-v /data/percona_data/conf/my.cnf:/etc/mysql/conf.d/my.cnf \</span><br><span class="line">percona/percona-xtrabackup:8.0.33-27  \</span><br><span class="line">xtrabackup --defaults-file=/etc/mysql/conf.d/my.cnf  --prepare --target-dir=/backup \</span><br><span class="line">--user=root --password=123456</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>6.利用备份恢复为从库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 先建一个从库的container </span></span><br><span class="line"><span class="comment">## 从库配置文件myslave.cnf 配置好从库相关选项。server-id 不能跟主库一样</span></span><br><span class="line">docker run -d \</span><br><span class="line">--name=percona-server8033_slave \</span><br><span class="line">-v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">-v /etc/timezone:/etc/timezone  \</span><br><span class="line">-v /data/percona_data/data8033_slave:/var/lib/mysql \</span><br><span class="line">-v /data/percona_data/conf/myslave.cnf:/etc/my.cnf \</span><br><span class="line">-p 3307:3306 \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">percona/percona-server:8.0.33-25  \</span><br><span class="line">--character-set-server=utf8mb4 \</span><br><span class="line">--collation-server=utf8mb4_unicode_ci</span><br><span class="line"></span><br><span class="line">[root@localhost backup]<span class="comment"># docker ps -a</span></span><br><span class="line">CONTAINER ID   IMAGE                                  COMMAND                  CREATED      STATUS                  PORTS                                                  NAMES</span><br><span class="line">9a2016f84858   percona/percona-server:8.0.33-25       <span class="string">&quot;/docker-entrypoint.…&quot;</span>   2 days ago   Up 2 days               33060/tcp, 0.0.0.0:3307-&gt;3306/tcp, :::3307-&gt;3306/tcp   percona-server8033_slave</span><br><span class="line">docker logs 9a2016f84858 --follow</span><br><span class="line"></span><br><span class="line"><span class="comment">## 等初始化完成之后，停掉container</span></span><br><span class="line">docker stop percona-server8033_slave</span><br><span class="line"><span class="comment">## 恢复备份</span></span><br><span class="line">docker create --name percona-xtrabackup_recovery --volumes-from percona-server8033 \</span><br><span class="line">-v /data/percona_data/backup/full/20230714_1528:/backup \</span><br><span class="line">-v /data/percona_data/conf/my.cnf:/etc/mysql/conf.d/my.cnf \</span><br><span class="line">percona/percona-xtrabackup:8.0.33-27  \</span><br><span class="line">xtrabackup --defaults-file=/etc/mysql/conf.d/my.cnf  --prepare --target-dir=/backup \</span><br><span class="line">--user=root --password=123456</span><br><span class="line"></span><br><span class="line"><span class="comment">## 执行恢复命令</span></span><br><span class="line">docker start -ai percona-xtrabackup  <span class="comment"># 第一遍执行</span></span><br><span class="line">docker start -ai percona-xtrabackup  <span class="comment"># 第二遍执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 替换目录，将恢复的目录替为 /data/percona_data/data8033_slave 的目录</span></span><br><span class="line"><span class="built_in">mv</span> /data/percona_data/data8033_slave /data/percona_data/data8033_slave_bak</span><br><span class="line"><span class="built_in">mv</span> /data/percona_data/backup/full/20230714_1528 /data/percona_data/data8033_slave</span><br><span class="line"><span class="built_in">chmod</span> 777 /data/percona_data/data8033_slave</span><br><span class="line"></span><br><span class="line"><span class="comment">## 启动 从库容器</span></span><br><span class="line">docker start percona-server8033_slave</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在主库创建复制账号</span></span><br><span class="line">docker <span class="built_in">exec</span> -it percona-server8033 mysql -uroot -p123456 -e <span class="string">&quot;create user repl@&#x27;%&#x27; identified by &#x27;repl&#x27;;grant select,replication slave on *.* to repl@&#x27;%&#x27;;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 获取备份时的gtid 信息</span></span><br><span class="line"><span class="built_in">cd</span>  data8033_slave</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> xtrabackup_info</span><br><span class="line">...</span><br><span class="line">binlog_pos = filename <span class="string">&#x27;binlog.000007&#x27;</span>, position <span class="string">&#x27;197&#x27;</span>, GTID of the last change <span class="string">&#x27;c1ef4787-206b-11ee-8d03-0242ac110002:1-77&#x27;</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">## 设置从库gtid 信息</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it percona-server8033_slave mysql -uroot -p123456 -e <span class="string">&quot;reset slave;reset master; set gtid_purged=&#x27;c1ef4787-206b-11ee-8d03-0242ac110002:1-77&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 设置从库连接主库信息</span></span><br><span class="line">docker <span class="built_in">exec</span> -it percona-server8033_slave mysql -uroot -p123456 -e <span class="string">&quot;CHANGE REPLICATION SOURCE TO \</span></span><br><span class="line"><span class="string">&gt; SOURCE_HOST=&#x27;192.168.56.15&#x27;,\</span></span><br><span class="line"><span class="string">&gt; SOURCE_PORT=3306,\</span></span><br><span class="line"><span class="string">&gt; SOURCE_USER=&#x27;repl&#x27;,\</span></span><br><span class="line"><span class="string">&gt; SOURCE_PASSWORD=&#x27;repl&#x27;,\</span></span><br><span class="line"><span class="string">&gt; SOURCE_AUTO_POSITION=1;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">docker <span class="built_in">exec</span> -it percona-server8033_slave mysql -uroot -p123456 -e <span class="string">&quot;start slave;show slave status\G&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.拉取 xtrbackup Docker 镜像&lt;br&gt;镜像版本可以在 &lt;a href=&quot;https://hub.docker.com/r/percona/percona-xtrabackup/tags&quot;&gt;https://hub.docker.com/r/percona/p</summary>
      
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="docker" scheme="https://sheenzxx.github.io/tags/docker/"/>
    
    <category term="percona" scheme="https://sheenzxx.github.io/tags/percona/"/>
    
    <category term="xtrabackup" scheme="https://sheenzxx.github.io/tags/xtrabackup/"/>
    
  </entry>
  
  <entry>
    <title>对 docker Percona mysql 进行版本替换升级</title>
    <link href="https://sheenzxx.github.io/2023/07/12/dokerPerconaUpgrade/"/>
    <id>https://sheenzxx.github.io/2023/07/12/dokerPerconaUpgrade/</id>
    <published>2023-07-12T05:50:34.000Z</published>
    <updated>2023-07-19T03:15:48.265Z</updated>
    
    <content type="html"><![CDATA[<p>客户有一套 percona mysql 运行在Docker 中。版本为 8.0.25-15,经等保扫描有一些漏洞需要修复。需要对这套数据库进行版本升级。<br>版本替换需要停机处理。</p><ol><li><p>在能连外网的机器上下载最新的 Percona-server Docker 版本。<br>版本列表见：<a href="https://registry.hub.docker.com/r/percona/percona-server/tags?page=1&amp;name=8.0">https://registry.hub.docker.com/r/percona/percona-server/tags?page=1&amp;name=8.0</a><br>找到当前最新版本 8.0.33-25<br><code>docker pull percona/percona-server:8.0.33-25</code></p></li><li><p>将镜像导出。<br><code>docker save -o percona-server:8.0.33-25.tar percona/percona-server:8.0.33-25</code></p></li><li><p>将镜像同步到线上环境导入<br><code>docker load &lt; percona-server:8.0.33-25.tar</code><br>如果没有采用 [新镜像名称]:[新镜像标签] 的命名方式。导入后在 docker images 中只能看到 REPOSITORY  TAG 2 列都是 None<br>这时需要修改镜像名称<br><code>docker tag [镜像id] [新镜像名称]:[新镜像标签]</code></p></li><li><p>停止 当前运行的 percona-server 实例,并删除container</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost percona_data]<span class="comment"># docker ps </span></span><br><span class="line">CONTAINER ID   IMAGE                              COMMAND                  CREATED         STATUS         PORTS                                                  NAMES</span><br><span class="line">ef10071274a8   percona/percona-server:8.0.25-15   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   3 seconds ago   Up 2 seconds   33060/tcp, 0.0.0.0:3308-&gt;3306/tcp, :::3308-&gt;3306/tcp   percona-server8025</span><br><span class="line"></span><br><span class="line">[root@localhost percona_data]<span class="comment"># docker stop percona-server8025</span></span><br><span class="line">percona-server8025</span><br><span class="line">[root@localhost percona_data]<span class="comment"># docker rm percona-server8025 </span></span><br><span class="line">percona-server8025</span><br></pre></td></tr></table></figure></li><li><p>用新的版本重新拉起container</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker run  -d \</span><br><span class="line">&gt; --name=percona-server8025 \</span><br><span class="line">&gt; -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">&gt; -v /etc/timezone:/etc/timezone  \</span><br><span class="line">&gt; -v /data/percona_data/data8025:/var/lib/mysql \</span><br><span class="line">&gt; -v /data/percona_data/conf:/etc/my.cnf.d \</span><br><span class="line">&gt; -p 3308:3306 \</span><br><span class="line">&gt; -e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">&gt; percona/percona-server:8.0.33-25  \  <span class="comment">## 此处替换新版本  </span></span><br><span class="line">&gt; --character-set-server=utf8mb4 \</span><br><span class="line">&gt; --collation-server=utf8mb4_unicode_ci</span><br><span class="line">ac487a648370b3fc92e9ac67d6b0addaa89082dc29f0f9148f9c12a9597d6c91</span><br><span class="line"></span><br><span class="line">[root@localhost percona_data]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                              COMMAND                  CREATED         STATUS         PORTS                                                  NAMES</span><br><span class="line">ac487a648370   percona/percona-server:8.0.33-25   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   4 seconds ago   Up 3 seconds   33060/tcp, 0.0.0.0:3308-&gt;3306/tcp, :::3308-&gt;3306/tcp   percona-server8025</span><br></pre></td></tr></table></figure></li><li><p>查看日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">2023-07-19T02:19:21.459842Z 0 [Warning] [MY-011068] [Server] The syntax <span class="string">&#x27;log_slave_updates&#x27;</span> is deprecated and will be removed <span class="keyword">in</span> a future release. Please use log_replica_updates instead.</span><br><span class="line">2023-07-19T02:19:21.459865Z 0 [Warning] [MY-011068] [Server] The syntax <span class="string">&#x27;log_slave_updates&#x27;</span> is deprecated and will be removed <span class="keyword">in</span> a future release. Please use log_replica_updates instead.</span><br><span class="line">2023-07-19T02:19:21.459877Z 0 [Warning] [MY-011068] [Server] The syntax <span class="string">&#x27;skip_slave_start&#x27;</span> is deprecated and will be removed <span class="keyword">in</span> a future release. Please use skip_replica_start instead.</span><br><span class="line">2023-07-19T02:19:21.460998Z 0 [Warning] [MY-010097] [Server] Insecure configuration <span class="keyword">for</span> --secure-log-path: Current value does not restrict location of generated files. Consider setting it to a valid, non-empty path.</span><br><span class="line">2023-07-19T02:19:21.461043Z 0 [Warning] [MY-010918] [Server] <span class="string">&#x27;default_authentication_plugin&#x27;</span> is deprecated and will be removed <span class="keyword">in</span> a future release. Please use authentication_policy instead.</span><br><span class="line">2023-07-19T02:19:21.461062Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.33-25) starting as process 1</span><br><span class="line">2023-07-19T02:19:21.467176Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2023-07-19T02:19:22.089039Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2023-07-19T02:19:25.524903Z 4 [System] [MY-013381] [Server] Server upgrade from <span class="string">&#x27;80025&#x27;</span> to <span class="string">&#x27;80033&#x27;</span> started.  <span class="comment">## 8.0 的升级不需要执行mysql_upgrade mysqld 在启动后自动升级</span></span><br><span class="line">mbind: Operation not permitted</span><br><span class="line">2023-07-19T02:19:38.722702Z 4 [System] [MY-013381] [Server] Server upgrade from <span class="string">&#x27;80025&#x27;</span> to <span class="string">&#x27;80033&#x27;</span> completed.  <span class="comment">## 版本升级完成</span></span><br><span class="line">2023-07-19T02:19:38.970169Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class="line">2023-07-19T02:19:38.970198Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported <span class="keyword">for</span> this channel.</span><br><span class="line">2023-07-19T02:19:39.014404Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready <span class="keyword">for</span> connections. Version: <span class="string">&#x27;8.0.33-25&#x27;</span>  socket: <span class="string">&#x27;/var/lib/mysql/mysql.sock&#x27;</span>  port: 3306  Percona Server (GPL), Release 25, Revision 60c9e2c5.</span><br><span class="line">2023-07-19T02:19:39.014473Z 0 [System] [MY-011323] [Server] X Plugin ready <span class="keyword">for</span> connections. Bind-address: <span class="string">&#x27;::&#x27;</span> port: 33060, socket: /var/lib/mysql/mysqlx.sock</span><br></pre></td></tr></table></figure></li><li><p>数据检测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost data8025]# docker exec -it percona-server8025  mysql -uroot -p123456 -e &quot;select * from sheen.test1;&quot;</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">+------+-------+</span><br><span class="line">| id   | title |</span><br><span class="line">+------+-------+</span><br><span class="line">|    1 | aa    |</span><br><span class="line">|    2 | bb    |</span><br><span class="line">+------+-------+</span><br></pre></td></tr></table></figure></li><li><p>对于在没有root 权限 需要使用sudo 的情况下 需要加上 —privileged=true 这个参数。否则在初始化的时候会报路径权限不足</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run  -d \    <span class="comment"># run create + start 一个container -d 后台运行</span></span><br><span class="line">--privileged=<span class="literal">true</span> \ <span class="comment"># 将扩展权限给这个container</span></span><br><span class="line">--name=percona-server8033 \  <span class="comment"># container 名称</span></span><br><span class="line">-v /etc/localtime:/etc/localtime:ro \ <span class="comment"># -v 将本地目录 映射到 容器中对应的目录</span></span><br><span class="line">-v /etc/timezone:/etc/timezone  \</span><br><span class="line">-v /data/percona_data/data8033:/var/lib/mysql \   <span class="comment"># 数据库的数据目录</span></span><br><span class="line">-v /data/percona_data/conf:/etc/my.cnf.d \        <span class="comment"># 数据库的配置文件目录</span></span><br><span class="line">-p 3306:3306 \                                    <span class="comment"># -p 端口映射。在宿主机上起一个端口映射容器里面服务的端口。</span></span><br><span class="line">-e MYSQL_ROOT_PASSWORD=future123456 \             <span class="comment"># -e 容器环境变量，这里指定 mysql root 的密码</span></span><br><span class="line">percona/percona-server:8.0.33-25  \               <span class="comment"># 使用的镜像</span></span><br><span class="line">--character-set-server=utf8mb4 \                  <span class="comment"># 指定数据库的字符集</span></span><br><span class="line">--collation-server=utf8mb4_unicode_ci             <span class="comment"># 指定数据库的 colllaction</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;客户有一套 percona mysql 运行在Docker 中。版本为 8.0.25-15,经等保扫描有一些漏洞需要修复。需要对这套数据库进行版本升级。&lt;br&gt;版本替换需要停机处理。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在能连外网的机器上下载最新的 Percona-server</summary>
      
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="docker" scheme="https://sheenzxx.github.io/tags/docker/"/>
    
    <category term="percona" scheme="https://sheenzxx.github.io/tags/percona/"/>
    
  </entry>
  
  <entry>
    <title>mongodb 4.2 sharding 建删索引引发的一次故障</title>
    <link href="https://sheenzxx.github.io/2023/07/03/mongoShardFault1/"/>
    <id>https://sheenzxx.github.io/2023/07/03/mongoShardFault1/</id>
    <published>2023-07-03T07:57:31.000Z</published>
    <updated>2023-07-03T10:12:43.775Z</updated>
    
    <content type="html"><![CDATA[<p>由于以前开发在使用时并没有注意到sharding 分片的使用。导致表并未做分片。所有数据都压在主节点上。造成集群中一个分片<br>空间使用率接近90%,而另一个分片使用率0%。需要对整个库所有的表都开启分片处理。今天对其中一个表进行分片键索引的添加。<br>同时开发那边递交几个索引。说是应用上使用不到的，可以删掉，腾出些空间。于是开始操作，先建索引。然后再删掉无用索引。</p><p>建hash 索引(50分钟后。索引建立完成)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.wuid_xxxx_record.createIndex(&#123;&quot;wuid&quot;:&quot;hashed&quot;&#125;)</span><br></pre></td></tr></table></figure></p><p>删除索引(索引建完后，开始执行清除无用索引)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.wuid.dropIndex(&quot;platform_type_1&quot;) </span><br><span class="line">db.wuid_xxxx_record.dropIndex(&quot;platform_type_1&quot;)</span><br><span class="line">db.wuid_xxxx_request.dropIndex(&quot;platform_type_1&quot;)</span><br><span class="line">db.wuid_xxx.dropIndex(&quot;platform_type_1&quot;)</span><br></pre></td></tr></table></figure><br>过了一分钟后。也就是在11:47分,突然应用接口开始报超时。数据监控的读写队列开始飙升。数据库响应非常慢。查看shard分片监控:</p><h4 id="主库cpu使用率"><a href="#主库cpu使用率" class="headerlink" title="主库cpu使用率"></a>主库cpu使用率</h4><p><img src="images/pcpu.png" alt="pcpu"></p><h4 id="主库OpCounter"><a href="#主库OpCounter" class="headerlink" title="主库OpCounter"></a>主库OpCounter</h4><p><img src="images/pOp.png" alt="pOp"></p><h4 id="主库读写队列"><a href="#主库读写队列" class="headerlink" title="主库读写队列"></a>主库读写队列</h4><p><img src="images/pwr.png" alt="pwr"><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ob.currentOp()  ##查出来有2000个连接</span><br></pre></td></tr></table></figure><br>丈二和尚摸不着头脑 T.T。执行索引清除不会锁表。不应该会导致大量语句堵塞。于是赶紧开单问了阿里童靴。<br>经过阿里童靴一番查看之后。说是从库写多CPU打满,从库复制落后主库10秒后引发主库限流。</p><h4 id="从库影响主库？"><a href="#从库影响主库？" class="headerlink" title="从库影响主库？"></a>从库影响主库？</h4><p>查看分片从库节点监控</p><h4 id="从库cpu使用率以及Opcounter"><a href="#从库cpu使用率以及Opcounter" class="headerlink" title="从库cpu使用率以及Opcounter"></a>从库cpu使用率以及Opcounter</h4><p><img src="images/sOp.png" alt="sOp"></p><h4 id="从库读写队列"><a href="#从库读写队列" class="headerlink" title="从库读写队列"></a>从库读写队列</h4><p><img src="images/swr.png" alt="swr"></p><p>从库写多。但是当时主库的currentOp 并没有特别的增加。而且主库都没事。为啥从库会在那个点突然就飚到100%使用率？<br>请阿里的同学再细查下从库当时从库的操作。后面给出的结论是。主库上执行创建索引的操作在从库回放，开始build index,<br>执行一段时间之后。刚好又接收到主库发来的drop Index 。这时 wuid_xxxx_record 同时执行 create index 和 drop index<br>导致从库的CPU 飙高到100%。 从库响应慢了，导致触发架构中的分片主从节点数据同步保护机制(默认从库落后主库10s)。<br>引发了对主库操作的限流，从而导致到主库的请求全部被堵塞在队列中。导致应用的请求全部超时。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>以后的操作要同时注意shard 分片的状态。同时有删索引建索引操作的。最好先执行删索引再执行建索引。这样避免有相同表出现<br>上述情况。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于以前开发在使用时并没有注意到sharding 分片的使用。导致表并未做分片。所有数据都压在主节点上。造成集群中一个分片&lt;br&gt;空间使用率接近90%,而另一个分片使用率0%。需要对整个库所有的表都开启分片处理。今天对其中一个表进行分片键索引的添加。&lt;br&gt;同时开发那边递交</summary>
      
    
    
    
    <category term="mongodb" scheme="https://sheenzxx.github.io/categories/mongodb/"/>
    
    
    <category term="sharding" scheme="https://sheenzxx.github.io/tags/sharding/"/>
    
    <category term="replica" scheme="https://sheenzxx.github.io/tags/replica/"/>
    
  </entry>
  
  <entry>
    <title>oracle 19c 安装 sqlt</title>
    <link href="https://sheenzxx.github.io/2023/06/16/sqlt/"/>
    <id>https://sheenzxx.github.io/2023/06/16/sqlt/</id>
    <published>2023-06-16T02:50:53.000Z</published>
    <updated>2023-06-20T07:52:30.229Z</updated>
    
    <content type="html"><![CDATA[<p>sqlt 是oracle 提供的一款强大的SQL性能诊断工具.SQLT主要方法是通过输入的一个SQL语句，从而生成一组诊断文件，<br>这些文件用于诊断性能较差的或产生错误结果(WRONG RESULTS)的SQL。</p><p>安装包 sqlt_10g_11g_12c_18c_19c_5th_June_2020.zip<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unzip sqlt_10g_11g_12c_18c_19c_5th_June_2020.zip</span></span><br><span class="line"><span class="comment"># cd sqlt/install</span></span><br><span class="line"><span class="comment"># sqlplus /  as sysdba</span></span><br><span class="line">SQL &gt; START sqdrop.sql     <span class="comment">## 卸载sqlt命令</span></span><br></pre></td></tr></table></figure></p><h3 id="安装sqlt"><a href="#安装sqlt" class="headerlink" title="安装sqlt"></a>安装sqlt</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd sqlt/install</span></span><br><span class="line"><span class="comment"># sqlplus / as sysdba</span></span><br><span class="line">SQL&gt; show pdbs;</span><br><span class="line"></span><br><span class="line">    CON_ID CON_NAME                       OPEN MODE  RESTRICTED</span><br><span class="line">---------- ------------------------------ ---------- ----------</span><br><span class="line">         2 PDB<span class="variable">$SEED</span>                       READ ONLY  NO</span><br><span class="line">         6 SHEEN                          READ WRITE NO</span><br><span class="line"><span class="comment">## 切换到容器 sheen</span></span><br><span class="line">SQL&gt; alter session <span class="built_in">set</span> container = sheen;</span><br><span class="line"><span class="comment">## 为sqlt 专有用户设定临时表空间与数据表空间,并创建用于sqlt 分析的用户 sqlter (名字自己随便取)</span></span><br><span class="line">SQL&gt; create temporary tablespace sqlter_temp tempfile <span class="string">&#x27;/data/oracle/oradata/ORCL19/sqlter_temp.dbf&#x27;</span> size 2G;</span><br><span class="line">SQL&gt; create tablespace sqlter_data datafile <span class="string">&#x27;/data/oracle/oradata/ORCL19/sqlter_data.dbf&#x27;</span> size 2G;</span><br><span class="line">SQL&gt; create user sqlter identified by sqlter123 default tablespace sqlter_data temporary tablespace sqlter_temp;</span><br><span class="line">SQL&gt; grant connect,create session ,resource to sqlter;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 开始执行安装脚本</span></span><br><span class="line">SQL&gt; START sqcreate.sql</span><br><span class="line">....</span><br><span class="line">Optional Connect Identifier (ie: @PROD): @SHEEN    <span class="comment">## 这里填连接标识符，在tnsnames.ora 配置</span></span><br><span class="line">Password <span class="keyword">for</span> user SQLTXPLAIN: sqlter123  <span class="comment">## 写入用于SQLTXPLAIN 的密码 （我们前面定义的sqlter 的密码）</span></span><br><span class="line">Re-enter password: sqlter123 <span class="comment">## 重新输入一遍密码</span></span><br><span class="line">...</span><br><span class="line">Do you want to see the free space of each tablespace [YES]</span><br><span class="line">or is it ok just to show the list of tablespace [NO]?</span><br><span class="line"></span><br><span class="line">Type YES or NO [Default NO]: no     <span class="comment">##展示可用表空间</span></span><br><span class="line">... please <span class="built_in">wait</span></span><br><span class="line"></span><br><span class="line">TABLESPACE                     FREE_SPACE_MB</span><br><span class="line">------------------------------ -------------</span><br><span class="line">SHEEN_DATA</span><br><span class="line">SQLTER_DATA</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Specify PERMANENT tablespace to be used by SQLTXPLAIN.</span><br><span class="line"></span><br><span class="line">Tablespace name is <span class="keyword">case</span> sensitive.</span><br><span class="line"></span><br><span class="line">Default tablespace [SQLTER_DATA]:  SQLTER_DATA <span class="comment">## 这里填写专用表空间。也就是上面我们创建的表空间</span></span><br><span class="line"></span><br><span class="line">PL/SQL 过程已成功完成。</span><br><span class="line"></span><br><span class="line">... please <span class="built_in">wait</span></span><br><span class="line"></span><br><span class="line">TABLESPACE</span><br><span class="line">------------------------------</span><br><span class="line">SQLTER_TEMP</span><br><span class="line">TEMP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Specify TEMPORARY tablespace to be used by SQLTXPLAIN.</span><br><span class="line"></span><br><span class="line">Tablespace name is <span class="keyword">case</span> sensitive.</span><br><span class="line"></span><br><span class="line">Temporary tablespace [SQLTER_TEMP]: SQLTER_TEMP <span class="comment">## 这里填写专用临时表空间。</span></span><br><span class="line"></span><br><span class="line">The main application user of SQLT is the schema</span><br><span class="line">owner that issued the SQL to be analyzed.</span><br><span class="line">For example, on an EBS application you would</span><br><span class="line">enter APPS.</span><br><span class="line">You will not be asked to enter its password.</span><br><span class="line">To add more SQLT <span class="built_in">users</span> after this installation</span><br><span class="line">is completed simply grant them the SQLT_USER_ROLE</span><br><span class="line">role.</span><br><span class="line"></span><br><span class="line">Main application user of SQLT: sqlter   <span class="comment">##这里填写刚才创建的专用用户</span></span><br><span class="line">QLT can make extensive use of licensed features</span><br><span class="line">provided by the Oracle Diagnostic and the Oracle</span><br><span class="line">Tuning Packs, including SQL Tuning Advisor (STA),</span><br><span class="line">SQL Monitoring and Automatic Workload Repository</span><br><span class="line">(AWR).</span><br><span class="line">To <span class="built_in">enable</span> or <span class="built_in">disable</span> access to these features</span><br><span class="line">from the SQLT tool enter one of the following</span><br><span class="line">values when asked:</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;T&quot;</span> <span class="keyword">if</span> you have license <span class="keyword">for</span> Diagnostic and Tuning</span><br><span class="line"><span class="string">&quot;D&quot;</span> <span class="keyword">if</span> you have license only <span class="keyword">for</span> Oracle Diagnostic</span><br><span class="line"><span class="string">&quot;N&quot;</span> <span class="keyword">if</span> you <span class="keyword">do</span> not have these two licenses</span><br><span class="line"></span><br><span class="line">Oracle Pack license [T]:N <span class="comment">## 根据实际情况选择 是否有对应的许可证。没有选N,然后开始进入安装进程</span></span><br><span class="line">SQCUSR completed. Some errors are expected.</span><br><span class="line"></span><br><span class="line">过程已创建。</span><br><span class="line"></span><br><span class="line">没有错误。</span><br><span class="line">  adding: 230616112347_02_sqcusr.<span class="built_in">log</span> (deflated 84%)</span><br><span class="line"></span><br><span class="line">TAUTLTEST completed.</span><br><span class="line">  adding: 230616112348_09_tautltest.<span class="built_in">log</span> (deflated 57%)</span><br><span class="line"></span><br><span class="line">SQUTLTEST completed.</span><br><span class="line">  adding: 230616112348_10_squtltest.<span class="built_in">log</span> (deflated 59%)</span><br><span class="line">....</span><br><span class="line">....</span><br><span class="line">SQUTLTEST completed.</span><br><span class="line">  adding: 230616112511_10_squtltest.<span class="built_in">log</span> (deflated 57%)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SQLT <span class="built_in">users</span> must be granted SQLT_USER_ROLE before using this tool.</span><br><span class="line"></span><br><span class="line">SQCREATE completed. Installation completed successfully.</span><br><span class="line"></span><br><span class="line"><span class="comment">## 到这里安装完成</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 给用户授权 SQLT_USER_ROLE 角色</span></span><br><span class="line">SQL&gt; grant SQLT_USER_ROLE to sqlter;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">XTRACT：通过V<span class="variable">$SQL</span>、AWR的过去执行过的SQL内容，收集相关信息。</span><br><span class="line"></span><br><span class="line">XECUTE：通过执行SQL，收集相关信息。</span><br><span class="line"></span><br><span class="line">XPLAIN：不执行SQL，基于EXPLAIN PLAN FOR命令收集相关信息。（不推荐）</span><br><span class="line"></span><br><span class="line">XTRXEC：该方法合并了XTRACT和XECUTE 的功能。实际上，XTRXEC连续执行了这两种方法。</span><br><span class="line"></span><br><span class="line">XTRSBY：分析在 Data Guard 或备用只读数据库上执行的 SQL。</span><br><span class="line"></span><br><span class="line">XPREXT：使用XTRACT同时禁用一些SQLT的特性，使之执行更快。</span><br><span class="line"></span><br><span class="line">XPREXC：使用XECUTE同时禁用一些SQLT的特性，使之执行更快</span><br></pre></td></tr></table></figure><h3 id="XTRACT-的使用方法"><a href="#XTRACT-的使用方法" class="headerlink" title="XTRACT 的使用方法"></a>XTRACT 的使用方法</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">通过V<span class="variable">$SQL</span>或AWR找到要收集数据的SQL的SQL_ID 或者HASH_VALUE</span><br><span class="line"><span class="built_in">cd</span> sqlt/run</span><br><span class="line">sqlplus sqlter/sqlter123@sheen</span><br><span class="line">SQL&gt; select * from (select sql_id,hash_value,substr(sql_text,1,40) text from v<span class="variable">$sql</span> <span class="built_in">where</span> rownum &lt;5);</span><br><span class="line"></span><br><span class="line">SQL_ID                          HASH_VALUE TEXT</span><br><span class="line">------------------------------ ----------- ----------------------------------------</span><br><span class="line">c81x87vcts000                   3650879488 SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS I</span><br><span class="line">1bpnwdxzv4002                   2142371842 select count(FA<span class="comment">#) from SYS_FBA_TRACKEDTA</span></span><br><span class="line">6c8jkzw0d000j                     13631505 SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS I</span><br><span class="line">fwyky62r40013                   2923429923 SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS</span><br><span class="line"></span><br><span class="line">SQL &gt; @sqltxtract fwyky62r40013 <span class="comment">## @sqltxtract [sql_id|hash_value] [SQLTXPLAIN PASSWORD]</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Parameter 1:</span><br><span class="line">SQL_ID or HASH_VALUE of the SQL to be extracted (required)</span><br><span class="line">Describe the characteristic of this run</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;F[AST]&quot;</span>             <span class="keyword">if</span> you have a FAST run</span><br><span class="line"><span class="string">&quot;S[LOW]&quot;</span>             <span class="keyword">if</span> you have a SLOW run (default)</span><br><span class="line"><span class="string">&quot;H[ASH]&quot;</span>             <span class="keyword">if</span> this is a run with a HASH JOIN</span><br><span class="line"><span class="string">&quot;N[L]&quot;</span>               <span class="keyword">if</span> this is a run with a NESTED LOOP</span><br><span class="line"><span class="string">&quot;C[OLUMN HISTOGRAM]&quot;</span> <span class="keyword">if</span> this is a run with a Column Historgram <span class="keyword">in</span> place</span><br><span class="line">SQL Description [S]:  <span class="comment">#默认直接敲回车</span></span><br><span class="line"></span><br><span class="line">Paremeter 2:</span><br><span class="line">SQLTXPLAIN password (required)</span><br><span class="line"></span><br><span class="line">输入 2 的值:  sqlter123  <span class="comment">## 输入SQLTXPLAIN 的密码</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Value passed:</span><br><span class="line">SQL_ID_OR_HASH_VALUE: <span class="string">&quot;fwyky62r40013&quot;</span></span><br><span class="line">.....</span><br><span class="line">. . 正在导出表                   SQLT<span class="variable">$_STATTAB</span>导出了           0 行</span><br><span class="line">成功终止导出, 没有出现警告。</span><br><span class="line">...</span><br><span class="line">即将导出指定的表通过常规路径...</span><br><span class="line">. . 正在导出表             SQLT<span class="variable">$_SQL_STATEMENT</span>导出了           1 行</span><br><span class="line">. . 正在导出表                SQLT$_AUX_STATS$导出了          13 行</span><br><span class="line">. . 正在导出表       SQLT<span class="variable">$_DBA_AUTOTASK_CLIENT</span>导出了           1 行</span><br><span class="line">. . 正在导出表            SQLT$_DBA_COL_USAGE$导出了           1 行</span><br><span class="line">. . 正在导出表           SQLT<span class="variable">$_DBA_CONSTRAINTS</span>导出了           2 行</span><br><span class="line">.....</span><br><span class="line">adding: sqlt_s10993_restore.sql (deflated 43%)</span><br><span class="line">  adding: sqlt_s10993_del_hgrm.sql (deflated 26%)</span><br><span class="line">        zip warning: name not matched: sqlt_s10993_opatch.zip</span><br><span class="line">.....</span><br><span class="line"><span class="comment">#####</span></span><br><span class="line">The SQLT has collected information and place it <span class="keyword">in</span> a repository <span class="keyword">in</span> the database, exported it and zip it.</span><br><span class="line">The collected info can be purged from the database using the following file :</span><br><span class="line">... getting sqlt_s10993_purge.sql out of sqlt repository ...</span><br><span class="line"></span><br><span class="line">SQLTXTRACT completed.</span><br><span class="line"></span><br><span class="line"><span class="comment">## 至此分析完成</span></span><br><span class="line">在run 目录中可以找到分析结果 sqlt_20230616_1655_fwyky62r40013_S.zip</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;sqlt 是oracle 提供的一款强大的SQL性能诊断工具.SQLT主要方法是通过输入的一个SQL语句，从而生成一组诊断文件，&lt;br&gt;这些文件用于诊断性能较差的或产生错误结果(WRONG RESULTS)的SQL。&lt;/p&gt;
&lt;p&gt;安装包 sqlt_10g_11g_12c_</summary>
      
    
    
    
    <category term="oracle" scheme="https://sheenzxx.github.io/categories/oracle/"/>
    
    
    <category term="sql tuning" scheme="https://sheenzxx.github.io/tags/sql-tuning/"/>
    
    <category term="sql tool" scheme="https://sheenzxx.github.io/tags/sql-tool/"/>
    
  </entry>
  
  <entry>
    <title>show engine innodb status 报表说明</title>
    <link href="https://sheenzxx.github.io/2023/06/14/innodbStatus/"/>
    <id>https://sheenzxx.github.io/2023/06/14/innodbStatus/</id>
    <published>2023-06-14T05:52:04.000Z</published>
    <updated>2023-06-14T07:38:52.996Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:(none)&gt;show engine innodb status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">  Type: InnoDB</span><br><span class="line">  Name: </span><br><span class="line">Status:  ##展示时间，监控名称  以及每秒均数是统计最近53秒内每秒的均数</span><br><span class="line">=====================================</span><br><span class="line">2023-06-14 12:25:18 0x7f5478e8f700 INNODB MONITOR OUTPUT</span><br><span class="line">=====================================</span><br><span class="line">Per second averages calculated from the last 53 seconds</span><br><span class="line">-----------------</span><br><span class="line">BACKGROUND THREAD   ##展示 master thread 的已完成的工作情况</span><br><span class="line">-----------------</span><br><span class="line">srv_master_thread loops: 668856 srv_active, 0 srv_shutdown, 3899 srv_idle ## 循环(以 active,shutdown,idle 状态)执行的次数的统计。active 值越高证明服务越繁忙</span><br><span class="line">srv_master_thread log flush and writes: 672755   ##对重做日志写磁盘的次数</span><br><span class="line">----------</span><br><span class="line">SEMAPHORES  ##信号量  </span><br><span class="line">----------</span><br><span class="line">OS WAIT ARRAY INFO: reservation count 14525329  ## OS的等待阵列信息：预计计数（InnoDB分配槽的额度）</span><br><span class="line">OS WAIT ARRAY INFO: signal count 91163064       ## OS的等待阵列信息：信号计数（线程通过阵列得到信号频率）</span><br><span class="line">RW-shared spins 0, rounds 177254322, OS waits 11626144 ## RW 共享锁 的自旋 , 循环 ,等待的的次数统计</span><br><span class="line">RW-excl spins 0, rounds 80192985, OS waits 693410</span><br><span class="line">RW-sx spins 19003619, rounds 44739191, OS waits 193972</span><br><span class="line">Spin rounds per wait: 177254322.00 RW-shared, 80192985.00 RW-excl, 2.35 RW-sx</span><br><span class="line">## InnoDB使用一个2步获取锁的策略。当试图获取一个锁，如果这个锁被占用，首先对锁进行自旋（spin）查询，如果经历了一个自旋周期后还不能获取锁，则进入到操作系统等待状态（os wait），等待被唤醒。</span><br><span class="line">## 如果在一秒中看到几十万个spin wait，则需要关注show engine innodb mutex</span><br><span class="line">## 大量线程等待信号量可能是磁盘I/O 或者是 Innodb 内部争用问题的结果</span><br><span class="line">------------</span><br><span class="line">TRANSACTIONS</span><br><span class="line">------------</span><br><span class="line">Trx id counter 7935198</span><br><span class="line">Purge done for trx&#x27;s n:o &lt; 7935196 undo n:o &lt; 0 state: running but idle</span><br><span class="line">History list length 118</span><br><span class="line">LIST OF TRANSACTIONS FOR EACH SESSION:</span><br><span class="line">---TRANSACTION 421583499832032, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499848448, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499847536, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499846624, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499845712, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499844800, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499843888, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499842976, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499842064, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499841152, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499840240, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499839328, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499838416, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499837504, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499836592, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499833856, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499832944, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 421583499831120, not started</span><br><span class="line">0 lock struct(s), heap size 1136, 0 row lock(s)</span><br><span class="line">---TRANSACTION 7935191, ACTIVE (PREPARED) 0 sec</span><br><span class="line">40 lock struct(s), heap size 3520, 16 row lock(s), undo log entries 84</span><br><span class="line">MySQL thread id 6404, OS thread handle 140000785757952, query id 20013857 Waiting for preceding transaction to commit</span><br><span class="line">---TRANSACTION 7935189, ACTIVE 0 sec starting index read</span><br><span class="line">mysql tables in use 1, locked 1</span><br><span class="line">33 lock struct(s), heap size 3520, 16 row lock(s), undo log entries 26</span><br><span class="line">MySQL thread id 6403, OS thread handle 140000785487616, query id 20013866 System lock</span><br><span class="line">/* DTS-writer-gf1t67yry6k46y1-MysqlEngine(11) */update `mmp_watsons_new`.`mmp_card_point_record_acrl_2023_70` set `order_no` = x&#x27;323330353330333738363136343039373936373137303035393338313530&#x27;,`point_order_id` = 1113713450420494725,`channel_app_id` = NULL,`operation_type` = x&#x27;706F696E74436865636B&#x27;,`point_order_create_at` = &#x27;2023-06-01 06:19:38.0&#x27;,`business_date` = &#x27;2023-05-30 22:03:40.0&#x27;,`expiration_date` = &#x27;2024-12-31 23:59:59.0&#x27;,`card_point_record_arcl_id` = 1113713450466631868,`prod_code` = x&#x27;313031323437333233&#x27;,`create_by` = NULL,`operation_type_name` = x&#x27;E5AFB9E8B4A6&#x27;,`operation_object_id` </span><br><span class="line">--------</span><br><span class="line">FILE I/O</span><br><span class="line">--------</span><br><span class="line">I/O thread 0 state: waiting for completed aio requests (insert buffer thread)</span><br><span class="line">I/O thread 1 state: waiting for completed aio requests (log thread)</span><br><span class="line">I/O thread 2 state: waiting for completed aio requests (read thread)</span><br><span class="line">I/O thread 3 state: waiting for completed aio requests (read thread)</span><br><span class="line">I/O thread 4 state: waiting for completed aio requests (read thread)</span><br><span class="line">I/O thread 5 state: waiting for completed aio requests (read thread)</span><br><span class="line">I/O thread 6 state: waiting for completed aio requests (read thread)</span><br><span class="line">I/O thread 7 state: waiting for completed aio requests (read thread)</span><br><span class="line">I/O thread 8 state: waiting for completed aio requests (read thread)</span><br><span class="line">I/O thread 9 state: waiting for completed aio requests (read thread)</span><br><span class="line">I/O thread 10 state: waiting for completed aio requests (write thread)</span><br><span class="line">I/O thread 11 state: waiting for completed aio requests (write thread)</span><br><span class="line">I/O thread 12 state: waiting for completed aio requests (write thread)</span><br><span class="line">I/O thread 13 state: waiting for completed aio requests (write thread)</span><br><span class="line">I/O thread 14 state: waiting for completed aio requests (write thread)</span><br><span class="line">I/O thread 15 state: waiting for completed aio requests (write thread)</span><br><span class="line">I/O thread 16 state: waiting for completed aio requests (write thread)</span><br><span class="line">I/O thread 17 state: waiting for completed aio requests (write thread)</span><br><span class="line">Pending normal aio reads: [0, 0, 0, 0, 0, 0, 0, 0] , aio writes: [0, 0, 0, 0, 0, 0, 0, 0] ,</span><br><span class="line"> ibuf aio reads:, log i/o&#x27;s:, sync i/o&#x27;s:</span><br><span class="line">Pending flushes (fsync) log: 0; buffer pool: 0</span><br><span class="line">228169676 OS file reads, 941687878 OS file writes, 128745732 OS fsyncs</span><br><span class="line">1 pending preads, 0 pending pwrites</span><br><span class="line">144.37 reads/s, 16384 avg bytes/read, 355.69 writes/s, 293.47 fsyncs/s</span><br><span class="line">-------------------------------------</span><br><span class="line">INSERT BUFFER AND ADAPTIVE HASH INDEX</span><br><span class="line">-------------------------------------</span><br><span class="line">Ibuf: size 1, free list len 1156118, seg size 1156120, 175393237 merges</span><br><span class="line">merged operations:</span><br><span class="line"> insert 4721539653, delete mark 896413, delete 4068</span><br><span class="line">discarded operations:</span><br><span class="line"> insert 0, delete mark 0, delete 0</span><br><span class="line">Hash table size 25496729, node heap has 3853 buffer(s)</span><br><span class="line">Hash table size 25496729, node heap has 4051 buffer(s)</span><br><span class="line">Hash table size 25496729, node heap has 2702 buffer(s)</span><br><span class="line">Hash table size 25496729, node heap has 7776 buffer(s)</span><br><span class="line">Hash table size 25496729, node heap has 3509 buffer(s)</span><br><span class="line">Hash table size 25496729, node heap has 3477 buffer(s)</span><br><span class="line">Hash table size 25496729, node heap has 2710 buffer(s)</span><br><span class="line">Hash table size 25496729, node heap has 7482 buffer(s)</span><br><span class="line">559.86 hash searches/s, 3029.92 non-hash searches/s</span><br><span class="line">---</span><br><span class="line">LOG</span><br><span class="line">---</span><br><span class="line">Log sequence number 5652529584000</span><br><span class="line">Log flushed up to   5652529557581</span><br><span class="line">Pages flushed up to 5652348066531</span><br><span class="line">Last checkpoint at  5652346103348</span><br><span class="line">0 pending log flushes, 0 pending chkp writes</span><br><span class="line">4602161 log i/o&#x27;s done, 11.27 log i/o&#x27;s/second</span><br><span class="line">----------------------</span><br><span class="line">BUFFER POOL AND MEMORY</span><br><span class="line">----------------------</span><br><span class="line">Total large memory allocated 105545465856</span><br><span class="line">Dictionary memory allocated 36707071</span><br><span class="line">Buffer pool size   6290688</span><br><span class="line">Free buffers       65486</span><br><span class="line">Database pages     6189642</span><br><span class="line">Old database pages 2284551</span><br><span class="line">Modified db pages  96151</span><br><span class="line">Pending reads      1</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 183584798, not young 6457983151</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 228170486, created 269537364, written 902704369</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 990 / 1000, young-making rate 3 / 1000 not 23 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 6189642, unzip_LRU len: 0</span><br><span class="line">I/O sum[314928]:cur[592], unzip sum[0]:cur[0]</span><br><span class="line">----------------------</span><br><span class="line">INDIVIDUAL BUFFER POOL INFO</span><br><span class="line">----------------------</span><br><span class="line">---BUFFER POOL 0</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4092</span><br><span class="line">Database pages     386900</span><br><span class="line">Old database pages 142803</span><br><span class="line">Modified db pages  6244</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11503401, not young 397501864</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14258537, created 16829301, written 56093213</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 995 / 1000, young-making rate 1 / 1000 not 12 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386900, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 1</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4093</span><br><span class="line">Database pages     386877</span><br><span class="line">Old database pages 142793</span><br><span class="line">Modified db pages  5844</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11473787, not young 406127774</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14288465, created 16841257, written 57041997</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 988 / 1000, young-making rate 4 / 1000 not 25 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386877, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 2</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4094</span><br><span class="line">Database pages     386867</span><br><span class="line">Old database pages 142788</span><br><span class="line">Modified db pages  6492</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11447911, not young 410094295</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14225042, created 16860342, written 57197067</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 989 / 1000, young-making rate 4 / 1000 not 22 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386867, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 3</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4092</span><br><span class="line">Database pages     386884</span><br><span class="line">Old database pages 142796</span><br><span class="line">Modified db pages  5519</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11457275, not young 411184738</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14242081, created 16816917, written 57374098</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 990 / 1000, young-making rate 3 / 1000 not 22 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386884, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 4</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4093</span><br><span class="line">Database pages     386826</span><br><span class="line">Old database pages 142775</span><br><span class="line">Modified db pages  5994</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11492781, not young 411168112</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14321944, created 16860054, written 56993785</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 991 / 1000, young-making rate 3 / 1000 not 19 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386826, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 5</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4094</span><br><span class="line">Database pages     386805</span><br><span class="line">Old database pages 142767</span><br><span class="line">Modified db pages  5741</span><br><span class="line">Pending reads      1</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11430273, not young 398449146</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14280953, created 16861870, written 56364946</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 990 / 1000, young-making rate 4 / 1000 not 21 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386805, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 6</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4089</span><br><span class="line">Database pages     386907</span><br><span class="line">Old database pages 142807</span><br><span class="line">Modified db pages  5692</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11488438, not young 394374410</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14232674, created 16831458, written 56226135</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 988 / 1000, young-making rate 3 / 1000 not 27 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386907, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 7</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4094</span><br><span class="line">Database pages     386875</span><br><span class="line">Old database pages 142792</span><br><span class="line">Modified db pages  6588</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11489391, not young 403775780</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14207108, created 16840975, written 56237140</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 988 / 1000, young-making rate 3 / 1000 not 21 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386875, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 8</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4095</span><br><span class="line">Database pages     386851</span><br><span class="line">Old database pages 142783</span><br><span class="line">Modified db pages  5964</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11475962, not young 407959835</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14269932, created 16856735, written 56115744</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 987 / 1000, young-making rate 4 / 1000 not 26 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386851, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 9</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4090</span><br><span class="line">Database pages     386854</span><br><span class="line">Old database pages 142787</span><br><span class="line">Modified db pages  5385</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11462980, not young 397150677</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14247247, created 16842565, written 56179486</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 988 / 1000, young-making rate 4 / 1000 not 29 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386854, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 10</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4093</span><br><span class="line">Database pages     386810</span><br><span class="line">Old database pages 142767</span><br><span class="line">Modified db pages  6165</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11432450, not young 408158098</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14193250, created 16840960, written 56071253</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 987 / 1000, young-making rate 4 / 1000 not 23 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386810, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 11</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4092</span><br><span class="line">Database pages     386854</span><br><span class="line">Old database pages 142786</span><br><span class="line">Modified db pages  6675</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11551863, not young 405446622</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14334456, created 16854097, written 56497730</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 989 / 1000, young-making rate 3 / 1000 not 20 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386854, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 12</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4092</span><br><span class="line">Database pages     386809</span><br><span class="line">Old database pages 142769</span><br><span class="line">Modified db pages  5973</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11493422, not young 403460514</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14341354, created 16855758, written 55907706</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 988 / 1000, young-making rate 4 / 1000 not 25 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386809, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 13</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4096</span><br><span class="line">Database pages     386851</span><br><span class="line">Old database pages 142782</span><br><span class="line">Modified db pages  5327</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11464112, not young 404000445</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14206053, created 16840627, written 56337964</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 988 / 1000, young-making rate 4 / 1000 not 28 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386851, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 14</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4094</span><br><span class="line">Database pages     386833</span><br><span class="line">Old database pages 142777</span><br><span class="line">Modified db pages  6855</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11441411, not young 400034543</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14221940, created 16854000, written 55781897</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 988 / 1000, young-making rate 4 / 1000 not 26 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386833, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">---BUFFER POOL 15</span><br><span class="line">Buffer pool size   393168</span><br><span class="line">Free buffers       4093</span><br><span class="line">Database pages     386839</span><br><span class="line">Old database pages 142779</span><br><span class="line">Modified db pages  5693</span><br><span class="line">Pending reads      0</span><br><span class="line">Pending writes: LRU 0, flush list 0, single page 0</span><br><span class="line">Pages made young 11479341, not young 399096298</span><br><span class="line">0.00 youngs/s, 0.00 non-youngs/s</span><br><span class="line">Pages read 14299450, created 16850448, written 56284208</span><br><span class="line">0.00 reads/s, 0.00 creates/s, 0.00 writes/s</span><br><span class="line">Buffer pool hit rate 989 / 1000, young-making rate 4 / 1000 not 33 / 1000</span><br><span class="line">Pages read ahead 0.00/s, evicted without access 0.00/s, Random read ahead 0.00/s</span><br><span class="line">LRU len: 386839, unzip_LRU len: 0</span><br><span class="line">I/O sum[19683]:cur[37], unzip sum[0]:cur[0]</span><br><span class="line">--------------</span><br><span class="line">ROW OPERATIONS</span><br><span class="line">--------------</span><br><span class="line">0 queries inside InnoDB, 0 queries in queue</span><br><span class="line">0 read views open inside InnoDB</span><br><span class="line">Process ID=111740, Main thread ID=140001081059072, state: sleeping</span><br><span class="line">Number of rows inserted 12562958356, updated 13763168, deleted 1043786, read 14823040</span><br><span class="line">503.08 inserts/s, 155.56 updates/s, 2.08 deletes/s, 157.64 reads/s</span><br><span class="line">----------------------------</span><br><span class="line">END OF INNODB MONITOR OUTPUT</span><br><span class="line">============================</span><br><span class="line"></span><br><span class="line">1 row in set (0.04 sec)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="innodb" scheme="https://sheenzxx.github.io/tags/innodb/"/>
    
  </entry>
  
  <entry>
    <title>kickstart配置项说明</title>
    <link href="https://sheenzxx.github.io/2023/04/27/kickstart/"/>
    <id>https://sheenzxx.github.io/2023/04/27/kickstart/</id>
    <published>2023-04-27T01:45:08.000Z</published>
    <updated>2023-04-27T01:59:18.141Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br></pre></td><td class="code"><pre><span class="line">autopart(可选)</span><br><span class="line">            自动创建分区,大于1GB的根分区(/),交换分区和适合于不同体系结构的引导分区.一个或多个缺省分区的大小可以用part指令重新定义.</span><br><span class="line"></span><br><span class="line">ignoredisk(可选)</span><br><span class="line">            导致安装程序忽略指定的磁盘.如果使用自动分区并希望忽略某些磁盘的话,这就很有用.</span><br><span class="line">                    例如,没有ignoredisk,如要试图在SAN-cluster系统里部署,kickstart就会失败,因为安装程序检测到SAN不返回分区表的被动路径(passive path).</span><br><span class="line">            如果有磁盘的多个路径时,ignoredisk选项也有用处.</span><br><span class="line">            语法是:</span><br><span class="line">                    ignoredisk --drives=drive1,drive2,...</span><br><span class="line">                    这里driveN是sda,sdb... hda等等中的一个.</span><br><span class="line"></span><br><span class="line">autostep(可选)</span><br><span class="line">和interactive相似,除了它进入下一屏幕,它通常用于调试.</span><br><span class="line">            --autoscreenshot,安装过程中的每一步都截屏并在安装完成后把图片复制到/root/anaconda-screenshots.这对于制作文档很有用.</span><br><span class="line"></span><br><span class="line">auth或authconfig(必需)</span><br><span class="line">            为系统设置验证选项.这和在安装后运行的authconfig命令相似.在缺省情况下,密码通常被加密但不使用影子文件(shadowed).</span><br><span class="line">            --enablemd5,每个用户口令都使用md5加密.</span><br><span class="line">            --enablenis,启用NIS支持.在缺省情况下,--enablenis使用在网络上找到的域.域应该总是用--nisdomain=选项手工设置.</span><br><span class="line">            --nisdomain=,用在NIS服务的NIS域名.</span><br><span class="line">            --nisserver=,用来提供NIS服务的服务器(默认通过广播).</span><br><span class="line">            --useshadow或--enableshadow,使用屏蔽口令.</span><br><span class="line">            --enableldap,在/etc/nsswitch.conf启用LDAP支持,允许系统从LDAP目录获取用户的信息(UIDs,主目录,shell 等等).要使用这个选项,必须安装nss_ldap软件包.也必须用--ldapserver=和--ldapbasedn=指定服务器和base DN(distinguished name).</span><br><span class="line">            --enableldapauth,把LDAP作为一个验证方法使用.这启用了用于验证和更改密码的使用LDAP目录的pam_ldap模块.要使用这个选项,必须安装nss_ldap软件包.也必须用--ldapserver=和--ldapbasedn=指定服务器和base DN.</span><br><span class="line">            --ldapserver=,如果指定了--enableldap或--enableldapauth,使用这个选项来指定所使用的LDAP服务器的名字.这个选项在/etc/ldap.conf文件里设定.</span><br><span class="line">            --ldapbasedn=,如果指定了--enableldap或--enableldapauth,使用这个选项来指定用户信息存放的LDAP目录树里的DN.这个选项在/etc/ldap.conf文件里设置.</span><br><span class="line">            --enableldaptls,使用TLS(传输层安全)查寻.该选项允许LDAP在验证前向LDAP服务器发送加密的用户名和口令.</span><br><span class="line">            --enablekrb5,使用Kerberos 5验证用户.Kerberos自己不知道主目录,UID或shell.如果启用了Kerberos,必须启用LDAP,NIS,Hesiod或者使用/usr/sbin/useradd命令来使这个工作站获知用户的帐号.如果使用这个选项,必须安装pam_krb5软件包.</span><br><span class="line">            --krb5realm=,工作站所属的Kerberos 5领域.</span><br><span class="line">            --krb5kdc=,为领域请求提供服务的KDC.如果的领域内有多个KDC,使用逗号(,)来分隔它们.</span><br><span class="line">            --krb5adminserver=,领域内还运行kadmind的KDC.该服务器处理改变口令以及其它管理请求.如果有不止一个KDC,该服务器必须是主KDC.</span><br><span class="line">            --enablehesiod,启用Hesiod支持来查找用户主目录,UID 和 shell.在网络中设置和使用 Hesiod 的更多信息,可以在 glibc 软件包里包括的 /usr/share/doc/glibc-2.x.x/README.hesiod里找到.Hesiod是使用DNS记录来存储用户,组和其他信息的 DNS 的扩展.</span><br><span class="line">            --hesiodlhs,Hesiod LHS(&quot;left-hand side&quot;)选项在/etc/hesiod.conf里设置.Hesiod 库使用这个选项来决定查找信息时搜索DNS的名字,类似于LDAP对 base DN的使用.</span><br><span class="line">            --hesiodrhs,Hesiod RHS(&quot;right-hand side&quot;)选项在/etc/hesiod.conf里设置.Hesiod 库使用这个选项来决定查找信息时搜索DNS的名字,类似于LDAP对base DN的使用.</span><br><span class="line">            --enablesmbauth,启用对SMB服务器(典型的是Samba或Windows服务器)的用户验证.SMB验证支持不知道主目录,UID 或 shell.如果启用SMB,必须通过启用LDAP,NIS,Hesiod或者用/usr/sbin/useradd命令来使用户帐号为工作站所知.要使用这个选项,必须安装pam_smb软件包.</span><br><span class="line">            --smbservers=,用来做SMB验证的服务器名称.要指定不止一个服务器,用逗号(,)来分隔它们.</span><br><span class="line">            --smbworkgroup=,SMB服务器的工作组名称.</span><br><span class="line">            --enablecache,启用nscd服务.nscd服务缓存用户,组和其他类型的信息.如果选择在网络上用NIS,LDAP或hesiod分发用户和组的信息,缓存就尤其有用.</span><br><span class="line"></span><br><span class="line">bootloader(必需)</span><br><span class="line">            指定引导装载程序怎样被安装.对于安装和升级,这个选项都是必需的.</span><br><span class="line">            --append=,指定内核参数.要指定多个参数,使用空格分隔它们.</span><br><span class="line">                    例如:bootloader --location=mbr --append=&quot;hdd=ide-scsi ide=nodma&quot;</span><br><span class="line">            --driveorder,指定在BIOS引导顺序中居首的驱动器.</span><br><span class="line">                    例如:bootloader --driveorder=sda,hda</span><br><span class="line">            --location=,指定引导记录被写入的位置.有效的值如下:mbr(缺省),partition(在包含内核的分区的第一个扇区安装引导装载程序)或none(不安装引导装载程序).</span><br><span class="line">            --password=,如果使用GRUB,把GRUB引导装载程序的密码设置到这个选项指定的位置.这应该被用来限制对可以传入任意内核参数的GRUB shell的访问.</span><br><span class="line">            --md5pass=,如果使用GRUB,这和--password=类似,只是密码已经被加密.</span><br><span class="line">            --upgrade,升级现存的引导装载程序配置,保留其中原有的项目.该选项仅可用于升级.</span><br><span class="line">clearpart(可选)</span><br><span class="line">            在创建新分区之前,从系统上删除分区.默认不会删除任何分区.</span><br><span class="line">            注:如果使用了clearpart命令,--onpart命令就不能够用在逻辑分区上.</span><br><span class="line">            --all,删除系统上所有分区.</span><br><span class="line">            --drives=,指定从哪个驱动器上清除分区.</span><br><span class="line">                    例如,下面的命令清除了主IDE控制器上的前两个驱动器上所有分区</span><br><span class="line">                    clearpart --drives=hda,hdb --all</span><br><span class="line">            --initlabel,根据不同体系结构把磁盘标签初始化为缺省设置(例如,msdos用于x86而gpt用于Itanium).当安装到一个崭新的硬盘时,这很有用,安装程序不会询问是否应该初始化磁盘标签.</span><br><span class="line">            --linux,删除所有Linux分区.</span><br><span class="line">            --none(缺省),不要删除任何分区.</span><br><span class="line"></span><br><span class="line">cmdline(可选)</span><br><span class="line">            在完全的非交互式的命令行模式下进行安装.任何交互式的提示都会终止安装.这个模式对于有x3270控制台的IBM System z系统很有用.</span><br><span class="line"></span><br><span class="line">device(可选)</span><br><span class="line">            在多数的PCI系统里,安装程序会正确地自动探测以太网卡和SCSI卡.然而,在老的系统和某些PCI系统里,kickstart需要提示来找到正确的设备.device命令用来告诉安装程序安装额外的模块,它有着这样的格式:</span><br><span class="line">            device &lt;type&gt;&lt;moduleName&gt; --opts=&lt;options&gt;</span><br><span class="line">            &lt;type&gt;,用scsi或eth代替</span><br><span class="line">            &lt;moduleName&gt;,使用应该被安装的内核模块的名称来替换.</span><br><span class="line">            --opts=,传递给内核模块的选项.注意,如果把选项放在引号里,可以传递多个选项.</span><br><span class="line">                    例如:--opts=&quot;aic152x=0x340 io=11&quot;</span><br><span class="line"></span><br><span class="line">driverdisk(可选)</span><br><span class="line">            可以在kickstart安装过程中使用驱动软盘.必须把驱动软盘的内容复制到系统的硬盘分区的根目录下.然后必须使用driverdisk 命令来告诉安装程序到哪去寻找驱动磁盘.</span><br><span class="line">            driverdisk &lt;partition&gt; [--type=&lt;fstype&gt;]</span><br><span class="line">            另外,也可以为驱动程序盘指定一个网络位置:</span><br><span class="line">            driverdisk --source=ftp://path/to/dd.img</span><br><span class="line">            driverdisk --source=http://path/to/dd.img</span><br><span class="line">            driverdisk --source=nfs:host:/path/to/img</span><br><span class="line">                    &lt;partition&gt;,包含驱动程序盘的分区.</span><br><span class="line">                    --type=,文件系统类型(如:vfat,ext2,ext3).</span><br><span class="line"></span><br><span class="line">firewall(可选)</span><br><span class="line">            这个选项对应安装程序里的「防火墙配置」屏幕:</span><br><span class="line">            firewall --enabled|--disabled [--trust=] &lt;device&gt; [--port=]</span><br><span class="line">            --enabled或者--enable,拒绝不是答复输出请求如DNS答复或DHCP请求的进入连接.如果需要使用在这个机器上运行的服务,可以选择允许指定的服务穿过防火墙.</span><br><span class="line">            --disabled或--disable,不要配置任何iptables规则.</span><br><span class="line">            --trust=,在此列出设备,如eth0,这允许所有经由这个设备的数据包通过防火墙.如果需要列出多个设备,使用--trust eth0 --trust eth1.不要使用以逗号分隔的格式,如--trust eth0, eth1.</span><br><span class="line">            &lt;incoming&gt;,使用以下服务中的一个或多个来替换,从而允许指定的服务穿过防火墙.</span><br><span class="line">                    --ssh</span><br><span class="line">                    --telnet</span><br><span class="line">                    --smtp</span><br><span class="line">                    --http</span><br><span class="line">                    --ftp</span><br><span class="line">            --port=,可以用端口:协议(port:protocal)格式指定允许通过防火墙的端口.</span><br><span class="line">                    例如,如果想允许IMAP通过的防火墙,可以指定imap:tcp.还可以具体指定端口号码,要允许UDP分组在端口1234通过防火墙,输入1234:udp.要指定多个端口,用逗号将它们隔开.</span><br><span class="line"></span><br><span class="line">firstboot(可选)</span><br><span class="line">            决定是否在系统第一次引导时启动&quot;设置代理&quot;.如果启用,firstboot软件包必须被安装.如果不指定,这个选项是缺省为禁用的.</span><br><span class="line">            --enable或--enabled,系统第一次引导时,启动&quot;设置代理&quot;.</span><br><span class="line">            --disable或--disabled,系统第一次引导时,不启动&quot;设置代理&quot;.</span><br><span class="line">            --reconfig,在系统引导时在重配置(reconfiguration)模式下启用&quot;设置代理&quot;.这个模式启用了语言,鼠标,键盘,根密码,安全级别,时区和缺省网络配置之外的选项.</span><br><span class="line"></span><br><span class="line">halt(可选)</span><br><span class="line">            在成功地完成安装后关闭系统.这和手工安装相似,手工安装的anaconda会显示一条信息并等待用户按任意键来重启系统.在kickstart安装过程中,如果没有指定完成方法(completion method),将缺省使用reboot选项.</span><br><span class="line">            halt选项基本和shutdown -h命令相同.</span><br><span class="line">            关于其他的完成方法,请参考kickstart的poweroff,reboot和shutdown选项.</span><br><span class="line"></span><br><span class="line">graphical(可选)</span><br><span class="line">            在图形模式下执行kickstart安装.kickstart安装默认在图形模式下安装.</span><br><span class="line"></span><br><span class="line">install(可选)</span><br><span class="line">            告诉系统来安装全新的系统而不是在现有系统上升级.这是缺省的模式.必须指定安装的类型,如cdrom,harddrive,nfs或url(FTP 或HTTP安装).install命令和安装方法命令必须处于不同的行上.</span><br><span class="line"></span><br><span class="line">cdrom</span><br><span class="line">            从系统上的第一个光盘驱动器中安装.</span><br><span class="line"></span><br><span class="line">harddrive</span><br><span class="line">            从本地驱动器的vfat或ext2格式的红帽安装树来安装.</span><br><span class="line">            --biospart=,从BIOS分区来安装(如82).</span><br><span class="line">            --partition=,从分区安装(如sdb2).</span><br><span class="line">            --dir=,包含安装树的variant目录的目录.</span><br><span class="line">                    例如:harddrive --partition=hdb2 --dir=/tmp/install-tree</span><br><span class="line"></span><br><span class="line">nfs</span><br><span class="line">            从指定的NFS服务器安装.</span><br><span class="line">                    --server=,要从中安装的服务器(主机名或IP).</span><br><span class="line">                    --dir=,包含安装树的variant目录的目录.</span><br><span class="line">                    --opts=,用于挂载NFS输出的Mount选项(可选).</span><br><span class="line">                            例如:nfs --server=nfsserver.example.com --dir=/tmp/install-tree</span><br><span class="line"></span><br><span class="line">url</span><br><span class="line">            通过FTP或HTTP从远程服务器上的安装树中安装.</span><br><span class="line">                    例如:url --url http://&lt;server&gt;/&lt;dir&gt;</span><br><span class="line">                    或:url --url ftp://&lt;username&gt;:&lt;password&gt;@&lt;server&gt;/&lt;dir&gt;</span><br><span class="line"></span><br><span class="line">ignore disk(可选)</span><br><span class="line">            用来指定在分区,格式化和清除时anaconda不应该访问的磁盘.这个命令有一个必需的参数,就是用逗号隔开的需要忽略的驱动器列表.</span><br><span class="line">            例如:ignoredisk --drives=[disk1,disk2,...]</span><br><span class="line"></span><br><span class="line">interactive(可选)</span><br><span class="line">            在安装过程中使用kickstart文件里提供的信息,但允许检查和修改给定的值.将遇到安装程序的每个屏幕以及kickstart文件里给出的值.通过点击&quot;下一步&quot;接受给定的值或是改变值后点击&quot;下一步&quot;继续.请参考autostep命令.</span><br><span class="line"></span><br><span class="line">iscsi(可选)</span><br><span class="line">            issci --ipaddr= [options].</span><br><span class="line">            --target</span><br><span class="line">            --port=</span><br><span class="line">            --user=</span><br><span class="line">            --password=</span><br><span class="line"></span><br><span class="line">iscsiname(可选)</span><br><span class="line"></span><br><span class="line">key(可选)</span><br><span class="line">            指定安装密钥,它在软件包选择和获取支持时设别系统的时候是必需的.这个命令是红帽企业Linux-specific,它对Fedora来说没有意义并且会被忽略.</span><br><span class="line">            --skip,跳过输入密钥.通常,如果没有key命令,anaconda将暂停并提示输入密钥.如果没有密钥或不想提供它,这个选项允许继续自动化安装.</span><br><span class="line"></span><br><span class="line">keyboard(必需)</span><br><span class="line">            设置系统键盘类型.这里是 i386,Itanium,和 Alpha 机器上可用键盘的列表:</span><br><span class="line">            be-latin1, bg, br-abnt2, cf, cz-lat2, cz-us-qwertz, de, de-latin1,</span><br><span class="line">            de-latin1-nodeadkeys, dk, dk-latin1, dvorak, es, et, fi, fi-latin1,</span><br><span class="line">            fr, fr-latin0, fr-latin1, fr-pc, fr_CH, fr_CH-latin1, gr, hu, hu101,</span><br><span class="line">            is-latin1, it, it-ibm, it2, jp106, la-latin1, mk-utf, no, no-latin1,</span><br><span class="line">            pl, pt-latin1, ro_win, ru, ru-cp1251, ru-ms, ru1, ru2,  ru_win, </span><br><span class="line">            se-latin1, sg, sg-latin1, sk-qwerty, slovene, speakup,  speakup-lt,</span><br><span class="line">            sv-latin1, sg, sg-latin1, sk-querty, slovene, trq, ua,  uk, us, us-acentos</span><br><span class="line">            文件/usr/lib/python2.2/site-packages/rhpl/keyboard_models.py 也包含这个列表而且是 rhpl 软件包的一部分.</span><br><span class="line"></span><br><span class="line">lang(必需)</span><br><span class="line">            设置在安装过程中使用的语言以及系统的缺省语言.例如,要把语言设置为英语,kickstart文件应该包含下面的一行:</span><br><span class="line">            lang en_US</span><br><span class="line">            文件/usr/share/system-config-language/locale-list里每一行的第一个字段提供了一个有效语言代码的列表,它是system-config-language软件包的一部分.</span><br><span class="line">            文本模式的安装过程不支持某些语言(主要是中文,日语,韩文和印度的语言).如果用lang命令指定这些语言中的一种,安装过程仍然会使用英语,但是系统会缺省使用指定的语言.</span><br><span class="line"></span><br><span class="line">langsupport(不赞成)</span><br><span class="line">            langsupport关键字已经被取消而且使用它将导致屏幕出现错误信息及终止安装.作为代替,应该在kickstart文件里的%packages 部分列出所支持的语言的支持软件包组.例如,要支持法语,应该把下面的语句加入到</span><br><span class="line">            %packages:</span><br><span class="line">            @french-support</span><br><span class="line"></span><br><span class="line">logvol(可选)</span><br><span class="line">            使用以下语法来为逻辑卷管理(LVM)创建逻辑卷:</span><br><span class="line">            logvol &lt;mntpoint&gt; --vgname=&lt;name&gt; --size=&lt;size&gt; --name=&lt;name&gt;&lt;options&gt;</span><br><span class="line">            这些选项如下所示:</span><br><span class="line">            --noformat,使用一个现存的逻辑卷,不进行格式化.</span><br><span class="line">            --useexisting,使用一个现存的逻辑卷,重新格式化它.</span><br><span class="line">            --fstype=,为逻辑卷设置文件系统类型.合法值有:ext2,ext3,swap和vfat.</span><br><span class="line">            --fsoptions=,为逻辑卷设置文件系统类型.合法值有:ext2,ext3,swap和vfat.</span><br><span class="line">            --bytes-per-inode=,指定在逻辑卷上创建的文件系统的节点的大小.因为并不是所有的文件系统都支持这个选项,所以在其他情况下它都被忽略.</span><br><span class="line">            --grow=,告诉逻辑卷使用所有可用空间(若有),或使用设置的最大值.</span><br><span class="line">            --maxsize=,当逻辑卷被设置为可扩充时,以MB为单位的分区最大值.在这里指定一个整数值,不要在数字后加MB.</span><br><span class="line">            --recommended=,自动决定逻辑卷的大小.</span><br><span class="line">            --percent=,用卷组里可用空间的百分比来指定逻辑卷的大小.</span><br><span class="line">            首先创建分区,然后创建逻辑卷组,再创建逻辑卷.</span><br><span class="line">                    例如:</span><br><span class="line">                    part pv.01 --size 3000 </span><br><span class="line">                    volgroup myvg pv.01</span><br><span class="line">                    logvol / --vgname=myvg --size=2000 --name=rootvol</span><br><span class="line"></span><br><span class="line">logging(可选)</span><br><span class="line">            这个命令控制安装过程中anaconda的错误日志.它对安装好的系统没有影响.</span><br><span class="line">            --host=,发送日志信息到给定的远程主机,这个主机必须运行配置为可接受远程日志的syslogd进程.</span><br><span class="line">     --port=,如果远程的syslogd进程没有使用缺省端口,这个选项必须被指定.</span><br><span class="line">            --level=,debug,info,warning,error或critical中的一个.</span><br><span class="line">            指定tty3上显示的信息的最小级别.然而,无论这个级别怎么设置,所有的信息仍将发送到日志文件.</span><br><span class="line"></span><br><span class="line">mediacheck(可选)</span><br><span class="line">            如果指定的话,anaconda将在安装介质上运行mediacheck.这个命令只适用于交互式的安装,所以缺省是禁用的.</span><br><span class="line"></span><br><span class="line">monitor(可选)</span><br><span class="line">            如果monitor命令没有指定,anaconda将使用X来自动检测的显示器设置.请在手工配置显示器之前尝试这个命令.</span><br><span class="line">            --hsync=,指定显示器的水平频率.</span><br><span class="line">            --vsync=,指定显示器的垂直频率.</span><br><span class="line">            --monitor=,使用指定的显示器；显示器的名字应该在hwdata软件包里的/usr/share/hwdata/MonitorsDB列表上.这个显示器的列表也可以在Kickstart Configurator的X配置屏幕上找到.如果提供了--hsync或--vsync,它将被忽略.如果没有提供显示器信息,安装程序将自动探测显示器.</span><br><span class="line">            --noprobe=,不要试图探测显示器.</span><br><span class="line"></span><br><span class="line">mouse(已取消)</span><br><span class="line">            mouse 关键字已经被取消,使用它将导致屏幕出现错误信息并终止安装.</span><br><span class="line"></span><br><span class="line">network(可选)</span><br><span class="line">            为系统配置网络信息.如果 kickstart安装不要求联网(换句话说,不从NFS,HTTP或FTP安装),就不需要为系统配置网络.如果安装要求联网而kickstart文件里没有提供网络信息,安装程序会假定从eth0通过动态IP地址(BOOTP/DHCP)来安装,并配置安装完的系统动态决定IP地址.network选项为通过网络的kickstart安装以及所安装的系统配置联网信息.</span><br><span class="line">            --bootproto=,dhcp,bootp或static中的一种,缺省值是dhcp.bootp和dhcp被认为是相同的.</span><br><span class="line">                    static方法要求在kickstart文件里输入所有的网络信息.顾名思义,这些信息是静态的且在安装过程中和安装后所有.静态网络的设置行更为复杂,因为必须包括所有的网络配置信息.必须指定IP地址,网络,网关和命名服务器.</span><br><span class="line">                    例如(&quot;\&quot;表示连续的行):</span><br><span class="line">                    network --bootproto=static --ip=10.0.2.15 --netmask=255.255.255.0 \</span><br><span class="line">                    --gateway=10.0.2.254 --nameserver=10.0.2.1</span><br><span class="line">                    如果使用静态方法,请注意以下两个限制:</span><br><span class="line">                            所有静态联网配置信息都必须在一行上指定,不能使用反斜线来换行.</span><br><span class="line">                            在这里只能够指定一个命名服务器.然而,如果需要的话,可以使用kickstart文件的%post段落来添加更多的命名服务器.</span><br><span class="line">            --device=,用来选择用于安装的特定的以太设备.注意,除非kickstart文件是一个本地文件(如ks=floppy),否则--device=的使用是无效的.这是因为安装程序会配置网络来寻找kickstart文件.</span><br><span class="line">                    例如: network --bootproto=dhcp --device=eth0</span><br><span class="line">            --ip=,要安装的机器的IP地址.</span><br><span class="line">            --gateway=,IP地址格式的默认网关.</span><br><span class="line">            --nameserver=,主名称服务器,IP地址格式.</span><br><span class="line">            --nodns,不要配置任何 DNS 服务器.</span><br><span class="line">            --netmask=,安装的系统的子网掩码.</span><br><span class="line">            --hostname=,安装的系统的主机名.</span><br><span class="line">            --ethtool=,指定传给ethtool程序的网络设备的其他底层设置.</span><br><span class="line">            --essid=,无线网络的网络ID.</span><br><span class="line">            --wepkey=,无线网络的加密密钥.</span><br><span class="line">            --onboot=,是否在引导时启用该设备.</span><br><span class="line">            --class=,DHCP类型.</span><br><span class="line">            --mtu=,该设备的MTU.</span><br><span class="line">            --noipv4=,禁用此设备的IPv4.</span><br><span class="line">            --noipv6=,禁用此设备的IPv6.</span><br><span class="line"></span><br><span class="line">multipath(可选)</span><br><span class="line">            multipath --name= --device= --rule=</span><br><span class="line"></span><br><span class="line">part或partition(对于安装是必需的,升级可忽略).</span><br><span class="line">            在系统上创建分区.</span><br><span class="line">            如果不同分区里有多个红帽企业Linux系统,安装程序会提示用户升级哪个系统.</span><br><span class="line">            警告:作为安装过程的一部分,所有被创建的分区都会被格式化,除非使用了--noformat和--onpart.</span><br><span class="line">            &lt;mntpoint&gt;,&lt;mntpoint&gt;是分区的挂载点,它必须是下列形式中的一种:</span><br><span class="line">                    /&lt;path&gt;,例如,/,/usr,/home</span><br><span class="line">                    swap,该分区被用作交换空间,要自动决定交换分区的大小,使用--recommended选项.</span><br><span class="line">                            swap --recommended</span><br><span class="line">                            自动生成的交换分区的最小值大于系统内存的数量,但小于系统内存的两倍.</span><br><span class="line">                    raid.&lt;id&gt;,该分区用于 software RAID(参考 raid).</span><br><span class="line">                    pv.&lt;id&gt;,该分区用于 LVM(参考 logvol).</span><br><span class="line">            --size=,以MB为单位的分区最小值.在此处指定一个整数值,如500.不要在数字后面加MB.</span><br><span class="line">            --grow,告诉分区使用所有可用空间(若有),或使用设置的最大值.</span><br><span class="line">            --maxsize=,当分区被设置为可扩充时,以MB为单位的分区最大值.在这里指定一个整数值,不要在数字后加MB.</span><br><span class="line">            --noformat,用--onpart命令来告诉安装程序不要格式化分区.</span><br><span class="line">            --onpart=或--usepart=,把分区放在已存在的设备上.</span><br><span class="line">                    例如:partition /home --onpart=hda1,把/home置于必须已经存在的/dev/hda1上.</span><br><span class="line">            --ondisk=或--ondrive=,强迫分区在指定磁盘上创建.</span><br><span class="line">                    例如:--ondisk=sdb把分区置于系统的第二个SCSI磁盘上.</span><br><span class="line">            --asprimary,强迫把分区分配为主分区,否则提示分区失败.</span><br><span class="line">            --type=(用fstype代替),这个选项不再可用了.应该使用fstype.</span><br><span class="line">            --fstype=,为分区设置文件系统类型.有效的类型为ext2,ext3,swap和vfat.</span><br><span class="line">            --start=,指定分区的起始柱面,它要求用--ondisk=或ondrive=指定驱动器.它也要求用--end=指定结束柱面或用--size=指定分区大小.</span><br><span class="line">            --end=,指定分区的结束柱面.它要求用--start=指定起始柱面.</span><br><span class="line">            --bytes-per-inode=,指定此分区上创建的文件系统的节点大小.不是所有的文件系统都支持这个选项,所以在其他情况下它都被忽略.</span><br><span class="line">            --recommended,自动决定分区的大小.</span><br><span class="line">            --onbiosdisk,强迫在 BIOS 找到的特定磁盘上创建分区.</span><br><span class="line">            注:如果因为某种原因分区失败了,虚拟终端3上会显示诊断信息.</span><br><span class="line"></span><br><span class="line">poweroff(可选)</span><br><span class="line">            在安装成功后关闭系统并断电.通常,在手工安装过程中,anaconda会显示一条信息并等待用户按任意键来重新启动系统.在kickstart的安装过程中,如果没有指定完成方法,将使用缺省的reboot选项.</span><br><span class="line"></span><br><span class="line">raid(可选)</span><br><span class="line">            组成软件RAID设备.该命令的格式是:</span><br><span class="line">            raid &lt;mntpoint&gt; --level=&lt;level&gt; --device=&lt;mddevice&gt;&lt;partitions*&gt;</span><br><span class="line">            &lt;mntpoint&gt;,RAID文件系统被挂载的位置.如果是/,除非已经有引导分区存在(/boot),RAID级别必须是1.如果已经有引导分区,/boot分区必须是级别1且根分区(/)可以是任何可用的类型.&lt;partitions*&gt;(这表示可以有多个分区)列出了加入到RAID阵列的RAID标识符.</span><br><span class="line">            --level=,要使用的RAID级别(0,1,或5).</span><br><span class="line">            --device=,要使用的RAID设备的名称(如md0或md1).RAID设备的范围从md0直到md7,每个设备只能被使用一次.</span><br><span class="line">            --bytes-per-inode=,指定RAID设备上创建的文件系统的节点大小.不是所有的文件系统都支持这个选项,所以对于那些文件系统它都会被忽略.</span><br><span class="line">            --spares=,指定RAID阵列应该被指派N个备用驱动器.备用驱动器可以被用来在驱动器失败时重建阵列.</span><br><span class="line">            --fstype=,为RAID阵列设置文件系统类型.合法值有:ext2,ext3,swap和vfat.</span><br><span class="line">            --fsoptions=,指定当挂载文件系统时使用的free form字符串.这个字符串将被复制到系统的/etc/fstab文件里且应该用引号括起来.</span><br><span class="line">            --noformat,使用现存的RAID设备,不要格式化RAID阵列.</span><br><span class="line">            --useexisting,使用现存的RAID设备,重新格式化它.</span><br><span class="line"></span><br><span class="line">reboot(可选)</span><br><span class="line">            在成功完成安装(没有参数)后重新启动.通常,kickstart会显示信息并等待用户按任意键来重新启动系统.</span><br><span class="line"></span><br><span class="line">repo(可选)</span><br><span class="line">            配置用于软件包安装来源的额外的yum库.可以指定多个repo行.</span><br><span class="line">            repo --name=&lt;repoid&gt; [--baseline=&lt;url&gt;| --mirrorlist=&lt;url&gt;]</span><br><span class="line">            --name=,repo id.这个选项是必需的.</span><br><span class="line">            --baseurl=,库的URL.这里不支持yum repo配置文件里使用的变量.可以使用它或者--mirrorlist,亦或两者都不使用.</span><br><span class="line">            --mirrorlist=,指向库镜像的列表的URL.这里不支持yum repo配置文件里可能使用的变量.可以使用它或者--baseurl,亦或两者都不使用.</span><br><span class="line"></span><br><span class="line">rootpw(必需)</span><br><span class="line">            把系统的根口令设置为&lt;password&gt;参数.</span><br><span class="line">            rootpw [--iscrypted] &lt;password&gt;</span><br><span class="line">            --iscrypted,如果该选项存在,口令就会假定已被加密.</span><br><span class="line"></span><br><span class="line">selinux(可选)</span><br><span class="line">            在系统里设置SELinux状态.在anaconda里,SELinux缺省为enforcing.</span><br><span class="line">            selinux [--disabled|--enforcing|--permissive]</span><br><span class="line">            --enforcing,启用SELinux,实施缺省的targeted policy.</span><br><span class="line">                    注:如果kickstart文件里没有selinux选项,SELinux将被启用并缺省设置为--enforcing.</span><br><span class="line">            --permissive,输出基于SELinux策略的警告,但实际上不执行这个策略.</span><br><span class="line">            --disabled,在系统里完全地禁用 SELinux.</span><br><span class="line"></span><br><span class="line">services(可选)</span><br><span class="line">            修改运行在缺省运行级别下的缺省的服务集.在disabled列表里列出的服务将在enabled列表里的服务启用之前被禁用.</span><br><span class="line">            --disabled,禁用用逗号隔开的列表里的服务.</span><br><span class="line">            --enabled,启用用逗号隔开的列表里的服务.</span><br><span class="line"></span><br><span class="line">shutdown(可选)</span><br><span class="line">            在成功完成安装后关闭系统.在kickstart安装过程中,如果没有指定完成方法,将使用缺省的reboot选项.</span><br><span class="line"></span><br><span class="line">skipx(可选)</span><br><span class="line">            如果存在,安装的系统上就不会配置X.</span><br><span class="line"></span><br><span class="line">text(可选)</span><br><span class="line">            在文本模式下执行kickstart安装. kickstart安装默认在图形模式下安装.</span><br><span class="line"></span><br><span class="line">timezone(可选)</span><br><span class="line">            把系统时区设置为&lt;timezone&gt;,它可以是timeconfig列出的任何时区.</span><br><span class="line">            timezone [--utc] &lt;timezone&gt;</span><br><span class="line">            --utc,如果存在,系统就会假定硬件时钟被设置为UTC(格林威治标准)时间.</span><br><span class="line"></span><br><span class="line">upgrade(可选)</span><br><span class="line">            告诉系统升级现有的系统而不是安装一个全新的系统.必须指定 cdrom,harddrive,nfs或url(对于FTP和HTTP而言)中的一个作为安装树的位置.详情请参考 install.</span><br><span class="line"></span><br><span class="line">user(可选)</span><br><span class="line">            在系统上创建新用户.</span><br><span class="line">            user --name=&lt;username&gt; [--groups=&lt;list&gt;] [--homedir=&lt;homedir&gt;] [--password=&lt;password&gt;] [--iscrypted] [--shell=&lt;shell&gt;] [--uid=&lt;uid&gt;]</span><br><span class="line">            --name=,提供用户的名字.这个选项是必需的.</span><br><span class="line">            --groups=,除了缺省的组以外,用户应该属于的用逗号隔开的组的列表.</span><br><span class="line">            --homedir=,用户的主目录.如果没有指定,缺省为/home/&lt;username&gt;.</span><br><span class="line">            --password=,新用户的密码.如果没有指定,这个帐号将缺省被锁住.</span><br><span class="line">            --iscrypted=,所提供的密码是否已经加密？</span><br><span class="line">            --shell=,用户的登录shell.如果不提供,缺省为系统的缺省设置.</span><br><span class="line">            --uid=,用户的UID.如果未提供,缺省为下一个可用的非系统 UID.</span><br><span class="line"></span><br><span class="line">vnc(可选)</span><br><span class="line">            允许通过VNC远程地查看图形化的安装.文本模式的安装通常更喜欢使用这个方法,因为在文本模式下有某些大小和语言的限制.如果为no,这个命令将启动不需要密码的VNC服务器并打印出需要用来连接远程机器的命令.</span><br><span class="line">            vnc [--host=&lt;hostname&gt;] [--port=&lt;port&gt;] [--password=&lt;password&gt;]</span><br><span class="line">            --host=,不启动VNC服务器,而是连接至给定主机上的VNC viewer进程.</span><br><span class="line">            --port=,提供远程VNC viewer进程侦听的端口.如果不提供,anaconda将使用VNC的缺省端口.</span><br><span class="line">            --password=,设置连接VNC会话必需的密码.这是可选的,但却是我们所推荐的选项.</span><br><span class="line"></span><br><span class="line">volgroup(可选)</span><br><span class="line">            用来创建逻辑卷管理(LVM)组,其语法格式为:</span><br><span class="line">            volgroup &lt;name&gt;&lt;partition&gt;&lt;options&gt;</span><br><span class="line">            这些选项如下所示:</span><br><span class="line">            --noformat,使用一个现存的卷组,不要格式化它.</span><br><span class="line">            --useexisting,使用一个现存的卷组,重新格式化它.</span><br><span class="line">            --pesize=,设置物理分区(physical extent)的大小.</span><br><span class="line">            首先创建分区,然后创建逻辑卷组,再创建逻辑卷.例如:</span><br><span class="line"></span><br><span class="line">xconfig(可选)</span><br><span class="line">            配置X Window 系统.如果没有指定这个选项且安装了X,用户必须在安装过程中手工配置X；如果最终系统里没有安装X,这个选项不应该被使用.</span><br><span class="line">            --driver,指定用于视频硬件的 X 驱动.</span><br><span class="line">            --videoram=,指定显卡的显存数量.</span><br><span class="line">            --defaultdesktop=,指定GNOME或KDE作为缺省的桌面(假设已经通过%packages安装了GNOME或KDE桌面环境).</span><br><span class="line">            --startxonboot,在安装的系统上使用图形化登录.</span><br><span class="line">            --resolution=,指定安装的系统上X窗口系统的默认分辨率.有效值有:640x480,800x600,1024x768,1152x864, 1280x1024,1400x1050,1600x1200.请确定指定与视频卡和显示器兼容的分辨率.</span><br><span class="line">            --depth=,指定安装的系统上的 X 窗口系统的默认色彩深度.有效值有:8,16,24,和 32.请确定指定与视频卡和显示器兼容的色彩深度.</span><br><span class="line"></span><br><span class="line">zerombr(可选)</span><br><span class="line">            如果指定了zerombr且yes是它的唯一参数,任何磁盘上的无效分区表都将被初始化.这会毁坏有无效分区表的磁盘上的所有内容.这个命令的格式应该如下:</span><br><span class="line">            zerombr yes</span><br><span class="line">            其它格式均无效.</span><br><span class="line"></span><br><span class="line">zfcp(可选)</span><br><span class="line">            zfcp [--devnum=&lt;devnum&gt;] [--fcplun=&lt;fcplun&gt;] [--scsiid=&lt;scsiid&gt;] [--scsilun=&lt;scsilun&gt;] [--wwpn=&lt;wwpn&gt;]</span><br><span class="line"></span><br><span class="line">    %include</span><br><span class="line">            使用 %include/path/to/file命令可以把其他文件的内容包含在kickstart文件里,就好像这些内容出现在kickstart文件的%include命令后一样.</span><br></pre></td></tr></table></figure><p>LVM 分区配置<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># LVM partitioning infomation</span><br><span class="line">part /boot --fstype=&quot;ext4&quot; --size=200                          #这句很简单，创建一个ext4的分区，挂载到/boot，大小为200M，注意单位</span><br><span class="line">part pv.01 --size=10000                                        #创建第一个PV分区，所以是01，大小为10000M,第一个硬盘</span><br><span class="line">volgroup vg_root pv.01                                         #创建一个VG，名字为vg_root，包含第一个PV分区</span><br><span class="line">logvol  /  --vgname=vg_root  --size=2000  --name=lv_root       #创建一个LV，挂载到/  ，从vg_root中创建，大小为2000M，LV的名字是lv_root</span><br><span class="line">part pv.02 --size=2048                                         #创建第二个PV分区，大小为2048M，第二个硬盘</span><br><span class="line">volgroup vg_swap pv.02                                         #创建VG，名字vg_swap ，包含PV02</span><br><span class="line">logvol swap --vgname=vg_swap --size=1 --grow  --name=lv_swap   #  --size 后面跟的是大小， --grow 指的是使用所有可用空间，那么这句的意思就是使用VG所有可用空间来创建LV</span><br></pre></td></tr></table></figure><br>摘抄:<br><a href="https://www.zhihu.com/tardis/bd/art/374054171?source_id=1001">https://www.zhihu.com/tardis/bd/art/374054171?source_id=1001</a> PXE全自动批量安装linux系统【全程干货详解-保姆级教程】<br><a href="https://blog.csdn.net/supersyd/article/details/23704615">https://blog.csdn.net/supersyd/article/details/23704615</a>  kickstart 建 LVM的方法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="linux" scheme="https://sheenzxx.github.io/categories/linux/"/>
    
    
    <category term="摘抄" scheme="https://sheenzxx.github.io/tags/%E6%91%98%E6%8A%84/"/>
    
  </entry>
  
  <entry>
    <title>mongodb运维一些相关命令</title>
    <link href="https://sheenzxx.github.io/2023/04/12/mongoMaintain/"/>
    <id>https://sheenzxx.github.io/2023/04/12/mongoMaintain/</id>
    <published>2023-04-12T03:00:08.000Z</published>
    <updated>2023-07-12T07:58:15.875Z</updated>
    
    <content type="html"><![CDATA[<p>登录数据库<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[wuiprd@WCN-GZP-WUIMDB1 ~]$ mongo</span><br><span class="line">MongoDB shell version v4.4.16</span><br><span class="line">connecting to: mongodb://127.0.0.1:3717/?compressors=disabled&amp;gssapiServiceName=mongodb</span><br><span class="line">Implicit session: session &#123; &quot;id&quot; : UUID(&quot;df6155be-e08c-4c62-a9be-ad653471eb22&quot;) &#125;</span><br><span class="line">MongoDB server version: 4.4.16</span><br><span class="line">Mmp_wuid:PRIMARY&gt; use admin</span><br><span class="line">switched to db admin</span><br><span class="line">Mmp_wuid:PRIMARY&gt; db.auth(&#x27;root&#x27;,&#x27;xxxxx&#x27;)</span><br><span class="line">1</span><br></pre></td></tr></table></figure><br>查看数据库<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mmp_wuid:PRIMARY&gt; show dbs;</span><br></pre></td></tr></table></figure><br>查看从库信息<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mmp_wuid:PRIMARY&gt; db.printSecondaryReplicationInfo()</span><br></pre></td></tr></table></figure><br>修改从库的权重<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">Mmp_wuid:PRIMARY&gt; rs.conf()    #查看集群配置详情</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : &quot;Mmp_wuid&quot;,</span><br><span class="line">&quot;version&quot; : 3,</span><br><span class="line">&quot;term&quot; : 16,</span><br><span class="line">&quot;protocolVersion&quot; : NumberLong(1),</span><br><span class="line">&quot;writeConcernMajorityJournalDefault&quot; : true,</span><br><span class="line">&quot;members&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 0,</span><br><span class="line">&quot;host&quot; : &quot;10.82.49.101:3717&quot;,</span><br><span class="line">&quot;arbiterOnly&quot; : false,</span><br><span class="line">&quot;buildIndexes&quot; : true,</span><br><span class="line">&quot;hidden&quot; : false,</span><br><span class="line">&quot;priority&quot; : 2,</span><br><span class="line">&quot;tags&quot; : &#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">&quot;slaveDelay&quot; : NumberLong(0),</span><br><span class="line">&quot;votes&quot; : 1</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 1,</span><br><span class="line">&quot;host&quot; : &quot;10.82.49.102:3717&quot;,</span><br><span class="line">&quot;arbiterOnly&quot; : false,</span><br><span class="line">&quot;buildIndexes&quot; : true,</span><br><span class="line">&quot;hidden&quot; : false,</span><br><span class="line">&quot;priority&quot; : 1,</span><br><span class="line">&quot;tags&quot; : &#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">&quot;slaveDelay&quot; : NumberLong(0),</span><br><span class="line">&quot;votes&quot; : 1</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 2,</span><br><span class="line">&quot;host&quot; : &quot;10.82.49.103:3717&quot;,</span><br><span class="line">&quot;arbiterOnly&quot; : true,</span><br><span class="line">&quot;buildIndexes&quot; : true,</span><br><span class="line">&quot;hidden&quot; : false,</span><br><span class="line">&quot;priority&quot; : 0,</span><br><span class="line">&quot;tags&quot; : &#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">&quot;slaveDelay&quot; : NumberLong(0),</span><br><span class="line">&quot;votes&quot; : 1</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line">&quot;settings&quot; : &#123;</span><br><span class="line">&quot;chainingAllowed&quot; : true,</span><br><span class="line">&quot;heartbeatIntervalMillis&quot; : 2000,</span><br><span class="line">&quot;heartbeatTimeoutSecs&quot; : 10,</span><br><span class="line">&quot;electionTimeoutMillis&quot; : 10000,</span><br><span class="line">&quot;catchUpTimeoutMillis&quot; : -1,</span><br><span class="line">&quot;catchUpTakeoverDelayMillis&quot; : 30000,</span><br><span class="line">&quot;getLastErrorModes&quot; : &#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">&quot;getLastErrorDefaults&quot; : &#123;</span><br><span class="line">&quot;w&quot; : 1,</span><br><span class="line">&quot;wtimeout&quot; : 0</span><br><span class="line">&#125;,</span><br><span class="line">&quot;replicaSetId&quot; : ObjectId(&quot;63082f54832262d25063ec05&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>在维护过程中，可能需要重启主库，但又不想让重启主库时发生切换。这个时候我们需要修改slave 的优先级。让它检测到主库重启也不切换。<br>在配置中可以看到从库 对应members列表中_id=1 的配置，其priority = 1，我们需要改为0，操作如下<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Mmp_wuid:PRIMARY&gt; cfg = rs.conf()     #导入配置</span><br><span class="line"></span><br><span class="line">Mmp_wuid:PRIMARY&gt; cfg.members[1].priority=0    #修改优先级</span><br><span class="line"></span><br><span class="line">Mmp_wuid:PRIMARY&gt; rs.reconfig(cfg)    #重新配置</span><br></pre></td></tr></table></figure><br>查看monogdb 缓存cache_size 大小<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mmp_wuid:PRIMARY&gt; db.serverStatus().wiredTiger.cache[&#x27;maximum bytes configured&#x27;]/1024/1024/1024</span><br><span class="line">20</span><br></pre></td></tr></table></figure><br>修改cache_size 大小<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mmp_wuid:PRIMARY&gt; db.adminCommand( &#123; &quot;setParameter&quot;: 1, &quot;wiredTigerEngineRuntimeConfig&quot;: &quot;cache_size=20G&quot;&#125;)</span><br></pre></td></tr></table></figure></p><p>查看当前连接数信息<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Mmp_wuid:PRIMARY&gt; db.serverStatus().connections;</span><br><span class="line">&#123;</span><br><span class="line">&quot;current&quot; : 19,</span><br><span class="line">&quot;available&quot; : 51181,</span><br><span class="line">&quot;totalCreated&quot; : 5787,</span><br><span class="line">&quot;active&quot; : 4,</span><br><span class="line">&quot;exhaustIsMaster&quot; : 1,</span><br><span class="line">&quot;exhaustHello&quot; : 1,</span><br><span class="line">&quot;awaitingTopologyChanges&quot; : 35</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>查看连接详情<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Mmp_wuid:PRIMARY&gt; db.currentOp(&#123;&quot;op&quot; : &quot;insert&quot;,&quot;active&quot; : true&#125;)  #查询op 操作是insert ，并且状态是活跃的连接详情</span><br><span class="line"></span><br><span class="line">Mmp_wuid:PRIMARY&gt; db.currentOp(&#123;&quot;secs_running&quot; : &#123;&quot;$gt&quot;:5&#125;&#125;)    #查询运行时间超过5秒的连接详情</span><br><span class="line"></span><br><span class="line">Mmp_wuid:PRIMARY&gt;  db.currentOp(&#123;&quot;secs_running&quot; : &#123;&quot;$gt&quot;:5&#125;&#125;).inprog.forEach(function(item)&#123;db.killOp(item.opid)&#125;) #查询超过5秒的连接并杀掉</span><br></pre></td></tr></table></figure></p><p>获取当前数据库操作统计<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mgset-54903079 [direct: primary] wuid&gt; db.serverStatus().opcounters</span><br><span class="line">&#123;</span><br><span class="line">  insert: Long(&quot;1638687567&quot;),</span><br><span class="line">  query: Long(&quot;2145547252&quot;),</span><br><span class="line">  update: Long(&quot;2074042631&quot;),</span><br><span class="line">  delete: Long(&quot;778119&quot;),</span><br><span class="line">  getmore: Long(&quot;3597908695&quot;),</span><br><span class="line">  command: Long(&quot;4173516698&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>查看是否具有全表扫描的操作<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[mongos] wuid&gt; db.currentOp(&#123;planSummary: &#x27;COLLSCAN&#x27;&#125;)</span><br><span class="line">&#123;</span><br><span class="line">  inprog: [</span><br><span class="line">    &#123;</span><br><span class="line">      ...</span><br><span class="line">      active: true,</span><br><span class="line">      currentOpTime: &#x27;2023-06-27T10:50:10.861+0800&#x27;,</span><br><span class="line">      effectiveUsers: [ &#123; user: &#x27;__system&#x27;, db: &#x27;local&#x27; &#125; ],</span><br><span class="line">      opid: &#x27;d-wz9efd20b71ae404:210659684&#x27;,</span><br><span class="line">      secs_running: Long(&quot;0&quot;),</span><br><span class="line">      microsecs_running: Long(&quot;64337&quot;),</span><br><span class="line">      op: &#x27;getmore&#x27;,</span><br><span class="line">      ns: &#x27;local.oplog.rs&#x27;,</span><br><span class="line">      command:&#123;...&#125;</span><br><span class="line">      planSummary: &#x27;COLLSCAN&#x27;,</span><br><span class="line">      ...</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="启动mongodb"><a href="#启动mongodb" class="headerlink" title="启动mongodb"></a>启动mongodb</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start mongod.service</span><br></pre></td></tr></table></figure><h1 id="停用mongodb"><a href="#停用mongodb" class="headerlink" title="停用mongodb"></a>停用mongodb</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop mongod.service</span><br></pre></td></tr></table></figure><h1 id="查看启动结果"><a href="#查看启动结果" class="headerlink" title="查看启动结果"></a>查看启动结果</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status mongod.service</span><br></pre></td></tr></table></figure><p>启动过程中因为mongodb 处理回滚时间过长。导致启动到一半就被杀死终止<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:09:46.546+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;COMMAND&quot;, &quot;id&quot;:51803, &quot;ctx&quot;:&quot;conn4539024&quot;,&quot;msg&quot;:&quot;Slow query&quot;,&quot;attr&quot;:&#123;&quot;type&quot;:&quot;command&quot;,&quot;ns&quot;:&quot;wuid.tmp_repeat_unionId&quot;,&quot;command&quot;:&#123;&quot;insert&quot;:&quot;tmp_repeat_unionId&quot;,&quot;ordered&quot;:false,&quot;bypassDocumentValidation&quot;:true,&quot;$db&quot;:&quot;wuid&quot;&#125;,&quot;ninserted&quot;:128,&quot;keysInserted&quot;:128,&quot;numYields&quot;:0,&quot;reslen&quot;:245,&quot;locks&quot;:&#123;&quot;ParallelBatchWriterMode&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;r&quot;:1&#125;&#125;,&quot;FeatureCompatibilityVersion&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;ReplicationStateTransition&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Global&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Database&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Collection&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Mutex&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;r&quot;:1&#125;&#125;&#125;,&quot;flowControl&quot;:&#123;&quot;acquireCount&quot;:1,&quot;acquireWaitCount&quot;:1,&quot;timeAcquiringMicros&quot;:985762&#125;,&quot;storage&quot;:&#123;&#125;,&quot;protocol&quot;:&quot;op_query&quot;,&quot;durationMillis&quot;:988&#125;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:09:46.546+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;COMMAND&quot;, &quot;id&quot;:51803, &quot;ctx&quot;:&quot;conn4539022&quot;,&quot;msg&quot;:&quot;Slow query&quot;,&quot;attr&quot;:&#123;&quot;type&quot;:&quot;command&quot;,&quot;ns&quot;:&quot;wuid.tmp_to_id_unionId&quot;,&quot;command&quot;:&#123;&quot;insert&quot;:&quot;tmp_to_id_unionId&quot;,&quot;ordered&quot;:false,&quot;bypassDocumentValidation&quot;:true,&quot;$db&quot;:&quot;wuid&quot;&#125;,&quot;ninserted&quot;:128,&quot;keysInserted&quot;:128,&quot;numYields&quot;:0,&quot;reslen&quot;:245,&quot;locks&quot;:&#123;&quot;ParallelBatchWriterMode&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;r&quot;:1&#125;&#125;,&quot;FeatureCompatibilityVersion&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;ReplicationStateTransition&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Global&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Database&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Collection&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Mutex&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;r&quot;:1&#125;&#125;&#125;,&quot;flowControl&quot;:&#123;&quot;acquireCount&quot;:1,&quot;acquireWaitCount&quot;:1,&quot;timeAcquiringMicros&quot;:971338&#125;,&quot;storage&quot;:&#123;&#125;,&quot;protocol&quot;:&quot;op_query&quot;,&quot;durationMillis&quot;:974&#125;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:09:47.488+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;COMMAND&quot;, &quot;id&quot;:20482, &quot;ctx&quot;:&quot;conn4538701&quot;,&quot;msg&quot;:&quot;Going to kill op&quot;,&quot;attr&quot;:&#123;&quot;opId&quot;:1071745126&#125;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:09:47.488+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;COMMAND&quot;, &quot;id&quot;:20884, &quot;ctx&quot;:&quot;conn4538701&quot;,&quot;msg&quot;:&quot;Killed operation&quot;,&quot;attr&quot;:&#123;&quot;opId&quot;:1071745126&#125;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:09:47.558+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;COMMAND&quot;, &quot;id&quot;:51803, &quot;ctx&quot;:&quot;conn4539024&quot;,&quot;msg&quot;:&quot;Slow query&quot;,&quot;attr&quot;:&#123;&quot;type&quot;:&quot;command&quot;,&quot;ns&quot;:&quot;wuid.tmp_wuid_test&quot;,&quot;command&quot;:&#123;&quot;insert&quot;:&quot;tmp_wuid_test&quot;,&quot;ordered&quot;:false,&quot;bypassDocumentValidation&quot;:true,&quot;$db&quot;:&quot;wuid&quot;&#125;,&quot;ninserted&quot;:128,&quot;keysInserted&quot;:128,&quot;numYields&quot;:0,&quot;reslen&quot;:245,&quot;locks&quot;:&#123;&quot;ParallelBatchWriterMode&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;r&quot;:1&#125;&#125;,&quot;FeatureCompatibilityVersion&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;ReplicationStateTransition&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Global&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Database&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Collection&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Mutex&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;r&quot;:1&#125;&#125;&#125;,&quot;flowControl&quot;:&#123;&quot;acquireCount&quot;:1,&quot;acquireWaitCount&quot;:1,&quot;timeAcquiringMicros&quot;:986487&#125;,&quot;storage&quot;:&#123;&#125;,&quot;protocol&quot;:&quot;op_query&quot;,&quot;durationMillis&quot;:989&#125;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:09:47.568+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;COMMAND&quot;, &quot;id&quot;:51803, &quot;ctx&quot;:&quot;conn4539022&quot;,&quot;msg&quot;:&quot;Slow query&quot;,&quot;attr&quot;:&#123;&quot;type&quot;:&quot;command&quot;,&quot;ns&quot;:&quot;wuid.tmp_repeat_unionId&quot;,&quot;command&quot;:&#123;&quot;insert&quot;:&quot;tmp_repeat_unionId&quot;,&quot;ordered&quot;:false,&quot;bypassDocumentValidation&quot;:true,&quot;$db&quot;:&quot;wuid&quot;&#125;,&quot;ninserted&quot;:128,&quot;keysInserted&quot;:128,&quot;numYields&quot;:0,&quot;reslen&quot;:245,&quot;locks&quot;:&#123;&quot;ParallelBatchWriterMode&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;r&quot;:1&#125;&#125;,&quot;FeatureCompatibilityVersion&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;ReplicationStateTransition&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Global&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Database&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Collection&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;w&quot;:1&#125;&#125;,&quot;Mutex&quot;:&#123;&quot;acquireCount&quot;:&#123;&quot;r&quot;:1&#125;&#125;&#125;,&quot;flowControl&quot;:&#123;&quot;acquireCount&quot;:1,&quot;acquireWaitCount&quot;:1,&quot;timeAcquiringMicros&quot;:1008708&#125;,&quot;storage&quot;:&#123;&#125;,&quot;protocol&quot;:&quot;op_query&quot;,&quot;durationMillis&quot;:1011&#125;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:09:47.760+08:00&quot;&#125;,&quot;s&quot;:&quot;W&quot;, &quot;c&quot;:&quot;COMMAND&quot;, &quot;id&quot;:20525, &quot;ctx&quot;:&quot;conn4538447&quot;,&quot;msg&quot;:&quot;Failed to gather storage statistics for slow operation&quot;,&quot;attr&quot;:&#123;&quot;opId&quot;:1071745126,&quot;error&quot;:&quot;lock acquire timeout&quot;&#125;&#125;</span><br><span class="line">/Kill</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;SHARDING&quot;, &quot;id&quot;:4784902, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Shutting down the WaitForMajorityService&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;NETWORK&quot;, &quot;id&quot;:20562, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Shutdown: going to close listening sockets&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;NETWORK&quot;, &quot;id&quot;:4784905, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Shutting down the global connection pool&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;STORAGE&quot;, &quot;id&quot;:4784906, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Shutting down the FlowControlTicketholder&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;-&quot;, &quot;id&quot;:20520, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Stopping further Flow Control ticket acquisitions.&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;REPL&quot;, &quot;id&quot;:4784907, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Shutting down the replica set node executor&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;NETWORK&quot;, &quot;id&quot;:4784918, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Shutting down the ReplicaSetMonitor&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;SHARDING&quot;, &quot;id&quot;:4784921, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Shutting down the MigrationUtilExecutor&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;CONTROL&quot;, &quot;id&quot;:4784925, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Shutting down free monitoring&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;STORAGE&quot;, &quot;id&quot;:4784927, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Shutting down the HealthLog&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;STORAGE&quot;, &quot;id&quot;:4784929, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Acquiring the global lock for shutdown&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;-&quot;, &quot;id&quot;:4784931, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Dropping the scope cache for shutdown&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;FTDC&quot;, &quot;id&quot;:4784926, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Shutting down full-time data capture&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;CONTROL&quot;, &quot;id&quot;:20565, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Now exiting&quot;&#125;</span><br><span class="line">&#123;&quot;t&quot;:&#123;&quot;$date&quot;:&quot;2023-04-11T17:48:00.573+08:00&quot;&#125;,&quot;s&quot;:&quot;I&quot;, &quot;c&quot;:&quot;CONTROL&quot;, &quot;id&quot;:23138, &quot;ctx&quot;:&quot;SignalHandler&quot;,&quot;msg&quot;:&quot;Shutting down&quot;,&quot;attr&quot;:&#123;&quot;exitCode&quot;:0&#125;&#125;</span><br></pre></td></tr></table></figure><br>这是由于 /usr/lib/systemd/system/mongod.service 中采用了 Type=forking<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">User=mongod</span><br><span class="line">Group=mongod</span><br><span class="line">Environment=&quot;OPTIONS=-f /etc/mongod.conf&quot;</span><br><span class="line">EnvironmentFile=-/etc/sysconfig/mongod</span><br><span class="line">ExecStart=/usr/bin/mongod $OPTIONS</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ExecStartPre=/usr/bin/mkdir -p /app/mongodb</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ExecStartPre=/usr/bin/chown -R mongod:mongod /app/mongodb</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ExecStartPre=/usr/bin/chmod -R 0755 /app/mongodb</span></span><br><span class="line">PermissionsStartOnly=true</span><br><span class="line">PIDFile=/app/mongodb/data/mongod.pid</span><br><span class="line">Type=forking</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">file size</span></span><br><span class="line">LimitFSIZE=infinity</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">cpu time</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><br>在等待forking 子进程超时时杀掉了主进程。而因为实例启动时需要大量回滚恢复操作。这里将Type=forking 注释掉，然后重启。就正常了<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#Type=forking</span><br></pre></td></tr></table></figure></p><p>从库不能读，在主库中设置<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mmp_wuid:PRIMARY&gt; db.getMongo().setSecondaryOk()</span><br></pre></td></tr></table></figure></p><p>查看集群状态<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mmp_wuid:PRIMARY&gt; rs.status()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;登录数据库&lt;br&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br</summary>
      
    
    
    
    <category term="mongodb" scheme="https://sheenzxx.github.io/categories/mongodb/"/>
    
    
    <category term="replica set" scheme="https://sheenzxx.github.io/tags/replica-set/"/>
    
  </entry>
  
  <entry>
    <title>Shell的日期加减操作</title>
    <link href="https://sheenzxx.github.io/2023/04/06/ShellDateAdd/"/>
    <id>https://sheenzxx.github.io/2023/04/06/ShellDateAdd/</id>
    <published>2023-04-06T03:15:37.000Z</published>
    <updated>2023-04-06T03:58:38.704Z</updated>
    
    <content type="html"><![CDATA[<p>开发需要重跑一个任务。输入参数是一个时间字符串，<br>开发给的时间是202304050100 开始到202304061000点结束，按每个小时时间字符串来入传参数。<br>可以敲33个时间字符串，放在文件里面cat 循环输出。但能自动绝不对动手，敲33个时间字符串太无趣。<br>可以考虑写循环并且每个时间加一个小时来推进。关键是如何构造一个时间递加的方法。</p><p>日期的加减运算:<br>date -d “目标时间 +|-n year|month|week|day|hour|minute|second” +”时间格式”<br>目标时间需要注意的是 年月日(空格)时分秒<br>+n 表示往后加多少时间单位<br>-n 表示往前推多少时间单位<br>year|month|week|day|hour|minute|second 时间单位<br>+”时间格式” 加号与日期格式之间不能留空</p><p>有可能用到的是时间格式<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">%</span><span class="language-bash">H 小时，24小时制（00~23）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">I 小时，12小时制（01~12）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">k 小时，24小时制（0~23）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">l 小时，12小时制（1~12）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">M 分钟（00~59）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">p 显示出AM或PM</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">r 显示时间，12小时制（hh:mm:ss %p）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">s 从1970年1月1日00:00:00到目前经历的秒数</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">S 显示秒（00~59）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">T 显示时间，24小时制（hh:mm:ss）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">X 显示时间的格式（%H:%M:%S）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">Z 显示时区，日期域（CST）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">a 星期的简称（Sun~Sat）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">A 星期的全称（Sunday~Saturday）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">h,%b 月的简称（Jan~Dec）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">B 月的全称（January~December）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">c 日期和时间（Tue Nov 20 14:12:58 2012）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">d 一个月的第几天（01~31）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">x,%D 日期（mm/dd/yy）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">j 一年的第几天（001~366）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">m 月份（01~12）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">w 一个星期的第几天（0代表星期天）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">W 一年的第几个星期（00~53，星期一为第一天）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">y 年的最后两个数字（1999则是99）</span></span><br></pre></td></tr></table></figure></p><p>于是很快就能得到我们想要的代码<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">i=0</span><br><span class="line">while [ $i -le 33 ]</span><br><span class="line">do</span><br><span class="line">   let &#x27;i++&#x27;;</span><br><span class="line">   dstr=`date -d &quot;20230405 0000 +$i day&quot; +&quot;%Y%m%d%H%M&quot;</span><br><span class="line">   /data/PRG/tasks/rerun_task.sh $dstr</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;开发需要重跑一个任务。输入参数是一个时间字符串，&lt;br&gt;开发给的时间是202304050100 开始到202304061000点结束，按每个小时时间字符串来入传参数。&lt;br&gt;可以敲33个时间字符串，放在文件里面cat 循环输出。但能自动绝不对动手，敲33个时间字符串太无趣。</summary>
      
    
    
    
    <category term="shell" scheme="https://sheenzxx.github.io/categories/shell/"/>
    
    
    <category term="date" scheme="https://sheenzxx.github.io/tags/date/"/>
    
  </entry>
  
  <entry>
    <title>mysql json 类型</title>
    <link href="https://sheenzxx.github.io/2023/04/04/mysqlJsonType/"/>
    <id>https://sheenzxx.github.io/2023/04/04/mysqlJsonType/</id>
    <published>2023-04-04T02:10:29.000Z</published>
    <updated>2023-04-06T08:48:14.918Z</updated>
    
    <content type="html"><![CDATA[<p>JSON 类型的存储跟LONGBLOB, LONGTEXT 一样 存储长度:L + 4 bytes, where L &lt; 2 的32次方<br>JSON 的传输限制于 max_allowed_package 的大小，可以通过 JSON_STORAGE_SIZE()  函数来确定json 文档的大小<br>JSON 类型并不能直接创建索引，而是由计算列支持<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test_json(</span><br><span class="line">     c json,</span><br><span class="line">     g <span class="type">int</span> generated always <span class="keyword">as</span> (c<span class="operator">-</span><span class="operator">&gt;</span>&quot;$.id&quot;),</span><br><span class="line">     key idx_g (g)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test_json (c) <span class="keyword">VALUES</span></span><br><span class="line">      (<span class="string">&#x27;&#123;&quot;id&quot;: &quot;1&quot;, &quot;name&quot;: &quot;Fred&quot;&#125;&#x27;</span>), (<span class="string">&#x27;&#123;&quot;id&quot;: &quot;2&quot;, &quot;name&quot;: &quot;Wilma&quot;&#125;&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;&#123;&quot;id&quot;: &quot;3&quot;, &quot;name&quot;: &quot;Barney&quot;&#125;&#x27;</span>), (<span class="string">&#x27;&#123;&quot;id&quot;: &quot;4&quot;, &quot;name&quot;: &quot;Betty&quot;&#125;&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test_json;</span><br><span class="line">c                            <span class="operator">|</span>g<span class="operator">|</span></span><br><span class="line"><span class="comment">-----------------------------+-+</span></span><br><span class="line">&#123;&quot;id&quot;: &quot;1&quot;, &quot;name&quot;: &quot;Fred&quot;&#125;  <span class="operator">|</span><span class="number">1</span><span class="operator">|</span></span><br><span class="line">&#123;&quot;id&quot;: &quot;2&quot;, &quot;name&quot;: &quot;Wilma&quot;&#125; <span class="operator">|</span><span class="number">2</span><span class="operator">|</span></span><br><span class="line">&#123;&quot;id&quot;: &quot;3&quot;, &quot;name&quot;: &quot;Barney&quot;&#125;<span class="operator">|</span><span class="number">3</span><span class="operator">|</span></span><br><span class="line">&#123;&quot;id&quot;: &quot;4&quot;, &quot;name&quot;: &quot;Betty&quot;&#125; <span class="operator">|</span><span class="number">4</span><span class="operator">|</span></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test_json <span class="keyword">where</span> c<span class="operator">-</span><span class="operator">&gt;</span>&quot;$.id&quot; <span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">id<span class="operator">|</span>select_type<span class="operator">|</span><span class="keyword">table</span>    <span class="operator">|</span>partitions<span class="operator">|</span>type<span class="operator">|</span>possible_keys<span class="operator">|</span>key  <span class="operator">|</span>key_len<span class="operator">|</span><span class="keyword">ref</span>  <span class="operator">|</span><span class="keyword">rows</span><span class="operator">|</span>filtered<span class="operator">|</span>Extra<span class="operator">|</span></span><br><span class="line"><span class="comment">--+-----------+---------+----------+----+-------------+-----+-------+-----+----+--------+-----+</span></span><br><span class="line"> <span class="number">1</span><span class="operator">|</span>SIMPLE     <span class="operator">|</span>test_json<span class="operator">|</span>          <span class="operator">|</span><span class="keyword">ref</span> <span class="operator">|</span>idx_g        <span class="operator">|</span>idx_g<span class="operator">|</span><span class="number">5</span>      <span class="operator">|</span>const<span class="operator">|</span>   <span class="number">1</span><span class="operator">|</span>   <span class="number">100.0</span><span class="operator">|</span>     <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"> <span class="operator">-</span><span class="operator">&gt;</span> 操作符相当于 json_extract() 函数</span><br><span class="line"> <span class="operator">-</span><span class="operator">&gt;&gt;</span> 操作符相当于 json_unquote() 函数 <span class="comment">--不带双引号</span></span><br><span class="line"> <span class="keyword">SELECT</span> c<span class="operator">-</span><span class="operator">&gt;</span>&quot;$.name&quot;,c<span class="operator">-</span><span class="operator">&gt;&gt;</span>&quot;$.name&quot; <span class="keyword">FROM</span> test_json</span><br><span class="line"> c<span class="operator">-</span><span class="operator">&gt;</span>&quot;$.name&quot;<span class="operator">|</span>c<span class="operator">-</span><span class="operator">&gt;&gt;</span>&quot;$.name&quot;<span class="operator">|</span></span><br><span class="line"><span class="comment">-----------+------------+</span></span><br><span class="line">&quot;Fred&quot;     <span class="operator">|</span>Fred        <span class="operator">|</span></span><br><span class="line">&quot;Wilma&quot;    <span class="operator">|</span>Wilma       <span class="operator">|</span></span><br><span class="line">&quot;Barney&quot;   <span class="operator">|</span>Barney      <span class="operator">|</span></span><br><span class="line">&quot;Betty&quot;    <span class="operator">|</span>Betty       <span class="operator">|</span></span><br><span class="line">&quot;Fred&quot;     <span class="operator">|</span>Fred        <span class="operator">|</span></span><br><span class="line">&quot;Wilma&quot;    <span class="operator">|</span>Wilma       <span class="operator">|</span></span><br></pre></td></tr></table></figure></p><p>更新JSON 列的值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">全字段更新</span><br><span class="line"><span class="keyword">update</span> test_json <span class="keyword">set</span> c<span class="operator">=</span><span class="string">&#x27;&#123;&quot;id&quot;: &quot;5&quot;, &quot;name&quot;: &quot;Sheen&quot;&#125;&#x27;</span> <span class="keyword">where</span> c<span class="operator">-</span><span class="operator">&gt;</span><span class="string">&#x27;$.id&#x27;</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">部分更新(<span class="number">8.0</span><span class="operator">+</span>)</span><br><span class="line">在<span class="keyword">update</span> 语句中通过 json_set(),json_replace(),json_remove() 这三个函数，对json 列进行部分更新操作</span><br><span class="line"># 输入列与被更新列必须是同一列</span><br><span class="line"><span class="keyword">UPDATE</span> mytable <span class="keyword">SET</span> jcol1 <span class="operator">=</span> JSON_SET(jcol1, <span class="string">&#x27;$.a&#x27;</span>, <span class="number">100</span>); </span><br><span class="line"># 这个操作在部分更新操作是不允许的。输入列与被更新列不一致</span><br><span class="line"><span class="keyword">UPDATE</span> mytable <span class="keyword">SET</span> jcol1 <span class="operator">=</span> JSON_SET(jcol2, <span class="string">&#x27;$.a&#x27;</span>, <span class="number">100</span>); </span><br><span class="line"># 被替换的值的存储空间必须至少和新值一样大。换句话说，新值不能大于旧值</span><br><span class="line">可以通过 JSON_STORAGE_FREE() 函数查看部分更新json 列释放的空间大小。</span><br><span class="line">通过设置 binlog_row_value_options <span class="operator">=</span> PARTIAL_JSON.可以使部分更新操作写入binlog时采用压缩格式。节省空间</span><br></pre></td></tr></table></figure></p><p>创建 JSON 值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">以中括号引起的json数组</span><br><span class="line">[&quot;abc&quot;, <span class="number">10</span>, <span class="keyword">null</span>, <span class="literal">true</span>, <span class="literal">false</span>]</span><br><span class="line"></span><br><span class="line">以花括号引起的key:<span class="keyword">value</span>的json对象</span><br><span class="line">&#123;&quot;k1&quot;: &quot;value&quot;, &quot;k2&quot;: <span class="number">10</span>&#125;</span><br><span class="line"></span><br><span class="line">都可以成为JSON类型的值，JSON 标量值可以包含各种数据类型。但是 key<span class="operator">-</span><span class="keyword">value</span> 对象中 key 必须是字符串，JSON对象允许循环嵌套json数组或对象</span><br><span class="line">[<span class="number">99</span>, &#123;&quot;id&quot;: &quot;HK500&quot;, &quot;cost&quot;: <span class="number">75.99</span>&#125;, [&quot;hot&quot;, &quot;cold&quot;]]</span><br><span class="line">&#123;&quot;k1&quot;: &quot;value&quot;, &quot;k2&quot;: [<span class="number">10</span>, <span class="number">20</span>]&#125;</span><br><span class="line">可以通过 <span class="built_in">CAST</span>(<span class="keyword">value</span> <span class="keyword">as</span> JSON) 将其他类型转化为JSON 类型</span><br></pre></td></tr></table></figure></p><p>JSON_TYPE() 函数尝试解析一个JSON对象的类型。如果json对象有效则返回对应的类型。否则返回错误<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> json_type(<span class="string">&#x27;&#123;&quot;id&quot;: &quot;5&quot;, &quot;name&quot;: &quot;Fred&quot;&#125;&#x27;</span>)</span><br><span class="line">json_type(<span class="string">&#x27;&#123;&quot;id&quot;: &quot;5&quot;, &quot;name&quot;: &quot;Fred&quot;&#125;&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------+</span></span><br><span class="line">OBJECT                                  <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> json_type(<span class="string">&#x27;[1,2,3,4]&#x27;</span>) </span><br><span class="line">json_type(<span class="string">&#x27;[1,2,3,4]&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------+</span></span><br><span class="line"><span class="keyword">ARRAY</span>                 <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> json_type(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">json_type(<span class="string">&#x27;1&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">--------------+</span></span><br><span class="line"><span class="type">INTEGER</span>       <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> json_type(<span class="string">&#x27;&quot;var&quot;&#x27;</span>) </span><br><span class="line">json_type(<span class="string">&#x27;&quot;var&quot;&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">------------------+</span></span><br><span class="line">STRING            <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> json_type(<span class="string">&#x27;var&#x27;</span>) </span><br><span class="line"><span class="keyword">SQL</span> 错误 [<span class="number">3141</span>] [<span class="number">22001</span>]: Data truncation: Invalid JSON text <span class="keyword">in</span> argument <span class="number">1</span> <span class="keyword">to</span> <span class="keyword">function</span> json_type: &quot;Invalid value.&quot; <span class="keyword">at</span> position <span class="number">0.</span></span><br></pre></td></tr></table></figure></p><p>JSON_ARRAY() 将给定的值列表组成一个json数组<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">json_array</span>(<span class="string">&#x27;var&#x27;</span>,<span class="number">1</span>,now())</span><br><span class="line"><span class="built_in">json_array</span>(<span class="string">&#x27;var&#x27;</span>,<span class="number">1</span>,now())               <span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------+</span></span><br><span class="line">[&quot;var&quot;, <span class="number">1</span>, &quot;2023-04-04 15:23:00.000000&quot;]<span class="operator">|</span></span><br></pre></td></tr></table></figure></p><p>JSON_OBJECT() 将给定的key value 组成一个 json 对象<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">json_object</span>(<span class="string">&#x27;id&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;Sheen&#x27;</span>)</span><br><span class="line"><span class="built_in">json_object</span>(<span class="string">&#x27;id&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;Sheen&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------+</span></span><br><span class="line">&#123;&quot;id&quot;: <span class="number">1</span>, &quot;name&quot;: &quot;Sheen&quot;&#125;        <span class="operator">|</span></span><br></pre></td></tr></table></figure></p><p>JSON_MERGE_PRESERVE() 将多个json 文档合并成一个<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JSON_MERGE_PRESERVE(<span class="string">&#x27;[&quot;a&quot;, 1]&#x27;</span>, <span class="string">&#x27;&#123;&quot;key&quot;: &quot;value&quot;&#125;&#x27;</span>);</span><br><span class="line">JSON_MERGE_PRESERVE(<span class="string">&#x27;[&quot;a&quot;, 1]&#x27;</span>, <span class="string">&#x27;&#123;&quot;key&quot;: &quot;value&quot;&#125;&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">---------------------------------------------------+</span></span><br><span class="line">[&quot;a&quot;, <span class="number">1</span>, &#123;&quot;key&quot;: &quot;value&quot;&#125;]                         <span class="operator">|</span></span><br></pre></td></tr></table></figure></p><p>JSON值的规范化<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">JSON_OBJECT</span>(<span class="string">&#x27;key1&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;key2&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;key1&#x27;</span>, <span class="string">&#x27;def&#x27;</span>);</span><br><span class="line">在<span class="number">8.0</span><span class="number">.3</span>以后的版本</span><br><span class="line">是以重复键最后出现胜利原则</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">JSON_OBJECT</span>(<span class="string">&#x27;key1&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;key2&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;key1&#x27;</span>, <span class="string">&#x27;def&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> &#123;&quot;key1&quot;: &quot;def&quot;, &quot;key2&quot;: &quot;abc&quot;&#125;                       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line">在<span class="number">8.0</span><span class="number">.3</span> 以前的版本</span><br><span class="line">是以重复建最早出现胜利原则</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">JSON_OBJECT</span>(<span class="string">&#x27;key1&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;key2&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;key1&#x27;</span>, <span class="string">&#x27;def&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> &#123;&quot;key1&quot;: <span class="number">1</span>, &quot;key2&quot;: &quot;abc&quot;&#125;                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>JSON值合并 (8.0.3版本开始支持)<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">JSON_MERGE_PRESERVE() </span><br><span class="line">JSON_MERGE_PATCH()</span><br><span class="line">这<span class="number">2</span>个合并函数的不同在于对重复键的处理</span><br><span class="line">JSON_MERGE_PRESERVE() 是保留了重复键，并将值合并，JSON_MERGE_PATCH() 则保留重复键的最后一个。其他全部丢弃</span><br><span class="line">合并数组:</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PRESERVE(<span class="string">&#x27;[1, 2]&#x27;</span>, <span class="string">&#x27;[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]&#x27;</span>, <span class="string">&#x27;[true, false]&#x27;</span>) <span class="keyword">AS</span> Preserve,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PATCH(<span class="string">&#x27;[1, 2]&#x27;</span>, <span class="string">&#x27;[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]&#x27;</span>, <span class="string">&#x27;[true, false]&#x27;</span>) <span class="keyword">AS</span> Patch\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Preserve: [<span class="number">1</span>, <span class="number">2</span>, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, <span class="literal">true</span>, <span class="literal">false</span>]</span><br><span class="line">   Patch: [<span class="literal">true</span>, <span class="literal">false</span>]</span><br><span class="line">在上面的例子中 JSON_MERGE_PATCH 将每个参数视为一个由单个元素组成的数组。因此其下标皆为<span class="number">0</span> 。根据最后优胜规则 ，结果就是[<span class="literal">true</span>,<span class="literal">false</span>]</span><br><span class="line"></span><br><span class="line">合并对象</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PRESERVE(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;b&quot;: 2&#125;&#x27;</span>, <span class="string">&#x27;&#123;&quot;c&quot;: 3, &quot;a&quot;: 4&#125;&#x27;</span>, <span class="string">&#x27;&#123;&quot;c&quot;: 5, &quot;d&quot;: 3&#125;&#x27;</span>) <span class="keyword">AS</span> Preserve,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PATCH(<span class="string">&#x27;&#123;&quot;a&quot;: 3, &quot;b&quot;: 2&#125;&#x27;</span>, <span class="string">&#x27;&#123;&quot;c&quot;: 3, &quot;a&quot;: 4&#125;&#x27;</span>, <span class="string">&#x27;&#123;&quot;c&quot;: 5, &quot;d&quot;: 3&#125;&#x27;</span>) <span class="keyword">AS</span> Patch\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Preserve: &#123;&quot;a&quot;: [<span class="number">1</span>, <span class="number">4</span>], &quot;b&quot;: <span class="number">2</span>, &quot;c&quot;: [<span class="number">3</span>, <span class="number">5</span>], &quot;d&quot;: <span class="number">3</span>&#125;</span><br><span class="line">   Patch: &#123;&quot;a&quot;: <span class="number">4</span>, &quot;b&quot;: <span class="number">2</span>, &quot;c&quot;: <span class="number">5</span>, &quot;d&quot;: <span class="number">3</span>&#125;</span><br><span class="line">上面的例子中，我们可以看到对于重复键JSON_MERGE_PRESERVE保留key,并将其值合并成数组。而JSON_MERGE_PATCH遵循最后优胜规则，只保留重复key 的最后一个值</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span></span><br><span class="line">  <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PRESERVE(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>) <span class="keyword">AS</span> Preserve,</span><br><span class="line">  <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PATCH(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>) <span class="keyword">AS</span> Patch\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Preserve: [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">   Patch: <span class="number">2</span></span><br><span class="line">非数组对象会被自动包装为数组对象。于是本例子中的JSON_MERGE_PATCH同样丢弃了第一个数组对象。仅保留<span class="number">2</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span></span><br><span class="line">  <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PRESERVE(<span class="string">&#x27;[10, 20]&#x27;</span>, <span class="string">&#x27;&#123;&quot;a&quot;: &quot;x&quot;, &quot;b&quot;: &quot;y&quot;&#125;&#x27;</span>) <span class="keyword">AS</span> Preserve,</span><br><span class="line">  <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PATCH(<span class="string">&#x27;[10, 20]&#x27;</span>, <span class="string">&#x27;&#123;&quot;a&quot;: &quot;x&quot;, &quot;b&quot;: &quot;y&quot;&#125;&#x27;</span>) <span class="keyword">AS</span> Patch\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Preserve: [<span class="number">10</span>, <span class="number">20</span>, &#123;&quot;a&quot;: &quot;x&quot;, &quot;b&quot;: &quot;y&quot;&#125;]</span><br><span class="line">   Patch: &#123;&quot;a&quot;: &quot;x&quot;, &quot;b&quot;: &quot;y&quot;&#125;</span><br><span class="line">在混合数组和对象合并中。JSON_MERGE_PRESERVE将对象合并到数组中。而JSON_MERGE_PATCH则是将参数视为一个由单个元素组成的数组，这样就只保留最后一个参数</span><br><span class="line">可以说JSON_MERGE_PATCH 除了在多个json对象中合并对象里的每一个值。重复值就只保留最后一个。在其他情况下，只返回最后一个参数的值</span><br></pre></td></tr></table></figure></p><p>查找JSON值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">json值的查找路径</span><br><span class="line">$为根 </span><br><span class="line">$[n],表示第n<span class="operator">+</span><span class="number">1</span>个对象，下标从<span class="number">0</span> 开始</span><br><span class="line">$[n].key 表示第n<span class="operator">+</span><span class="number">1</span>个对象中指定key的值,当json值只有一个json 对象 可以写成 $.key 。存在多个对象而写成$.key 将返回<span class="keyword">NULL</span></span><br><span class="line">$[n].key[n] 表示第n<span class="operator">+</span><span class="number">1</span>个对象中指定key的值,key[n] 中的n 表示key 值里面第n<span class="operator">+</span><span class="number">1</span>个元素</span><br><span class="line">$.<span class="operator">*</span> 表示将对象的所有值组成一个数组返回</span><br><span class="line">$<span class="operator">*</span><span class="operator">*</span>.key 表示将对象的所有值中的key对应的值组成一个数组返回</span><br><span class="line">$[m <span class="keyword">to</span> n] 表示在json数组中获取一段连续的元素</span><br><span class="line">$[<span class="keyword">last</span>] 表示json数组中最后一个元素</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[0]&#x27;</span>)</span><br><span class="line">$[<span class="number">0</span>] 表示第一个json元素</span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[0]&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------------------+</span></span><br><span class="line"><span class="number">3</span>                                                            <span class="operator">|</span></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[1].a&#x27;</span>)</span><br><span class="line">$[<span class="number">1</span>].a 表示第二个元素里面key为a的值</span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[1].a&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">---------------------------------------------------------------+</span></span><br><span class="line">[<span class="number">5</span>, <span class="number">6</span>]                                                         <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[1].a[1]&#x27;</span>)</span><br><span class="line">$[<span class="number">1</span>].a[<span class="number">1</span>] 表示第二个元素里面key为a的值里面的第二个元素</span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[1].a[1]&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">6</span>                                                                 <span class="operator">|</span></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: [3, 4, 5]&#125;&#x27;</span>, <span class="string">&#x27;$.*&#x27;</span>)</span><br><span class="line">$.<span class="operator">*</span> 仅用于只有一个json对象中，将对象中所有的值以数组返回</span><br><span class="line">Name                                                   <span class="operator">|</span><span class="keyword">Value</span>            <span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------------+-----------------+</span></span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: [3, 4, 5]&#125;&#x27;</span>, <span class="string">&#x27;$.*&#x27;</span>)<span class="operator">|</span>[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]]<span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;&#123;&quot;a&quot;: &#123;&quot;b&quot;: 1&#125;, &quot;c&quot;: &#123;&quot;b&quot;: 2&#125;&#125;&#x27;</span>, <span class="string">&#x27;$**.b&#x27;</span>);</span><br><span class="line">$.<span class="operator">*</span><span class="operator">*</span>.b 表示第一层的<span class="keyword">value</span>中的key<span class="operator">=</span>b 的值以数组的形式返回 </span><br><span class="line">Name                                                   <span class="operator">|</span><span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------------+------+</span></span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;&#123;&quot;a&quot;: &#123;&quot;b&quot;: 1&#125;, &quot;c&quot;: &#123;&quot;b&quot;: 2&#125;&#125;&#x27;</span>, <span class="string">&#x27;$**.b&#x27;</span>)<span class="operator">|</span>[<span class="number">1</span>, <span class="number">2</span>]<span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;[1, 2, 3, 4, 5]&#x27;</span>, <span class="string">&#x27;$[1 to 3]&#x27;</span>);</span><br><span class="line">$[<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span>] 对于json 数组可以通过 n <span class="keyword">to</span> m 的方式获数组中连续的一段值，表示获取从第<span class="number">2</span>到第<span class="number">4</span>个元素</span><br><span class="line">Name                                        <span class="operator">|</span><span class="keyword">Value</span>    <span class="operator">|</span></span><br><span class="line"><span class="comment">--------------------------------------------+---------+</span></span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;[1, 2, 3, 4, 5]&#x27;</span>, <span class="string">&#x27;$[1 to 3]&#x27;</span>)<span class="operator">|</span>[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]<span class="operator">|</span></span><br><span class="line">$[<span class="keyword">last</span>] 则表示数组的最后一个元素。$[<span class="keyword">last</span> <span class="number">-3</span> <span class="keyword">to</span> <span class="keyword">last</span> <span class="number">-1</span>] 表示从倒数第<span class="number">4</span>个元素到倒数第<span class="number">2</span>个元素</span><br></pre></td></tr></table></figure></p><p>修改JSON的值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">JSON_SET() 函数</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@j</span> <span class="operator">=</span> <span class="string">&#x27;[&quot;a&quot;, &#123;&quot;b&quot;: [true, false]&#125;, [10, 20]]&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> JSON_SET(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">$[<span class="number">1</span>].b[<span class="number">0</span>] 将第<span class="number">2</span>个元素key<span class="operator">=</span>b 的第<span class="number">1</span>个元素修改为<span class="number">1</span>，将第<span class="number">3</span>个元素的值中第<span class="number">3</span>个值设置为<span class="number">2</span></span><br><span class="line">JSON_SET(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">------------------------------------------+</span></span><br><span class="line">[&quot;a&quot;, &#123;&quot;b&quot;: [<span class="number">1</span>, <span class="literal">false</span>]&#125;, [<span class="number">10</span>, <span class="number">20</span>, <span class="number">2</span>]]     <span class="operator">|</span></span><br><span class="line">从结果中我们可以看到 $[<span class="number">1</span>]  对应的是 &#123;&quot;b&quot;: [<span class="literal">true</span>, <span class="literal">false</span>]&#125;, $[<span class="number">1</span>].b[<span class="number">0</span>] 对应的是<span class="literal">true</span> 被修改成<span class="number">1</span>，而第<span class="number">3</span>个元素[<span class="number">10</span>, <span class="number">20</span>]没有下标为<span class="number">2</span>的数据。则新增了一个<span class="number">2</span></span><br><span class="line">JSON_SET() 既更新旧值也插入新值</span><br><span class="line"></span><br><span class="line">JSON_INSERT() 函数</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@j</span> <span class="operator">=</span> <span class="string">&#x27;[&quot;a&quot;, &#123;&quot;b&quot;: [true, false]&#125;, [10, 20]]&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> JSON_INSERT(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">JSON_INSERT(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">---------------------------------------------+</span></span><br><span class="line">[&quot;a&quot;, &#123;&quot;b&quot;: [<span class="literal">true</span>, <span class="literal">false</span>]&#125;, [<span class="number">10</span>, <span class="number">20</span>, <span class="number">2</span>]]     <span class="operator">|</span></span><br><span class="line">从结果中可以看到JSON_INSERT()是插入新的值而不更新旧值</span><br><span class="line"></span><br><span class="line">JSON_PLACE() 函数</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@j</span> <span class="operator">=</span> <span class="string">&#x27;[&quot;a&quot;, &#123;&quot;b&quot;: [true, false]&#125;, [10, 20]]&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> JSON_REPLACE(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">JSON_REPLACE(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------------+</span></span><br><span class="line">[&quot;a&quot;, &#123;&quot;b&quot;: [<span class="number">1</span>, <span class="literal">false</span>]&#125;, [<span class="number">10</span>, <span class="number">20</span>]]            <span class="operator">|</span></span><br><span class="line">从结果中可以看到JSON_PLACE()只更新旧值，不插入新值</span><br><span class="line"></span><br><span class="line">JSON_REMOVE() 函数</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@j</span> <span class="operator">=</span> <span class="string">&#x27;[&quot;a&quot;, &#123;&quot;b&quot;: [true, false]&#125;, [10, 20]]&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> JSON_REMOVE(<span class="variable">@j</span>, <span class="string">&#x27;$[2]&#x27;</span>, <span class="string">&#x27;$[1].b[1]&#x27;</span>, <span class="string">&#x27;$[1].b[1]&#x27;</span>);</span><br><span class="line">JSON_REMOVE(<span class="variable">@j</span>, <span class="string">&#x27;$[2]&#x27;</span>, <span class="string">&#x27;$[1].b[1]&#x27;</span>, <span class="string">&#x27;$[1].b[1]&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------+</span></span><br><span class="line">[&quot;a&quot;, &#123;&quot;b&quot;: [<span class="literal">true</span>]&#125;]                             <span class="operator">|</span></span><br><span class="line">从结果集可以看到，根据参数指定的的多个path 进行元素移除</span><br><span class="line">第<span class="number">1</span>个参数，$[<span class="number">2</span>] 即 [<span class="number">10</span>, <span class="number">20</span>] 被移除</span><br><span class="line">第<span class="number">2</span>个参数，$[<span class="number">1</span>].b[<span class="number">1</span>] 即  &#123;&quot;b&quot;: [<span class="literal">true</span>, <span class="literal">false</span>]&#125; 中的<span class="literal">false</span> 也被移除</span><br><span class="line">第<span class="number">3</span>个参数，$[<span class="number">1</span>].b[<span class="number">1</span>] 即  &#123;&quot;b&quot;: [<span class="literal">true</span>, <span class="literal">false</span>]&#125; 中的<span class="literal">false</span> 因为在第<span class="number">2</span>步已经被移除。所以找不到。将不起任何作用</span><br></pre></td></tr></table></figure></p><p>JSON 类型值的比较<br>JSON 类型值可以通过 =, &lt;, &lt;=, &gt;, &gt;=, &lt;&gt;, !=, 和 &lt;=&gt; 这些操作符比较<br>BETWEEN IN() GREATEST() LEAST() 这些比较操作跟函数暂时不被支持</p><p>以下列表显示了JSON类型的优先级，从最高优先级到最低优先级。（类型名称是由JSON_type（）函数返回的名称。）一行中显示在一起的类型具有相同的优先级。列表中较早列出的JSON类型的任何值都比列表中较晚列出的任何JSON类型的值大。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BLOB</span></span><br><span class="line">  比较两个值的前N个字节，其中N是较短值中的字节数。如果两个值的前N个字节相同，则将较短的值排列在较长的值之前</span><br><span class="line">BIT</span><br><span class="line">  与<span class="type">BLOB</span>相同的规则</span><br><span class="line">OPAQUE</span><br><span class="line">  与<span class="type">BLOB</span>相同的规则。OPAQUE值是未分类为其他类型之一的值</span><br><span class="line">DATETIME</span><br><span class="line">  表示较早时间点的值在表示较晚时间点的数值之前排序。如果两个值最初分别来自MySQL DATETIME和<span class="type">TIMESTAMP</span>类型，那么如果它们表示相同的时间点，则它们是相等的。</span><br><span class="line"><span class="type">TIME</span></span><br><span class="line">  两个时间值中较小的一个按顺序排列在较大的一个之前。</span><br><span class="line"><span class="type">DATE</span></span><br><span class="line">  较早的日期在最近的日期之前排序。</span><br><span class="line"><span class="type">BOOLEAN</span></span><br><span class="line">  <span class="literal">false</span> 比 <span class="literal">true</span> 小</span><br><span class="line"><span class="keyword">ARRAY</span></span><br><span class="line">  <span class="number">2</span>个数组如果他们的长度和元素顺序都相同。则相等。否则则有存在差异的第一个元素的大小为准。首先以该位置较小的那个数组排在前面。如果一个较短的数组所有值与较长的数组的前N个相同。则较短的排在前面</span><br><span class="line">OBJECT</span><br><span class="line">  <span class="number">2</span>个对象具有相同的key 并且key 对应的值相同。则<span class="number">2</span>个对象相等。<span class="number">2</span>个不相等的对象其排序具有不确定性</span><br><span class="line">STRING</span><br><span class="line">  字符串在被比较的两个字符串的utf8mb4表示的前N个字节上按词法排序，其中N是较短字符串的长度。如果两个字符串的前N个字节相同，则认为较短的字符串小于较长的字符串。</span><br><span class="line"><span class="type">INTEGER</span>, <span class="keyword">DOUBLE</span></span><br><span class="line">  如果是mysql 内置的数值型类型则按数值型的排序方式。如果无法确定其类型。mysql将其转化为精准的数值型再进行比较</span><br><span class="line"><span class="keyword">NULL</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;JSON 类型的存储跟LONGBLOB, LONGTEXT 一样 存储长度:L + 4 bytes, where L &amp;lt; 2 的32次方&lt;br&gt;JSON 的传输限制于 max_allowed_package 的大小，可以通过 JSON_STORAGE_SIZE()  </summary>
      
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="json" scheme="https://sheenzxx.github.io/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>sed 使用</title>
    <link href="https://sheenzxx.github.io/2023/03/30/sed/"/>
    <id>https://sheenzxx.github.io/2023/03/30/sed/</id>
    <published>2023-03-30T07:18:22.000Z</published>
    <updated>2023-04-07T06:20:05.538Z</updated>
    
    <content type="html"><![CDATA[<p>如何将 /usr/local/mysql/bin 注册到 /etc/profile 指定位置?<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">LINE=`grep -n <span class="string">&quot;pathmunge /usr/sbin after&quot;</span> /etc/profile |awk -F<span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $1 +2&#125;&#x27;</span>`</span><br><span class="line">sed -i <span class="string">&quot;<span class="variable">$&#123;LINE&#125;</span>&quot;</span>i<span class="string">&quot;pathmunge /usr/local/mysql/bin&quot;</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">###效果</span></span><br><span class="line"><span class="comment"># Path manipulation</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$EUID</span>&quot;</span> = <span class="string">&quot;0&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    pathmunge /usr/sbin</span><br><span class="line">    pathmunge /usr/local/sbin</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    pathmunge /usr/local/sbin after</span><br><span class="line">    pathmunge /usr/sbin after</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">pathmunge /usr/local/mysql/bin</span><br></pre></td></tr></table></figure></p><p>比如，要将目录/modules下面所有文件中的zhangsan都修改成lisi，这样做：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s/zhangsan/lisi/g&quot; `grep zhangsan -rl /modules`</span><br><span class="line"></span><br><span class="line">-i 表示inplace edit，就地修改文件</span><br><span class="line">-r 表示搜索子目录</span><br><span class="line">-l 表示输出匹配的文件名</span><br><span class="line">这个命令组合很强大，要注意备份文件</span><br><span class="line"> </span><br><span class="line">sed -i &#x27;s/old_string/new_string/g&#x27;`grep &quot;old_string&quot; -l *sh`  批量替换 sh 文件中包含指定字符串的为目标字符串</span><br></pre></td></tr></table></figure></p><p>当用sed  批量处理 sh 文件时，出现了下面的错误，<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[oracle@intra_db-10-121 bin]$ sed -i &quot;s#dba@3conline\.com\.cn#dba@3conline\.com#g&quot;`grep &quot;dba@3conline.com.cn&quot; -l *`   </span><br><span class="line">sed：-e 表达式 #1，字符 44：unknown option to `s&#x27;</span><br><span class="line">[oracle@intra_db-10-121 bin]$ sed -i &quot;s#dba@3conline\.com\.cn#dba@3conline\.com#g&quot;`grep &quot;dba@3conline.com.cn&quot; -l \*\.sh`</span><br><span class="line">grep: *.sh: 没有那个文件或目录</span><br><span class="line">sed: no input files</span><br></pre></td></tr></table></figure><br>可以更改为如下写法<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;dba@3conline.com.cn&quot; -l *.sh |xargs sed -i &quot;s#dba@3conline\.com\.cn#dba@3conline\.com#g&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如何将 /usr/local/mysql/bin 注册到 /etc/profile 指定位置?&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1</summary>
      
    
    
    
    <category term="shell" scheme="https://sheenzxx.github.io/categories/shell/"/>
    
    
    <category term="sed" scheme="https://sheenzxx.github.io/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>mysql数据库服务器调优</title>
    <link href="https://sheenzxx.github.io/2023/03/30/mysqlServerTun/"/>
    <id>https://sheenzxx.github.io/2023/03/30/mysqlServerTun/</id>
    <published>2023-03-30T03:05:28.000Z</published>
    <updated>2023-03-30T03:06:28.045Z</updated>
    
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="centos7" scheme="https://sheenzxx.github.io/tags/centos7/"/>
    
    <category term="server" scheme="https://sheenzxx.github.io/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>PG系统表之 pg_class</title>
    <link href="https://sheenzxx.github.io/2023/03/28/pgclass/"/>
    <id>https://sheenzxx.github.io/2023/03/28/pgclass/</id>
    <published>2023-03-28T02:16:13.000Z</published>
    <updated>2023-09-25T04:05:44.128Z</updated>
    
    <content type="html"><![CDATA[<p>pg_class 表记录了数据库中几乎所有的关系(relations)：包括表、索引、视图、物化视图、组合类型和TOAST表</p><h5 id="pg-class"><a href="#pg-class" class="headerlink" title="pg_class"></a>pg_class</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">oid oid </span><br><span class="line">   行标识</span><br><span class="line">relname name</span><br><span class="line">    关系名称,例如表名，索引名。视图名等</span><br><span class="line">relnamespace oid  (<span class="keyword">references</span> pg_namespace.oid)</span><br><span class="line">    包含这个关系的命名空间的 oid</span><br><span class="line">reltype oid (<span class="keyword">references</span> pg_type.oid)</span><br><span class="line">    表的类型。其他关系都用 <span class="number">0</span> 标识</span><br><span class="line">relowner oid (<span class="keyword">references</span> pg_authid.oid)</span><br><span class="line">    关系所有者</span><br><span class="line">relam oid (<span class="keyword">references</span> pg_am.oid)</span><br><span class="line">    如果是表或索引，表示使用的访问方法(堆、B树、哈希等),否则为<span class="number">0</span>(序列和视图等不需要存储的关系)，</span><br><span class="line">relfilenode oid</span><br><span class="line">    这个关系在磁盘上文件的名称;<span class="number">0</span>表示这是一个“映射”关系，其磁盘文件名取决于低层状态</span><br><span class="line">reltablespace oid (<span class="keyword">references</span> pg_tablespace.oid)</span><br><span class="line">    该关系所存储的表空间。如果为<span class="number">0</span>，使用数据库的默认表空间。(如果关系无磁盘文件时无意义)</span><br><span class="line">relpages int4</span><br><span class="line">    表示这个表以页为统计的大小。这个只是执行计划使用的预估值，由 VACUUM, ANALYZE 还有少量由DDL 操作(例如 <span class="keyword">create</span> index) 更新</span><br><span class="line">reltuples float4</span><br><span class="line">    表示表中活动的行数。这个只是执行计划使用的预估值，由 VACUUM, ANALYZE 还有少量由DDL 操作(例如 <span class="keyword">create</span> index) 更新，如果表没发生过vacuumed 或 analyzed 则标记为<span class="number">-1</span> 表示未知行数</span><br><span class="line">relallvisible int4</span><br><span class="line">    在表的可见性映射表中被标记为全可见的页数。这个只是执行计划使用的预估值。由 VACUUM, ANALYZE 还有少量由DDL 操作(例如 <span class="keyword">create</span> index) 更新。</span><br><span class="line">reltoastrelid oid (<span class="keyword">references</span> pg_class.oid)</span><br><span class="line">    与该表关联的TOAST表的 oid ,如果没有用<span class="number">0</span>表示，对于超长的行数据（默认<span class="number">8</span>kb一页，页是PG中最基本的存储单位），PG 将数据存储在另一张二级表的多行中。这张表就叫TOAST表，这张存储方式叫行外存储方式</span><br><span class="line">relhasindex bool</span><br><span class="line">    如果这是一个表并且其上建有（或最近建有）索引则为真</span><br><span class="line">relisshared bool</span><br><span class="line">    如果该表在集簇中的所有数据库间共享则为真。只有某些系统目录（如pg_database）是共享的</span><br><span class="line">relpersistence <span class="type">char</span></span><br><span class="line">    P <span class="operator">=</span> 永久表<span class="operator">/</span>序列 u <span class="operator">=</span> 无日志表<span class="operator">/</span>序列 t <span class="operator">=</span> 临时表<span class="operator">/</span>序列</span><br><span class="line">relkind <span class="type">char</span></span><br><span class="line">    r <span class="operator">=</span> 普通表, i <span class="operator">=</span> 索引, S <span class="operator">=</span> 序列, t <span class="operator">=</span> TOAST 表, v <span class="operator">=</span> 视图, m <span class="operator">=</span> 物化视图, c <span class="operator">=</span> 组合类型, f <span class="operator">=</span> 外部表, p <span class="operator">=</span> 分区表, I <span class="operator">=</span> 分区索引</span><br><span class="line">relnatts int2</span><br><span class="line">    关系中用户列的数目（系统列不计算在内）。在pg_attribute中必须有这么多对应的项。另请参阅pg_attribute.attnum。</span><br><span class="line">relchecks int2</span><br><span class="line">    表上的约束数，参见 pg_constraint</span><br><span class="line">relhasrules bool</span><br><span class="line">    如果表有（或曾有）规则则为真，参见 pg_rewrite</span><br><span class="line">relhastriggers bool</span><br><span class="line">    如果表有（或曾有）触发器则为真，参见 pg_trigger</span><br><span class="line">relhassubclass bool</span><br><span class="line">    如果表或索引有（或曾有）任何继承的子女或分区则为真</span><br><span class="line">relrowsecurity bool</span><br><span class="line">    如果表有启用行级别的安全策略则为真，参见 pg_policy </span><br><span class="line">relforcerowsecurity bool</span><br><span class="line">    如果行级安全策略（启用时）也适用于表拥有者则为真，参见 pg_policy</span><br><span class="line">relispopulated bool</span><br><span class="line">    如果表已被填充则为真（对于所有关系该列都为真，但对于某些物化视图却不是）</span><br><span class="line">relreplident <span class="type">char</span></span><br><span class="line">    用来形成复制标志的列， 对于行，d <span class="operator">=</span> 默认值(主键，如果有) , n <span class="operator">=</span> 无， f <span class="operator">=</span> 所有列 ，i <span class="operator">=</span> 索引</span><br><span class="line">relispartition bool</span><br><span class="line">    如果表或索引为分区表<span class="operator">/</span>索引,则为真</span><br><span class="line">relrewrite oid (<span class="keyword">references</span> pg_class.oid)</span><br><span class="line">    对于在要求表重写的DDL操作期间被写入的新关系，这个域包含原始关系的OID，否则为<span class="number">0</span>。那种状态仅在内部可见，对于一个用户可见的关系这个域应该从不包含不是<span class="number">0</span>的值。</span><br><span class="line">relfrozenxid xid</span><br><span class="line">    在此之前的所有事务ID在表中已经被替换为一个永久的(“冻结的”) 事务ID。这用于跟踪表是否需要被清理，以便阻止事务ID回卷或者允许pg_xact被收缩。如果该关系不是一个表则为<span class="number">0</span>（InvalidTransactionId）。</span><br><span class="line">relminmxid xid</span><br><span class="line">    在此之前的多事务ID在表中已经被替换为一个事务ID。这被用于跟踪表是否需要被清理，以阻止 多事务ID回卷或者允许pg_multixact被收缩。如果关系不是一个表则 为<span class="number">0</span>（InvalidMultiXactId）。</span><br><span class="line">relacl aclitem[]</span><br><span class="line">    访问权限</span><br><span class="line">reloptions text[]</span><br><span class="line">    访问方法相关的选项，以“keyword<span class="operator">=</span><span class="keyword">value</span>”字符串形式</span><br><span class="line">relpartbound pg_node_tree</span><br><span class="line">    如果表示一个分区（见relispartition），分区边界的内部表达</span><br></pre></td></tr></table></figure><h5 id="pg-depend"><a href="#pg-depend" class="headerlink" title="pg_depend"></a>pg_depend</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">classid oid (<span class="keyword">references</span> pg_class.oid)</span><br><span class="line">    依赖对象所在的系统目录OID</span><br><span class="line">objid oid (<span class="keyword">references</span> <span class="keyword">any</span> OID <span class="keyword">column</span>) 任意列的OID</span><br><span class="line">    指定依赖对象的OID</span><br><span class="line">objsubid int4</span><br><span class="line">    对于一个表列，这里是列号（objid和classid指表本身）。对于所有其他对象类型，此列为<span class="number">0</span>。</span><br><span class="line">refclassid oid (<span class="keyword">references</span> pg_class.oid)</span><br><span class="line">    被引用对象所在的系统目录的OID</span><br><span class="line">refobjid oid (<span class="keyword">references</span> <span class="keyword">any</span> OID <span class="keyword">column</span>) 任意列的OID</span><br><span class="line">    指定被引用对象的OID</span><br><span class="line">refobjsubid int4</span><br><span class="line">    对于一个被引用的表列，这里是列号（objid和classid指表本身）。对于所有其他对象类型，此列为<span class="number">0</span>。</span><br><span class="line">deptype <span class="type">char</span></span><br><span class="line">    n : DEPENDENCY_NORMAL </span><br><span class="line">        在独立创建的对象之间的一个普通关系。依赖对象可以在不影响被依赖对象的情况下被删除。被引用对象只能通过指定CASCADE被删除，在这种情况下依赖对象也会被删除. 例如一个表引用了一个序列做自增。删除表不影响序列。删除序列则需要指定 cascade 连表一起删除</span><br><span class="line">    a : DEPENDENCY_AUTO </span><br><span class="line">        依赖对象可以被独立于被依赖对象删除，且应该在被引用对象被删除时自动被删除（不管在RESTRICT或CASCADE模式）。例如表上的约束。表删了。约束也跟着消失</span><br><span class="line">    i ：DEPENDENCY_INTERNAL </span><br><span class="line">        依赖对象作为被引用对象创建过程的一部分被创建，并且只是其内部实现的一部分。不允许直接<span class="keyword">DROP</span>所依赖的对象（而是告诉用户对引用对象发出<span class="keyword">DROP</span>操作）。无论是否指定了CASCADE，<span class="keyword">DROP</span>被引用的对象都将导致自动删除从属对象。如果由于删除了对某些其他对象的依赖关系而不得不删除依赖对象，则其删除将转换为对所引用对象的删除，因此依赖对象的NORMAL和AUTO依赖关系的行为就像它们是所引用对象的依赖关系。示例：视图的<span class="keyword">ON</span> <span class="keyword">SELECT</span>规则使其在内部依赖于视图，以防止在视图保留时将其删除。规则的依赖关系（例如它引用的表）就好像他们是视图的依赖关系</span><br><span class="line">    P ：DEPENDENCY_PARTITION_PRI</span><br><span class="line">    S : DEPENDENCY_PARTITION_SEC</span><br><span class="line">        依赖对象被作为被引用对象创建过程的一部分创建，并且确实是其内部实现的一部分。但是，不像INTERNAL，有多个这样的引用对象。除非删除了这些引用对象中的至少一个对象，否则不得删除依赖对象；如果其中任何一个被删除，则不管是否指定了CASCADE，都应删除依赖对象。也不像INTERNAL，依赖对象所依赖的某些其他对象的删除不会导致任何分区引用的对象的自动删除。因此，如果删除没有通过其他路径级联到这些对象中的至少一个，它会被拒绝。（大多数情况下，依赖对象与至少一个分区引用对象共享所有非分区的依赖关系，因此此限制不会导致阻止任何级联的删除。）主分区和辅助分区的依赖关系表现相同，除了主分区依赖关系倾向用于错误消息；因此，分区相关的对象应该有一个主分区依赖关系和一个或多个辅助分区依赖关系。注意到分区依赖关系是任何对象所正常拥有的依赖关系的补充，而不是替代。这简化了ATTACH<span class="operator">/</span>DETACH <span class="keyword">PARTITION</span>操作：只要添加或删除分区的依赖关系。例如：子分区索引与其所基于的分区表和父分区索引是分区相关的，因此只要其中一个删除，则子分区索引就消失，否则，就不消失。父索引上的依赖关系是主要的，故如果用户试图删除子分区索引，错误消息反而会建议删除父索引（不是表）</span><br><span class="line">    e : DEPENDENCY_EXTENSION </span><br><span class="line">        依赖对象是作为扩展的被引用对象的一个成员（参见pg_extension）。依赖对象可以通过被引用对象上的<span class="keyword">DROP</span> EXTENSION来删除。在功能上，这种依赖类型和一个INTERNAL依赖的作用相同，其存在只是为了清晰和简化pg_dump</span><br><span class="line">    x : DEPENDENCY_AUTO_EXTENSION</span><br><span class="line">        依赖对象不是作为被引用对象的扩展的成员（因此不应该被pg_dump忽略），但是没有该扩展它又无法工作，因此如果删除了扩展，则该依赖对象应自动删除。该依赖对象也可以独立删除。功能上，该依赖关系类型与AUTO依赖相同，但是为了清晰起见和简化pg_dump，将其分开</span><br><span class="line">    p : DEPENDENCY_PIN</span><br><span class="line">        没有依赖对象，这种类型的项是一个信号，用于说明系统本身依赖于被引用对象，并且该对象永远不能被删除。这种类型的项只能被initdb创建。而此种项的依赖对象的列都为<span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="查询序列与表的依赖关系"><a href="#查询序列与表的依赖关系" class="headerlink" title="查询序列与表的依赖关系"></a>查询序列与表的依赖关系</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ts.nspname <span class="keyword">as</span> object_schema,</span><br><span class="line">        tbl.relname <span class="keyword">as</span> table_name, </span><br><span class="line">       col.attname <span class="keyword">as</span> column_name,</span><br><span class="line">       s.relname   <span class="keyword">as</span> sequence_name,</span><br><span class="line">   d.refobjid,d.objid</span><br><span class="line"><span class="keyword">from</span> pg_class s</span><br><span class="line">  <span class="keyword">join</span> pg_namespace sn <span class="keyword">on</span> sn.oid <span class="operator">=</span> s.relnamespace </span><br><span class="line">  <span class="keyword">join</span> pg_depend d <span class="keyword">on</span> d.refobjid <span class="operator">=</span> s.oid  <span class="keyword">and</span> d.refclassid<span class="operator">=</span><span class="string">&#x27;pg_class&#x27;</span>::regclass </span><br><span class="line">  <span class="keyword">join</span> pg_attrdef ad <span class="keyword">on</span> ad.oid <span class="operator">=</span> d.objid  <span class="keyword">and</span> d.classid <span class="operator">=</span> <span class="string">&#x27;pg_attrdef&#x27;</span>::regclass</span><br><span class="line">  <span class="keyword">join</span> pg_attribute col <span class="keyword">on</span> col.attrelid <span class="operator">=</span> ad.adrelid <span class="keyword">and</span> col.attnum <span class="operator">=</span> ad.adnum</span><br><span class="line">  <span class="keyword">join</span> pg_class tbl <span class="keyword">on</span> tbl.oid <span class="operator">=</span> ad.adrelid </span><br><span class="line">  <span class="keyword">join</span> pg_namespace ts <span class="keyword">on</span> ts.oid <span class="operator">=</span> tbl.relnamespace </span><br><span class="line"><span class="keyword">where</span> s.relkind <span class="operator">=</span> <span class="string">&#x27;S&#x27;</span></span><br><span class="line"><span class="comment">--  and s.relname = &#x27;sequence_name&#x27;</span></span><br><span class="line">  <span class="keyword">and</span> d.deptype <span class="keyword">in</span> (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;n&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="查询表的schema-owner"><a href="#查询表的schema-owner" class="headerlink" title="查询表的schema,owner"></a>查询表的schema,owner</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> pc.relname <span class="keyword">as</span> table_name,pn.nspname <span class="keyword">as</span> schema_name,pa.rolname <span class="keyword">as</span> owner,pc.relhasindex,pc.relhastriggers</span><br><span class="line">  <span class="keyword">from</span> pg_class pc,</span><br><span class="line">       pg_namespace pn,</span><br><span class="line">   pg_authid pa</span><br><span class="line">  <span class="keyword">where</span> pc.relkind <span class="operator">=</span><span class="string">&#x27;r&#x27;</span></span><br><span class="line">    <span class="keyword">and</span> pc.relnamespace <span class="operator">=</span> pn.oid</span><br><span class="line"><span class="keyword">and</span> pc.relowner <span class="operator">=</span> pa.oid</span><br><span class="line">    <span class="keyword">and</span> pc.relname <span class="operator">=</span> <span class="string">&#x27;table_name&#x27;</span></span><br><span class="line"></span><br><span class="line">可以查到与 pg_tables 类似的结果</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;pg_class 表记录了数据库中几乎所有的关系(relations)：包括表、索引、视图、物化视图、组合类型和TOAST表&lt;/p&gt;
&lt;h5 id=&quot;pg-class&quot;&gt;&lt;a href=&quot;#pg-class&quot; class=&quot;headerlink&quot; title=&quot;pg_cla</summary>
      
    
    
    
    <category term="postgresql" scheme="https://sheenzxx.github.io/categories/postgresql/"/>
    
    
    <category term="pg_class" scheme="https://sheenzxx.github.io/tags/pg-class/"/>
    
  </entry>
  
</feed>
