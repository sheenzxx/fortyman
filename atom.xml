<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sheen&#39;s Blog</title>
  
  <subtitle>随笔，技术笔记</subtitle>
  <link href="https://sheenzxx.github.io/atom.xml" rel="self"/>
  
  <link href="https://sheenzxx.github.io/"/>
  <updated>2023-04-06T03:58:38.704Z</updated>
  <id>https://sheenzxx.github.io/</id>
  
  <author>
    <name>Sheen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Shell的日期加减操作</title>
    <link href="https://sheenzxx.github.io/2023/04/06/ShellDateAdd/"/>
    <id>https://sheenzxx.github.io/2023/04/06/ShellDateAdd/</id>
    <published>2023-04-06T03:15:37.000Z</published>
    <updated>2023-04-06T03:58:38.704Z</updated>
    
    <content type="html"><![CDATA[<p>开发需要重跑一个任务。输入参数是一个时间字符串，<br>开发给的时间是202304050100 开始到202304061000点结束，按每个小时时间字符串来入传参数。<br>可以敲33个时间字符串，放在文件里面cat 循环输出。但能自动绝不对动手，敲33个时间字符串太无趣。<br>可以考虑写循环并且每个时间加一个小时来推进。关键是如何构造一个时间递加的方法。</p><p>日期的加减运算:<br>date -d “目标时间 +|-n year|month|week|day|hour|minute|second” +”时间格式”<br>目标时间需要注意的是 年月日(空格)时分秒<br>+n 表示往后加多少时间单位<br>-n 表示往前推多少时间单位<br>year|month|week|day|hour|minute|second 时间单位<br>+”时间格式” 加号与日期格式之间不能留空</p><p>有可能用到的是时间格式<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">%</span><span class="language-bash">H 小时，24小时制（00~23）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">I 小时，12小时制（01~12）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">k 小时，24小时制（0~23）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">l 小时，12小时制（1~12）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">M 分钟（00~59）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">p 显示出AM或PM</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">r 显示时间，12小时制（hh:mm:ss %p）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">s 从1970年1月1日00:00:00到目前经历的秒数</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">S 显示秒（00~59）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">T 显示时间，24小时制（hh:mm:ss）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">X 显示时间的格式（%H:%M:%S）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">Z 显示时区，日期域（CST）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">a 星期的简称（Sun~Sat）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">A 星期的全称（Sunday~Saturday）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">h,%b 月的简称（Jan~Dec）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">B 月的全称（January~December）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">c 日期和时间（Tue Nov 20 14:12:58 2012）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">d 一个月的第几天（01~31）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">x,%D 日期（mm/dd/yy）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">j 一年的第几天（001~366）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">m 月份（01~12）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">w 一个星期的第几天（0代表星期天）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">W 一年的第几个星期（00~53，星期一为第一天）</span> </span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">y 年的最后两个数字（1999则是99）</span></span><br></pre></td></tr></table></figure></p><p>于是很快就能得到我们想要的代码<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">i=0</span><br><span class="line">while [ $i -le 33 ]</span><br><span class="line">do</span><br><span class="line">   let &#x27;i++&#x27;;</span><br><span class="line">   dstr=`date -d &quot;20230405 0000 +$i day&quot; +&quot;%Y%m%d%H%M&quot;</span><br><span class="line">   /data/PRG/tasks/rerun_task.sh $dstr</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;开发需要重跑一个任务。输入参数是一个时间字符串，&lt;br&gt;开发给的时间是202304050100 开始到202304061000点结束，按每个小时时间字符串来入传参数。&lt;br&gt;可以敲33个时间字符串，放在文件里面cat 循环输出。但能自动绝不对动手，敲33个时间字符串太无趣。</summary>
      
    
    
    
    <category term="shell" scheme="https://sheenzxx.github.io/categories/shell/"/>
    
    
    <category term="date" scheme="https://sheenzxx.github.io/tags/date/"/>
    
  </entry>
  
  <entry>
    <title>mysql json 类型</title>
    <link href="https://sheenzxx.github.io/2023/04/04/mysqlJsonType/"/>
    <id>https://sheenzxx.github.io/2023/04/04/mysqlJsonType/</id>
    <published>2023-04-04T02:10:29.000Z</published>
    <updated>2023-04-06T08:48:14.918Z</updated>
    
    <content type="html"><![CDATA[<p>JSON 类型的存储跟LONGBLOB, LONGTEXT 一样 存储长度:L + 4 bytes, where L &lt; 2 的32次方<br>JSON 的传输限制于 max_allowed_package 的大小，可以通过 JSON_STORAGE_SIZE()  函数来确定json 文档的大小<br>JSON 类型并不能直接创建索引，而是由计算列支持<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test_json(</span><br><span class="line">     c json,</span><br><span class="line">     g <span class="type">int</span> generated always <span class="keyword">as</span> (c<span class="operator">-</span><span class="operator">&gt;</span>&quot;$.id&quot;),</span><br><span class="line">     key idx_g (g)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test_json (c) <span class="keyword">VALUES</span></span><br><span class="line">      (<span class="string">&#x27;&#123;&quot;id&quot;: &quot;1&quot;, &quot;name&quot;: &quot;Fred&quot;&#125;&#x27;</span>), (<span class="string">&#x27;&#123;&quot;id&quot;: &quot;2&quot;, &quot;name&quot;: &quot;Wilma&quot;&#125;&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;&#123;&quot;id&quot;: &quot;3&quot;, &quot;name&quot;: &quot;Barney&quot;&#125;&#x27;</span>), (<span class="string">&#x27;&#123;&quot;id&quot;: &quot;4&quot;, &quot;name&quot;: &quot;Betty&quot;&#125;&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test_json;</span><br><span class="line">c                            <span class="operator">|</span>g<span class="operator">|</span></span><br><span class="line"><span class="comment">-----------------------------+-+</span></span><br><span class="line">&#123;&quot;id&quot;: &quot;1&quot;, &quot;name&quot;: &quot;Fred&quot;&#125;  <span class="operator">|</span><span class="number">1</span><span class="operator">|</span></span><br><span class="line">&#123;&quot;id&quot;: &quot;2&quot;, &quot;name&quot;: &quot;Wilma&quot;&#125; <span class="operator">|</span><span class="number">2</span><span class="operator">|</span></span><br><span class="line">&#123;&quot;id&quot;: &quot;3&quot;, &quot;name&quot;: &quot;Barney&quot;&#125;<span class="operator">|</span><span class="number">3</span><span class="operator">|</span></span><br><span class="line">&#123;&quot;id&quot;: &quot;4&quot;, &quot;name&quot;: &quot;Betty&quot;&#125; <span class="operator">|</span><span class="number">4</span><span class="operator">|</span></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test_json <span class="keyword">where</span> c<span class="operator">-</span><span class="operator">&gt;</span>&quot;$.id&quot; <span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">id<span class="operator">|</span>select_type<span class="operator">|</span><span class="keyword">table</span>    <span class="operator">|</span>partitions<span class="operator">|</span>type<span class="operator">|</span>possible_keys<span class="operator">|</span>key  <span class="operator">|</span>key_len<span class="operator">|</span><span class="keyword">ref</span>  <span class="operator">|</span><span class="keyword">rows</span><span class="operator">|</span>filtered<span class="operator">|</span>Extra<span class="operator">|</span></span><br><span class="line"><span class="comment">--+-----------+---------+----------+----+-------------+-----+-------+-----+----+--------+-----+</span></span><br><span class="line"> <span class="number">1</span><span class="operator">|</span>SIMPLE     <span class="operator">|</span>test_json<span class="operator">|</span>          <span class="operator">|</span><span class="keyword">ref</span> <span class="operator">|</span>idx_g        <span class="operator">|</span>idx_g<span class="operator">|</span><span class="number">5</span>      <span class="operator">|</span>const<span class="operator">|</span>   <span class="number">1</span><span class="operator">|</span>   <span class="number">100.0</span><span class="operator">|</span>     <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"> <span class="operator">-</span><span class="operator">&gt;</span> 操作符相当于 json_extract() 函数</span><br><span class="line"> <span class="operator">-</span><span class="operator">&gt;&gt;</span> 操作符相当于 json_unquote() 函数 <span class="comment">--不带双引号</span></span><br><span class="line"> <span class="keyword">SELECT</span> c<span class="operator">-</span><span class="operator">&gt;</span>&quot;$.name&quot;,c<span class="operator">-</span><span class="operator">&gt;&gt;</span>&quot;$.name&quot; <span class="keyword">FROM</span> test_json</span><br><span class="line"> c<span class="operator">-</span><span class="operator">&gt;</span>&quot;$.name&quot;<span class="operator">|</span>c<span class="operator">-</span><span class="operator">&gt;&gt;</span>&quot;$.name&quot;<span class="operator">|</span></span><br><span class="line"><span class="comment">-----------+------------+</span></span><br><span class="line">&quot;Fred&quot;     <span class="operator">|</span>Fred        <span class="operator">|</span></span><br><span class="line">&quot;Wilma&quot;    <span class="operator">|</span>Wilma       <span class="operator">|</span></span><br><span class="line">&quot;Barney&quot;   <span class="operator">|</span>Barney      <span class="operator">|</span></span><br><span class="line">&quot;Betty&quot;    <span class="operator">|</span>Betty       <span class="operator">|</span></span><br><span class="line">&quot;Fred&quot;     <span class="operator">|</span>Fred        <span class="operator">|</span></span><br><span class="line">&quot;Wilma&quot;    <span class="operator">|</span>Wilma       <span class="operator">|</span></span><br></pre></td></tr></table></figure></p><p>更新JSON 列的值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">全字段更新</span><br><span class="line"><span class="keyword">update</span> test_json <span class="keyword">set</span> c<span class="operator">=</span><span class="string">&#x27;&#123;&quot;id&quot;: &quot;5&quot;, &quot;name&quot;: &quot;Sheen&quot;&#125;&#x27;</span> <span class="keyword">where</span> c<span class="operator">-</span><span class="operator">&gt;</span><span class="string">&#x27;$.id&#x27;</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">部分更新(<span class="number">8.0</span><span class="operator">+</span>)</span><br><span class="line">在<span class="keyword">update</span> 语句中通过 json_set(),json_replace(),json_remove() 这三个函数，对json 列进行部分更新操作</span><br><span class="line"># 输入列与被更新列必须是同一列</span><br><span class="line"><span class="keyword">UPDATE</span> mytable <span class="keyword">SET</span> jcol1 <span class="operator">=</span> JSON_SET(jcol1, <span class="string">&#x27;$.a&#x27;</span>, <span class="number">100</span>); </span><br><span class="line"># 这个操作在部分更新操作是不允许的。输入列与被更新列不一致</span><br><span class="line"><span class="keyword">UPDATE</span> mytable <span class="keyword">SET</span> jcol1 <span class="operator">=</span> JSON_SET(jcol2, <span class="string">&#x27;$.a&#x27;</span>, <span class="number">100</span>); </span><br><span class="line"># 被替换的值的存储空间必须至少和新值一样大。换句话说，新值不能大于旧值</span><br><span class="line">可以通过 JSON_STORAGE_FREE() 函数查看部分更新json 列释放的空间大小。</span><br><span class="line">通过设置 binlog_row_value_options <span class="operator">=</span> PARTIAL_JSON.可以使部分更新操作写入binlog时采用压缩格式。节省空间</span><br></pre></td></tr></table></figure></p><p>创建 JSON 值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">以中括号引起的json数组</span><br><span class="line">[&quot;abc&quot;, <span class="number">10</span>, <span class="keyword">null</span>, <span class="literal">true</span>, <span class="literal">false</span>]</span><br><span class="line"></span><br><span class="line">以花括号引起的key:<span class="keyword">value</span>的json对象</span><br><span class="line">&#123;&quot;k1&quot;: &quot;value&quot;, &quot;k2&quot;: <span class="number">10</span>&#125;</span><br><span class="line"></span><br><span class="line">都可以成为JSON类型的值，JSON 标量值可以包含各种数据类型。但是 key<span class="operator">-</span><span class="keyword">value</span> 对象中 key 必须是字符串，JSON对象允许循环嵌套json数组或对象</span><br><span class="line">[<span class="number">99</span>, &#123;&quot;id&quot;: &quot;HK500&quot;, &quot;cost&quot;: <span class="number">75.99</span>&#125;, [&quot;hot&quot;, &quot;cold&quot;]]</span><br><span class="line">&#123;&quot;k1&quot;: &quot;value&quot;, &quot;k2&quot;: [<span class="number">10</span>, <span class="number">20</span>]&#125;</span><br><span class="line">可以通过 <span class="built_in">CAST</span>(<span class="keyword">value</span> <span class="keyword">as</span> JSON) 将其他类型转化为JSON 类型</span><br></pre></td></tr></table></figure></p><p>JSON_TYPE() 函数尝试解析一个JSON对象的类型。如果json对象有效则返回对应的类型。否则返回错误<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> json_type(<span class="string">&#x27;&#123;&quot;id&quot;: &quot;5&quot;, &quot;name&quot;: &quot;Fred&quot;&#125;&#x27;</span>)</span><br><span class="line">json_type(<span class="string">&#x27;&#123;&quot;id&quot;: &quot;5&quot;, &quot;name&quot;: &quot;Fred&quot;&#125;&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------+</span></span><br><span class="line">OBJECT                                  <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> json_type(<span class="string">&#x27;[1,2,3,4]&#x27;</span>) </span><br><span class="line">json_type(<span class="string">&#x27;[1,2,3,4]&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------+</span></span><br><span class="line"><span class="keyword">ARRAY</span>                 <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> json_type(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">json_type(<span class="string">&#x27;1&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">--------------+</span></span><br><span class="line"><span class="type">INTEGER</span>       <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> json_type(<span class="string">&#x27;&quot;var&quot;&#x27;</span>) </span><br><span class="line">json_type(<span class="string">&#x27;&quot;var&quot;&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">------------------+</span></span><br><span class="line">STRING            <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> json_type(<span class="string">&#x27;var&#x27;</span>) </span><br><span class="line"><span class="keyword">SQL</span> 错误 [<span class="number">3141</span>] [<span class="number">22001</span>]: Data truncation: Invalid JSON text <span class="keyword">in</span> argument <span class="number">1</span> <span class="keyword">to</span> <span class="keyword">function</span> json_type: &quot;Invalid value.&quot; <span class="keyword">at</span> position <span class="number">0.</span></span><br></pre></td></tr></table></figure></p><p>JSON_ARRAY() 将给定的值列表组成一个json数组<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">json_array</span>(<span class="string">&#x27;var&#x27;</span>,<span class="number">1</span>,now())</span><br><span class="line"><span class="built_in">json_array</span>(<span class="string">&#x27;var&#x27;</span>,<span class="number">1</span>,now())               <span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------+</span></span><br><span class="line">[&quot;var&quot;, <span class="number">1</span>, &quot;2023-04-04 15:23:00.000000&quot;]<span class="operator">|</span></span><br></pre></td></tr></table></figure></p><p>JSON_OBJECT() 将给定的key value 组成一个 json 对象<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">json_object</span>(<span class="string">&#x27;id&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;Sheen&#x27;</span>)</span><br><span class="line"><span class="built_in">json_object</span>(<span class="string">&#x27;id&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;Sheen&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------+</span></span><br><span class="line">&#123;&quot;id&quot;: <span class="number">1</span>, &quot;name&quot;: &quot;Sheen&quot;&#125;        <span class="operator">|</span></span><br></pre></td></tr></table></figure></p><p>JSON_MERGE_PRESERVE() 将多个json 文档合并成一个<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JSON_MERGE_PRESERVE(<span class="string">&#x27;[&quot;a&quot;, 1]&#x27;</span>, <span class="string">&#x27;&#123;&quot;key&quot;: &quot;value&quot;&#125;&#x27;</span>);</span><br><span class="line">JSON_MERGE_PRESERVE(<span class="string">&#x27;[&quot;a&quot;, 1]&#x27;</span>, <span class="string">&#x27;&#123;&quot;key&quot;: &quot;value&quot;&#125;&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">---------------------------------------------------+</span></span><br><span class="line">[&quot;a&quot;, <span class="number">1</span>, &#123;&quot;key&quot;: &quot;value&quot;&#125;]                         <span class="operator">|</span></span><br></pre></td></tr></table></figure></p><p>JSON值的规范化<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">JSON_OBJECT</span>(<span class="string">&#x27;key1&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;key2&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;key1&#x27;</span>, <span class="string">&#x27;def&#x27;</span>);</span><br><span class="line">在<span class="number">8.0</span><span class="number">.3</span>以后的版本</span><br><span class="line">是以重复键最后出现胜利原则</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">JSON_OBJECT</span>(<span class="string">&#x27;key1&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;key2&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;key1&#x27;</span>, <span class="string">&#x27;def&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> &#123;&quot;key1&quot;: &quot;def&quot;, &quot;key2&quot;: &quot;abc&quot;&#125;                       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line">在<span class="number">8.0</span><span class="number">.3</span> 以前的版本</span><br><span class="line">是以重复建最早出现胜利原则</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">JSON_OBJECT</span>(<span class="string">&#x27;key1&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;key2&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;key1&#x27;</span>, <span class="string">&#x27;def&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> &#123;&quot;key1&quot;: <span class="number">1</span>, &quot;key2&quot;: &quot;abc&quot;&#125;                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>JSON值合并 (8.0.3版本开始支持)<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">JSON_MERGE_PRESERVE() </span><br><span class="line">JSON_MERGE_PATCH()</span><br><span class="line">这<span class="number">2</span>个合并函数的不同在于对重复键的处理</span><br><span class="line">JSON_MERGE_PRESERVE() 是保留了重复键，并将值合并，JSON_MERGE_PATCH() 则保留重复键的最后一个。其他全部丢弃</span><br><span class="line">合并数组:</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PRESERVE(<span class="string">&#x27;[1, 2]&#x27;</span>, <span class="string">&#x27;[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]&#x27;</span>, <span class="string">&#x27;[true, false]&#x27;</span>) <span class="keyword">AS</span> Preserve,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PATCH(<span class="string">&#x27;[1, 2]&#x27;</span>, <span class="string">&#x27;[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]&#x27;</span>, <span class="string">&#x27;[true, false]&#x27;</span>) <span class="keyword">AS</span> Patch\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Preserve: [<span class="number">1</span>, <span class="number">2</span>, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, <span class="literal">true</span>, <span class="literal">false</span>]</span><br><span class="line">   Patch: [<span class="literal">true</span>, <span class="literal">false</span>]</span><br><span class="line">在上面的例子中 JSON_MERGE_PATCH 将每个参数视为一个由单个元素组成的数组。因此其下标皆为<span class="number">0</span> 。根据最后优胜规则 ，结果就是[<span class="literal">true</span>,<span class="literal">false</span>]</span><br><span class="line"></span><br><span class="line">合并对象</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PRESERVE(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;b&quot;: 2&#125;&#x27;</span>, <span class="string">&#x27;&#123;&quot;c&quot;: 3, &quot;a&quot;: 4&#125;&#x27;</span>, <span class="string">&#x27;&#123;&quot;c&quot;: 5, &quot;d&quot;: 3&#125;&#x27;</span>) <span class="keyword">AS</span> Preserve,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PATCH(<span class="string">&#x27;&#123;&quot;a&quot;: 3, &quot;b&quot;: 2&#125;&#x27;</span>, <span class="string">&#x27;&#123;&quot;c&quot;: 3, &quot;a&quot;: 4&#125;&#x27;</span>, <span class="string">&#x27;&#123;&quot;c&quot;: 5, &quot;d&quot;: 3&#125;&#x27;</span>) <span class="keyword">AS</span> Patch\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Preserve: &#123;&quot;a&quot;: [<span class="number">1</span>, <span class="number">4</span>], &quot;b&quot;: <span class="number">2</span>, &quot;c&quot;: [<span class="number">3</span>, <span class="number">5</span>], &quot;d&quot;: <span class="number">3</span>&#125;</span><br><span class="line">   Patch: &#123;&quot;a&quot;: <span class="number">4</span>, &quot;b&quot;: <span class="number">2</span>, &quot;c&quot;: <span class="number">5</span>, &quot;d&quot;: <span class="number">3</span>&#125;</span><br><span class="line">上面的例子中，我们可以看到对于重复键JSON_MERGE_PRESERVE保留key,并将其值合并成数组。而JSON_MERGE_PATCH遵循最后优胜规则，只保留重复key 的最后一个值</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span></span><br><span class="line">  <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PRESERVE(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>) <span class="keyword">AS</span> Preserve,</span><br><span class="line">  <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PATCH(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>) <span class="keyword">AS</span> Patch\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Preserve: [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">   Patch: <span class="number">2</span></span><br><span class="line">非数组对象会被自动包装为数组对象。于是本例子中的JSON_MERGE_PATCH同样丢弃了第一个数组对象。仅保留<span class="number">2</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span></span><br><span class="line">  <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PRESERVE(<span class="string">&#x27;[10, 20]&#x27;</span>, <span class="string">&#x27;&#123;&quot;a&quot;: &quot;x&quot;, &quot;b&quot;: &quot;y&quot;&#125;&#x27;</span>) <span class="keyword">AS</span> Preserve,</span><br><span class="line">  <span class="operator">-</span><span class="operator">&gt;</span>   JSON_MERGE_PATCH(<span class="string">&#x27;[10, 20]&#x27;</span>, <span class="string">&#x27;&#123;&quot;a&quot;: &quot;x&quot;, &quot;b&quot;: &quot;y&quot;&#125;&#x27;</span>) <span class="keyword">AS</span> Patch\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Preserve: [<span class="number">10</span>, <span class="number">20</span>, &#123;&quot;a&quot;: &quot;x&quot;, &quot;b&quot;: &quot;y&quot;&#125;]</span><br><span class="line">   Patch: &#123;&quot;a&quot;: &quot;x&quot;, &quot;b&quot;: &quot;y&quot;&#125;</span><br><span class="line">在混合数组和对象合并中。JSON_MERGE_PRESERVE将对象合并到数组中。而JSON_MERGE_PATCH则是将参数视为一个由单个元素组成的数组，这样就只保留最后一个参数</span><br><span class="line">可以说JSON_MERGE_PATCH 除了在多个json对象中合并对象里的每一个值。重复值就只保留最后一个。在其他情况下，只返回最后一个参数的值</span><br></pre></td></tr></table></figure></p><p>查找JSON值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">json值的查找路径</span><br><span class="line">$为根 </span><br><span class="line">$[n],表示第n<span class="operator">+</span><span class="number">1</span>个对象，下标从<span class="number">0</span> 开始</span><br><span class="line">$[n].key 表示第n<span class="operator">+</span><span class="number">1</span>个对象中指定key的值,当json值只有一个json 对象 可以写成 $.key 。存在多个对象而写成$.key 将返回<span class="keyword">NULL</span></span><br><span class="line">$[n].key[n] 表示第n<span class="operator">+</span><span class="number">1</span>个对象中指定key的值,key[n] 中的n 表示key 值里面第n<span class="operator">+</span><span class="number">1</span>个元素</span><br><span class="line">$.<span class="operator">*</span> 表示将对象的所有值组成一个数组返回</span><br><span class="line">$<span class="operator">*</span><span class="operator">*</span>.key 表示将对象的所有值中的key对应的值组成一个数组返回</span><br><span class="line">$[m <span class="keyword">to</span> n] 表示在json数组中获取一段连续的元素</span><br><span class="line">$[<span class="keyword">last</span>] 表示json数组中最后一个元素</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[0]&#x27;</span>)</span><br><span class="line">$[<span class="number">0</span>] 表示第一个json元素</span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[0]&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------------------+</span></span><br><span class="line"><span class="number">3</span>                                                            <span class="operator">|</span></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[1].a&#x27;</span>)</span><br><span class="line">$[<span class="number">1</span>].a 表示第二个元素里面key为a的值</span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[1].a&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">---------------------------------------------------------------+</span></span><br><span class="line">[<span class="number">5</span>, <span class="number">6</span>]                                                         <span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[1].a[1]&#x27;</span>)</span><br><span class="line">$[<span class="number">1</span>].a[<span class="number">1</span>] 表示第二个元素里面key为a的值里面的第二个元素</span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;[3, &#123;&quot;a&quot;: [5, 6], &quot;b&quot;: 10&#125;, [99, 100]]&#x27;</span>,<span class="string">&#x27;$[1].a[1]&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">6</span>                                                                 <span class="operator">|</span></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: [3, 4, 5]&#125;&#x27;</span>, <span class="string">&#x27;$.*&#x27;</span>)</span><br><span class="line">$.<span class="operator">*</span> 仅用于只有一个json对象中，将对象中所有的值以数组返回</span><br><span class="line">Name                                                   <span class="operator">|</span><span class="keyword">Value</span>            <span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------------+-----------------+</span></span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: [3, 4, 5]&#125;&#x27;</span>, <span class="string">&#x27;$.*&#x27;</span>)<span class="operator">|</span>[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]]<span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;&#123;&quot;a&quot;: &#123;&quot;b&quot;: 1&#125;, &quot;c&quot;: &#123;&quot;b&quot;: 2&#125;&#125;&#x27;</span>, <span class="string">&#x27;$**.b&#x27;</span>);</span><br><span class="line">$.<span class="operator">*</span><span class="operator">*</span>.b 表示第一层的<span class="keyword">value</span>中的key<span class="operator">=</span>b 的值以数组的形式返回 </span><br><span class="line">Name                                                   <span class="operator">|</span><span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------------+------+</span></span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;&#123;&quot;a&quot;: &#123;&quot;b&quot;: 1&#125;, &quot;c&quot;: &#123;&quot;b&quot;: 2&#125;&#125;&#x27;</span>, <span class="string">&#x27;$**.b&#x27;</span>)<span class="operator">|</span>[<span class="number">1</span>, <span class="number">2</span>]<span class="operator">|</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> JSON_EXTRACT(<span class="string">&#x27;[1, 2, 3, 4, 5]&#x27;</span>, <span class="string">&#x27;$[1 to 3]&#x27;</span>);</span><br><span class="line">$[<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span>] 对于json 数组可以通过 n <span class="keyword">to</span> m 的方式获数组中连续的一段值，表示获取从第<span class="number">2</span>到第<span class="number">4</span>个元素</span><br><span class="line">Name                                        <span class="operator">|</span><span class="keyword">Value</span>    <span class="operator">|</span></span><br><span class="line"><span class="comment">--------------------------------------------+---------+</span></span><br><span class="line">JSON_EXTRACT(<span class="string">&#x27;[1, 2, 3, 4, 5]&#x27;</span>, <span class="string">&#x27;$[1 to 3]&#x27;</span>)<span class="operator">|</span>[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]<span class="operator">|</span></span><br><span class="line">$[<span class="keyword">last</span>] 则表示数组的最后一个元素。$[<span class="keyword">last</span> <span class="number">-3</span> <span class="keyword">to</span> <span class="keyword">last</span> <span class="number">-1</span>] 表示从倒数第<span class="number">4</span>个元素到倒数第<span class="number">2</span>个元素</span><br></pre></td></tr></table></figure></p><p>修改JSON的值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">JSON_SET() 函数</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@j</span> <span class="operator">=</span> <span class="string">&#x27;[&quot;a&quot;, &#123;&quot;b&quot;: [true, false]&#125;, [10, 20]]&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> JSON_SET(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">$[<span class="number">1</span>].b[<span class="number">0</span>] 将第<span class="number">2</span>个元素key<span class="operator">=</span>b 的第<span class="number">1</span>个元素修改为<span class="number">1</span>，将第<span class="number">3</span>个元素的值中第<span class="number">3</span>个值设置为<span class="number">2</span></span><br><span class="line">JSON_SET(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">------------------------------------------+</span></span><br><span class="line">[&quot;a&quot;, &#123;&quot;b&quot;: [<span class="number">1</span>, <span class="literal">false</span>]&#125;, [<span class="number">10</span>, <span class="number">20</span>, <span class="number">2</span>]]     <span class="operator">|</span></span><br><span class="line">从结果中我们可以看到 $[<span class="number">1</span>]  对应的是 &#123;&quot;b&quot;: [<span class="literal">true</span>, <span class="literal">false</span>]&#125;, $[<span class="number">1</span>].b[<span class="number">0</span>] 对应的是<span class="literal">true</span> 被修改成<span class="number">1</span>，而第<span class="number">3</span>个元素[<span class="number">10</span>, <span class="number">20</span>]没有下标为<span class="number">2</span>的数据。则新增了一个<span class="number">2</span></span><br><span class="line">JSON_SET() 既更新旧值也插入新值</span><br><span class="line"></span><br><span class="line">JSON_INSERT() 函数</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@j</span> <span class="operator">=</span> <span class="string">&#x27;[&quot;a&quot;, &#123;&quot;b&quot;: [true, false]&#125;, [10, 20]]&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> JSON_INSERT(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">JSON_INSERT(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">---------------------------------------------+</span></span><br><span class="line">[&quot;a&quot;, &#123;&quot;b&quot;: [<span class="literal">true</span>, <span class="literal">false</span>]&#125;, [<span class="number">10</span>, <span class="number">20</span>, <span class="number">2</span>]]     <span class="operator">|</span></span><br><span class="line">从结果中可以看到JSON_INSERT()是插入新的值而不更新旧值</span><br><span class="line"></span><br><span class="line">JSON_PLACE() 函数</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@j</span> <span class="operator">=</span> <span class="string">&#x27;[&quot;a&quot;, &#123;&quot;b&quot;: [true, false]&#125;, [10, 20]]&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> JSON_REPLACE(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">JSON_REPLACE(<span class="variable">@j</span>, <span class="string">&#x27;$[1].b[0]&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;$[2][2]&#x27;</span>, <span class="number">2</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------------+</span></span><br><span class="line">[&quot;a&quot;, &#123;&quot;b&quot;: [<span class="number">1</span>, <span class="literal">false</span>]&#125;, [<span class="number">10</span>, <span class="number">20</span>]]            <span class="operator">|</span></span><br><span class="line">从结果中可以看到JSON_PLACE()只更新旧值，不插入新值</span><br><span class="line"></span><br><span class="line">JSON_REMOVE() 函数</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@j</span> <span class="operator">=</span> <span class="string">&#x27;[&quot;a&quot;, &#123;&quot;b&quot;: [true, false]&#125;, [10, 20]]&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> JSON_REMOVE(<span class="variable">@j</span>, <span class="string">&#x27;$[2]&#x27;</span>, <span class="string">&#x27;$[1].b[1]&#x27;</span>, <span class="string">&#x27;$[1].b[1]&#x27;</span>);</span><br><span class="line">JSON_REMOVE(<span class="variable">@j</span>, <span class="string">&#x27;$[2]&#x27;</span>, <span class="string">&#x27;$[1].b[1]&#x27;</span>, <span class="string">&#x27;$[1].b[1]&#x27;</span>)<span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------+</span></span><br><span class="line">[&quot;a&quot;, &#123;&quot;b&quot;: [<span class="literal">true</span>]&#125;]                             <span class="operator">|</span></span><br><span class="line">从结果集可以看到，根据参数指定的的多个path 进行元素移除</span><br><span class="line">第<span class="number">1</span>个参数，$[<span class="number">2</span>] 即 [<span class="number">10</span>, <span class="number">20</span>] 被移除</span><br><span class="line">第<span class="number">2</span>个参数，$[<span class="number">1</span>].b[<span class="number">1</span>] 即  &#123;&quot;b&quot;: [<span class="literal">true</span>, <span class="literal">false</span>]&#125; 中的<span class="literal">false</span> 也被移除</span><br><span class="line">第<span class="number">3</span>个参数，$[<span class="number">1</span>].b[<span class="number">1</span>] 即  &#123;&quot;b&quot;: [<span class="literal">true</span>, <span class="literal">false</span>]&#125; 中的<span class="literal">false</span> 因为在第<span class="number">2</span>步已经被移除。所以找不到。将不起任何作用</span><br></pre></td></tr></table></figure></p><p>JSON 类型值的比较<br>JSON 类型值可以通过 =, &lt;, &lt;=, &gt;, &gt;=, &lt;&gt;, !=, 和 &lt;=&gt; 这些操作符比较<br>BETWEEN IN() GREATEST() LEAST() 这些比较操作跟函数暂时不被支持</p><p>以下列表显示了JSON类型的优先级，从最高优先级到最低优先级。（类型名称是由JSON_type（）函数返回的名称。）一行中显示在一起的类型具有相同的优先级。列表中较早列出的JSON类型的任何值都比列表中较晚列出的任何JSON类型的值大。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BLOB</span></span><br><span class="line">  比较两个值的前N个字节，其中N是较短值中的字节数。如果两个值的前N个字节相同，则将较短的值排列在较长的值之前</span><br><span class="line">BIT</span><br><span class="line">  与<span class="type">BLOB</span>相同的规则</span><br><span class="line">OPAQUE</span><br><span class="line">  与<span class="type">BLOB</span>相同的规则。OPAQUE值是未分类为其他类型之一的值</span><br><span class="line">DATETIME</span><br><span class="line">  表示较早时间点的值在表示较晚时间点的数值之前排序。如果两个值最初分别来自MySQL DATETIME和<span class="type">TIMESTAMP</span>类型，那么如果它们表示相同的时间点，则它们是相等的。</span><br><span class="line"><span class="type">TIME</span></span><br><span class="line">  两个时间值中较小的一个按顺序排列在较大的一个之前。</span><br><span class="line"><span class="type">DATE</span></span><br><span class="line">  较早的日期在最近的日期之前排序。</span><br><span class="line"><span class="type">BOOLEAN</span></span><br><span class="line">  <span class="literal">false</span> 比 <span class="literal">true</span> 小</span><br><span class="line"><span class="keyword">ARRAY</span></span><br><span class="line">  <span class="number">2</span>个数组如果他们的长度和元素顺序都相同。则相等。否则则有存在差异的第一个元素的大小为准。首先以该位置较小的那个数组排在前面。如果一个较短的数组所有值与较长的数组的前N个相同。则较短的排在前面</span><br><span class="line">OBJECT</span><br><span class="line">  <span class="number">2</span>个对象具有相同的key 并且key 对应的值相同。则<span class="number">2</span>个对象相等。<span class="number">2</span>个不相等的对象其排序具有不确定性</span><br><span class="line">STRING</span><br><span class="line">  字符串在被比较的两个字符串的utf8mb4表示的前N个字节上按词法排序，其中N是较短字符串的长度。如果两个字符串的前N个字节相同，则认为较短的字符串小于较长的字符串。</span><br><span class="line"><span class="type">INTEGER</span>, <span class="keyword">DOUBLE</span></span><br><span class="line">  如果是mysql 内置的数值型类型则按数值型的排序方式。如果无法确定其类型。mysql将其转化为精准的数值型再进行比较</span><br><span class="line"><span class="keyword">NULL</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;JSON 类型的存储跟LONGBLOB, LONGTEXT 一样 存储长度:L + 4 bytes, where L &amp;lt; 2 的32次方&lt;br&gt;JSON 的传输限制于 max_allowed_package 的大小，可以通过 JSON_STORAGE_SIZE()  </summary>
      
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="json" scheme="https://sheenzxx.github.io/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>sed 使用</title>
    <link href="https://sheenzxx.github.io/2023/03/30/sed/"/>
    <id>https://sheenzxx.github.io/2023/03/30/sed/</id>
    <published>2023-03-30T07:18:22.000Z</published>
    <updated>2023-04-07T06:20:05.538Z</updated>
    
    <content type="html"><![CDATA[<p>如何将 /usr/local/mysql/bin 注册到 /etc/profile 指定位置?<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">LINE=`grep -n <span class="string">&quot;pathmunge /usr/sbin after&quot;</span> /etc/profile |awk -F<span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $1 +2&#125;&#x27;</span>`</span><br><span class="line">sed -i <span class="string">&quot;<span class="variable">$&#123;LINE&#125;</span>&quot;</span>i<span class="string">&quot;pathmunge /usr/local/mysql/bin&quot;</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">###效果</span></span><br><span class="line"><span class="comment"># Path manipulation</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$EUID</span>&quot;</span> = <span class="string">&quot;0&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    pathmunge /usr/sbin</span><br><span class="line">    pathmunge /usr/local/sbin</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    pathmunge /usr/local/sbin after</span><br><span class="line">    pathmunge /usr/sbin after</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">pathmunge /usr/local/mysql/bin</span><br></pre></td></tr></table></figure></p><p>比如，要将目录/modules下面所有文件中的zhangsan都修改成lisi，这样做：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s/zhangsan/lisi/g&quot; `grep zhangsan -rl /modules`</span><br><span class="line"></span><br><span class="line">-i 表示inplace edit，就地修改文件</span><br><span class="line">-r 表示搜索子目录</span><br><span class="line">-l 表示输出匹配的文件名</span><br><span class="line">这个命令组合很强大，要注意备份文件</span><br><span class="line"> </span><br><span class="line">sed -i &#x27;s/old_string/new_string/g&#x27;`grep &quot;old_string&quot; -l *sh`  批量替换 sh 文件中包含指定字符串的为目标字符串</span><br></pre></td></tr></table></figure></p><p>当用sed  批量处理 sh 文件时，出现了下面的错误，<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[oracle@intra_db-10-121 bin]$ sed -i &quot;s#dba@3conline\.com\.cn#dba@3conline\.com#g&quot;`grep &quot;dba@3conline.com.cn&quot; -l *`   </span><br><span class="line">sed：-e 表达式 #1，字符 44：unknown option to `s&#x27;</span><br><span class="line">[oracle@intra_db-10-121 bin]$ sed -i &quot;s#dba@3conline\.com\.cn#dba@3conline\.com#g&quot;`grep &quot;dba@3conline.com.cn&quot; -l \*\.sh`</span><br><span class="line">grep: *.sh: 没有那个文件或目录</span><br><span class="line">sed: no input files</span><br></pre></td></tr></table></figure><br>可以更改为如下写法<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;dba@3conline.com.cn&quot; -l *.sh |xargs sed -i &quot;s#dba@3conline\.com\.cn#dba@3conline\.com#g&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如何将 /usr/local/mysql/bin 注册到 /etc/profile 指定位置?&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1</summary>
      
    
    
    
    <category term="shell" scheme="https://sheenzxx.github.io/categories/shell/"/>
    
    
    <category term="sed" scheme="https://sheenzxx.github.io/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>mysql数据库服务器调优</title>
    <link href="https://sheenzxx.github.io/2023/03/30/mysqlServerTun/"/>
    <id>https://sheenzxx.github.io/2023/03/30/mysqlServerTun/</id>
    <published>2023-03-30T03:05:28.000Z</published>
    <updated>2023-03-30T03:06:28.045Z</updated>
    
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="centos7" scheme="https://sheenzxx.github.io/tags/centos7/"/>
    
    <category term="server" scheme="https://sheenzxx.github.io/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>PG系统表之 pg_class</title>
    <link href="https://sheenzxx.github.io/2023/03/28/pgclass/"/>
    <id>https://sheenzxx.github.io/2023/03/28/pgclass/</id>
    <published>2023-03-28T02:16:13.000Z</published>
    <updated>2023-03-29T06:37:53.864Z</updated>
    
    <content type="html"><![CDATA[<p>pg_class 表记录了数据库中几乎所有的关系(relations)：包括表、索引、视图、物化视图、组合类型和TOAST表</p><h5 id="pg-class"><a href="#pg-class" class="headerlink" title="pg_class"></a>pg_class</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">oid oid </span><br><span class="line">   行标识</span><br><span class="line">relname name</span><br><span class="line">    关系名称,例如表名，索引名。视图名等</span><br><span class="line">relnamespace oid  (<span class="keyword">references</span> pg_namespace.oid)</span><br><span class="line">    包含这个关系的命名空间的 oid</span><br><span class="line">reltype oid (<span class="keyword">references</span> pg_type.oid)</span><br><span class="line">    表的类型。其他关系都用 <span class="number">0</span> 标识</span><br><span class="line">relowner oid (<span class="keyword">references</span> pg_authid.oid)</span><br><span class="line">    关系所有者</span><br><span class="line">relam oid (<span class="keyword">references</span> pg_am.oid)</span><br><span class="line">    如果是表或索引，表示使用的访问方法(堆、B树、哈希等),否则为<span class="number">0</span>(序列和视图等不需要存储的关系)，</span><br><span class="line">relfilenode oid</span><br><span class="line">    这个关系在磁盘上文件的名称;<span class="number">0</span>表示这是一个“映射”关系，其磁盘文件名取决于低层状态</span><br><span class="line">reltablespace oid (<span class="keyword">references</span> pg_tablespace.oid)</span><br><span class="line">    该关系所存储的表空间。如果为<span class="number">0</span>，使用数据库的默认表空间。(如果关系无磁盘文件时无意义)</span><br><span class="line">relpages int4</span><br><span class="line">    表示这个表以页为统计的大小。这个只是执行计划使用的预估值，由 VACUUM, ANALYZE 还有少量由DDL 操作(例如 <span class="keyword">create</span> index) 更新</span><br><span class="line">reltuples float4</span><br><span class="line">    表示表中活动的行数。这个只是执行计划使用的预估值，由 VACUUM, ANALYZE 还有少量由DDL 操作(例如 <span class="keyword">create</span> index) 更新，如果表没发生过vacuumed 或 analyzed 则标记为<span class="number">-1</span> 表示未知行数</span><br><span class="line">relallvisible int4</span><br><span class="line">    在表的可见性映射表中被标记为全可见的页数。这个只是执行计划使用的预估值。由 VACUUM, ANALYZE 还有少量由DDL 操作(例如 <span class="keyword">create</span> index) 更新。</span><br><span class="line">reltoastrelid oid (<span class="keyword">references</span> pg_class.oid)</span><br><span class="line">    与该表关联的TOAST表的 oid ,如果没有用<span class="number">0</span>表示，对于超长的行数据（默认<span class="number">8</span>kb一页，页是PG中最基本的存储单位），PG 将数据存储在另一张二级表的多行中。这张表就叫TOAST表，这张存储方式叫行外存储方式</span><br><span class="line">relhasindex bool</span><br><span class="line">    如果这是一个表并且其上建有（或最近建有）索引则为真</span><br><span class="line">relisshared bool</span><br><span class="line">    如果该表在集簇中的所有数据库间共享则为真。只有某些系统目录（如pg_database）是共享的</span><br><span class="line">relpersistence <span class="type">char</span></span><br><span class="line">    P <span class="operator">=</span> 永久表<span class="operator">/</span>序列 u <span class="operator">=</span> 无日志表<span class="operator">/</span>序列 t <span class="operator">=</span> 临时表<span class="operator">/</span>序列</span><br><span class="line">relkind <span class="type">char</span></span><br><span class="line">    r <span class="operator">=</span> 普通表, i <span class="operator">=</span> 索引, S <span class="operator">=</span> 序列, t <span class="operator">=</span> TOAST 表, v <span class="operator">=</span> 视图, m <span class="operator">=</span> 物化视图, c <span class="operator">=</span> 组合类型, f <span class="operator">=</span> 外部表, p <span class="operator">=</span> 分区表, I <span class="operator">=</span> 分区索引</span><br><span class="line">relnatts int2</span><br><span class="line">    关系中用户列的数目（系统列不计算在内）。在pg_attribute中必须有这么多对应的项。另请参阅pg_attribute.attnum。</span><br><span class="line">relchecks int2</span><br><span class="line">    表上的约束数，参见 pg_constraint</span><br><span class="line">relhasrules bool</span><br><span class="line">    如果表有（或曾有）规则则为真，参见 pg_rewrite</span><br><span class="line">relhastriggers bool</span><br><span class="line">    如果表有（或曾有）触发器则为真，参见 pg_trigger</span><br><span class="line">relhassubclass bool</span><br><span class="line">    如果表或索引有（或曾有）任何继承的子女或分区则为真</span><br><span class="line">relrowsecurity bool</span><br><span class="line">    如果表有启用行级别的安全策略则为真，参见 pg_policy </span><br><span class="line">relforcerowsecurity bool</span><br><span class="line">    如果行级安全策略（启用时）也适用于表拥有者则为真，参见 pg_policy</span><br><span class="line">relispopulated bool</span><br><span class="line">    如果表已被填充则为真（对于所有关系该列都为真，但对于某些物化视图却不是）</span><br><span class="line">relreplident <span class="type">char</span></span><br><span class="line">    用来形成复制标志的列， 对于行，d <span class="operator">=</span> 默认值(主键，如果有) , n <span class="operator">=</span> 无， f <span class="operator">=</span> 所有列 ，i <span class="operator">=</span> 索引</span><br><span class="line">relispartition bool</span><br><span class="line">    如果表或索引为分区表<span class="operator">/</span>索引,则为真</span><br><span class="line">relrewrite oid (<span class="keyword">references</span> pg_class.oid)</span><br><span class="line">    对于在要求表重写的DDL操作期间被写入的新关系，这个域包含原始关系的OID，否则为<span class="number">0</span>。那种状态仅在内部可见，对于一个用户可见的关系这个域应该从不包含不是<span class="number">0</span>的值。</span><br><span class="line">relfrozenxid xid</span><br><span class="line">    在此之前的所有事务ID在表中已经被替换为一个永久的(“冻结的”) 事务ID。这用于跟踪表是否需要被清理，以便阻止事务ID回卷或者允许pg_xact被收缩。如果该关系不是一个表则为<span class="number">0</span>（InvalidTransactionId）。</span><br><span class="line">relminmxid xid</span><br><span class="line">    在此之前的多事务ID在表中已经被替换为一个事务ID。这被用于跟踪表是否需要被清理，以阻止 多事务ID回卷或者允许pg_multixact被收缩。如果关系不是一个表则 为<span class="number">0</span>（InvalidMultiXactId）。</span><br><span class="line">relacl aclitem[]</span><br><span class="line">    访问权限</span><br><span class="line">reloptions text[]</span><br><span class="line">    访问方法相关的选项，以“keyword<span class="operator">=</span><span class="keyword">value</span>”字符串形式</span><br><span class="line">relpartbound pg_node_tree</span><br><span class="line">    如果表示一个分区（见relispartition），分区边界的内部表达</span><br></pre></td></tr></table></figure><h5 id="pg-depend"><a href="#pg-depend" class="headerlink" title="pg_depend"></a>pg_depend</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">classid oid (<span class="keyword">references</span> pg_class.oid)</span><br><span class="line">    依赖对象所在的系统目录OID</span><br><span class="line">objid oid (<span class="keyword">references</span> <span class="keyword">any</span> OID <span class="keyword">column</span>) 任意列的OID</span><br><span class="line">    指定依赖对象的OID</span><br><span class="line">objsubid int4</span><br><span class="line">    对于一个表列，这里是列号（objid和classid指表本身）。对于所有其他对象类型，此列为<span class="number">0</span>。</span><br><span class="line">refclassid oid (<span class="keyword">references</span> pg_class.oid)</span><br><span class="line">    被引用对象所在的系统目录的OID</span><br><span class="line">refobjid oid (<span class="keyword">references</span> <span class="keyword">any</span> OID <span class="keyword">column</span>) 任意列的OID</span><br><span class="line">    指定被引用对象的OID</span><br><span class="line">refobjsubid int4</span><br><span class="line">    对于一个被引用的表列，这里是列号（objid和classid指表本身）。对于所有其他对象类型，此列为<span class="number">0</span>。</span><br><span class="line">deptype <span class="type">char</span></span><br><span class="line">    n : DEPENDENCY_NORMAL </span><br><span class="line">        在独立创建的对象之间的一个普通关系。依赖对象可以在不影响被依赖对象的情况下被删除。被引用对象只能通过指定CASCADE被删除，在这种情况下依赖对象也会被删除. 例如一个表引用了一个序列做自增。删除表不影响序列。删除序列则需要指定 cascade 连表一起删除</span><br><span class="line">    a : DEPENDENCY_AUTO </span><br><span class="line">        依赖对象可以被独立于被依赖对象删除，且应该在被引用对象被删除时自动被删除（不管在RESTRICT或CASCADE模式）。例如表上的约束。表删了。约束也跟着消失</span><br><span class="line">    i ：DEPENDENCY_INTERNAL </span><br><span class="line">        依赖对象作为被引用对象创建过程的一部分被创建，并且只是其内部实现的一部分。不允许直接<span class="keyword">DROP</span>所依赖的对象（而是告诉用户对引用对象发出<span class="keyword">DROP</span>操作）。无论是否指定了CASCADE，<span class="keyword">DROP</span>被引用的对象都将导致自动删除从属对象。如果由于删除了对某些其他对象的依赖关系而不得不删除依赖对象，则其删除将转换为对所引用对象的删除，因此依赖对象的NORMAL和AUTO依赖关系的行为就像它们是所引用对象的依赖关系。示例：视图的<span class="keyword">ON</span> <span class="keyword">SELECT</span>规则使其在内部依赖于视图，以防止在视图保留时将其删除。规则的依赖关系（例如它引用的表）就好像他们是视图的依赖关系</span><br><span class="line">    P ：DEPENDENCY_PARTITION_PRI</span><br><span class="line">    S : DEPENDENCY_PARTITION_SEC</span><br><span class="line">        依赖对象被作为被引用对象创建过程的一部分创建，并且确实是其内部实现的一部分。但是，不像INTERNAL，有多个这样的引用对象。除非删除了这些引用对象中的至少一个对象，否则不得删除依赖对象；如果其中任何一个被删除，则不管是否指定了CASCADE，都应删除依赖对象。也不像INTERNAL，依赖对象所依赖的某些其他对象的删除不会导致任何分区引用的对象的自动删除。因此，如果删除没有通过其他路径级联到这些对象中的至少一个，它会被拒绝。（大多数情况下，依赖对象与至少一个分区引用对象共享所有非分区的依赖关系，因此此限制不会导致阻止任何级联的删除。）主分区和辅助分区的依赖关系表现相同，除了主分区依赖关系倾向用于错误消息；因此，分区相关的对象应该有一个主分区依赖关系和一个或多个辅助分区依赖关系。注意到分区依赖关系是任何对象所正常拥有的依赖关系的补充，而不是替代。这简化了ATTACH<span class="operator">/</span>DETACH <span class="keyword">PARTITION</span>操作：只要添加或删除分区的依赖关系。例如：子分区索引与其所基于的分区表和父分区索引是分区相关的，因此只要其中一个删除，则子分区索引就消失，否则，就不消失。父索引上的依赖关系是主要的，故如果用户试图删除子分区索引，错误消息反而会建议删除父索引（不是表）</span><br><span class="line">    e : DEPENDENCY_EXTENSION </span><br><span class="line">        依赖对象是作为扩展的被引用对象的一个成员（参见pg_extension）。依赖对象可以通过被引用对象上的<span class="keyword">DROP</span> EXTENSION来删除。在功能上，这种依赖类型和一个INTERNAL依赖的作用相同，其存在只是为了清晰和简化pg_dump</span><br><span class="line">    x : DEPENDENCY_AUTO_EXTENSION</span><br><span class="line">        依赖对象不是作为被引用对象的扩展的成员（因此不应该被pg_dump忽略），但是没有该扩展它又无法工作，因此如果删除了扩展，则该依赖对象应自动删除。该依赖对象也可以独立删除。功能上，该依赖关系类型与AUTO依赖相同，但是为了清晰起见和简化pg_dump，将其分开</span><br><span class="line">    p : DEPENDENCY_PIN</span><br><span class="line">        没有依赖对象，这种类型的项是一个信号，用于说明系统本身依赖于被引用对象，并且该对象永远不能被删除。这种类型的项只能被initdb创建。而此种项的依赖对象的列都为<span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="查询序列与表的依赖关系"><a href="#查询序列与表的依赖关系" class="headerlink" title="查询序列与表的依赖关系"></a>查询序列与表的依赖关系</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ts.nspname <span class="keyword">as</span> object_schema,</span><br><span class="line">        tbl.relname <span class="keyword">as</span> table_name, </span><br><span class="line">       col.attname <span class="keyword">as</span> column_name,</span><br><span class="line">       s.relname   <span class="keyword">as</span> sequence_name,</span><br><span class="line">   d.refobjid,d.objid</span><br><span class="line"><span class="keyword">from</span> pg_class s</span><br><span class="line">  <span class="keyword">join</span> pg_namespace sn <span class="keyword">on</span> sn.oid <span class="operator">=</span> s.relnamespace </span><br><span class="line">  <span class="keyword">join</span> pg_depend d <span class="keyword">on</span> d.refobjid <span class="operator">=</span> s.oid  <span class="keyword">and</span> d.refclassid<span class="operator">=</span><span class="string">&#x27;pg_class&#x27;</span>::regclass </span><br><span class="line">  <span class="keyword">join</span> pg_attrdef ad <span class="keyword">on</span> ad.oid <span class="operator">=</span> d.objid  <span class="keyword">and</span> d.classid <span class="operator">=</span> <span class="string">&#x27;pg_attrdef&#x27;</span>::regclass</span><br><span class="line">  <span class="keyword">join</span> pg_attribute col <span class="keyword">on</span> col.attrelid <span class="operator">=</span> ad.adrelid <span class="keyword">and</span> col.attnum <span class="operator">=</span> ad.adnum</span><br><span class="line">  <span class="keyword">join</span> pg_class tbl <span class="keyword">on</span> tbl.oid <span class="operator">=</span> ad.adrelid </span><br><span class="line">  <span class="keyword">join</span> pg_namespace ts <span class="keyword">on</span> ts.oid <span class="operator">=</span> tbl.relnamespace </span><br><span class="line"><span class="keyword">where</span> s.relkind <span class="operator">=</span> <span class="string">&#x27;S&#x27;</span></span><br><span class="line"><span class="comment">--  and s.relname = &#x27;sequence_name&#x27;</span></span><br><span class="line">  <span class="keyword">and</span> d.deptype <span class="keyword">in</span> (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;n&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="查询表的schema-owner"><a href="#查询表的schema-owner" class="headerlink" title="查询表的schema,owner"></a>查询表的schema,owner</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> pc.relname <span class="keyword">as</span> table_name,pn.nspname <span class="keyword">as</span> schema_name,pa.rolname <span class="keyword">as</span> owner,pc.relhasindex,pc.relhastriggers</span><br><span class="line">  <span class="keyword">from</span> pg_class pc,</span><br><span class="line">       pg_namespace pn,</span><br><span class="line">   pg_authid pa</span><br><span class="line">  <span class="keyword">where</span> pc.relkind <span class="operator">=</span><span class="string">&#x27;r&#x27;</span></span><br><span class="line">    <span class="keyword">and</span> pc.relnamespace <span class="operator">=</span> pn.oid</span><br><span class="line"><span class="keyword">and</span> pc.relowner <span class="operator">=</span> pa.oid</span><br><span class="line">    <span class="keyword">and</span> pc.relname <span class="operator">=</span> <span class="string">&#x27;table_name&#x27;</span></span><br><span class="line"></span><br><span class="line">可以查到与 pg_tables 类似的结果</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;pg_class 表记录了数据库中几乎所有的关系(relations)：包括表、索引、视图、物化视图、组合类型和TOAST表&lt;/p&gt;
&lt;h5 id=&quot;pg-class&quot;&gt;&lt;a href=&quot;#pg-class&quot; class=&quot;headerlink&quot; title=&quot;pg_cla</summary>
      
    
    
    
    <category term="postgres" scheme="https://sheenzxx.github.io/categories/postgres/"/>
    
    
    <category term="pg_class" scheme="https://sheenzxx.github.io/tags/pg-class/"/>
    
  </entry>
  
  <entry>
    <title>datanode 无法启动报  RECEIVED SIGNAL 15  SIGTERM</title>
    <link href="https://sheenzxx.github.io/2023/03/27/DatanodeErrSignal15/"/>
    <id>https://sheenzxx.github.io/2023/03/27/DatanodeErrSignal15/</id>
    <published>2023-03-27T02:19:04.000Z</published>
    <updated>2023-04-07T06:22:43.886Z</updated>
    
    <content type="html"><![CDATA[<p>今天发现有个节点dead node .于是重启了datanode<br>./hadoop-daemond.sh stop datanode<br>./hadoop-daemond.sh start datanode<br>监控页面 dead node 状态依然没有改变。</p><p>查看日志发现出现如下错误<br>23/03/27 09:45:04 ERROR org.apache.hadoop.hdfs.server.datanode.DataNode: RECEIVED SIGNAL 15: SIGTERM</p><p>在节点上运行<br>hdfs dfsadmin -refreshNodes</p><p>问题解决</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天发现有个节点dead node .于是重启了datanode&lt;br&gt;./hadoop-daemond.sh stop datanode&lt;br&gt;./hadoop-daemond.sh start datanode&lt;br&gt;监控页面 dead node 状态依然没有改变。&lt;/</summary>
      
    
    
    
    <category term="hadoop" scheme="https://sheenzxx.github.io/categories/hadoop/"/>
    
    
    <category term="datanode" scheme="https://sheenzxx.github.io/tags/datanode/"/>
    
  </entry>
  
  <entry>
    <title>confluence 数据库配置要求</title>
    <link href="https://sheenzxx.github.io/2023/03/22/confluenceDbConfig/"/>
    <id>https://sheenzxx.github.io/2023/03/22/confluenceDbConfig/</id>
    <published>2023-03-22T02:36:01.000Z</published>
    <updated>2023-03-22T05:22:07.355Z</updated>
    
    <content type="html"><![CDATA[<p>摘抄自官方文档<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">配置文件</span><br><span class="line"><span class="comment">## 字符集要求</span></span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line">collation-server=utf8mb4_bin</span><br><span class="line"><span class="comment">##存储引擎要求(现在mysql 默认都是这个引擎)</span></span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line"><span class="comment">## 要求允许通讯包体的大小</span></span><br><span class="line">max_allowed_packet=256M</span><br><span class="line"><span class="comment">## redolog 大小</span></span><br><span class="line">innodb_log_file_size=2GB</span><br><span class="line"><span class="comment">## sql_mode 需要去除这个选项。如果存在</span></span><br><span class="line">sql_mode = NO_AUTO_VALUE_ON_ZERO</span><br><span class="line"><span class="comment">## 事务隔离级别</span></span><br><span class="line">transaction-isolation=READ-COMMITTED</span><br><span class="line"><span class="comment">## binlog 格式设置 row</span></span><br><span class="line">binlog_format=row</span><br><span class="line">log_bin_trust_function_creators = 1</span><br><span class="line"><span class="comment">## 5.7 版本optimizer_switch 里面 设置 derived_merge=off 默认on</span></span><br><span class="line">optimizer_switch = derived_merge=off</span><br><span class="line"></span><br><span class="line"><span class="comment">## SQL 命令</span></span><br><span class="line">CREATE DATABASE &lt;database-name&gt; CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;</span><br><span class="line">GRANT ALL PRIVILEGES ON &lt;database-name&gt;.* TO <span class="string">&#x27;&lt;confluenceuser&gt;&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;&lt;password&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">## mysql driver</span></span><br><span class="line"><span class="comment">## mysql 5.7 版本</span></span><br><span class="line"> mysql-connector-java-5.1.xx-bin.jar</span><br><span class="line"><span class="comment">## mysql 8.0 版本</span></span><br><span class="line"> mysql-connector-java-8.0.xx-bin.jar</span><br><span class="line"><span class="comment">## 放在下面的目录</span></span><br><span class="line">  &lt;installation-directory&gt;/confluence/WEB-INF/lib </span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;摘抄自官方文档&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;b</summary>
      
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="confluence" scheme="https://sheenzxx.github.io/tags/confluence/"/>
    
  </entry>
  
  <entry>
    <title>升级hivemeta库</title>
    <link href="https://sheenzxx.github.io/2023/03/14/upgradeHiveMeta/"/>
    <id>https://sheenzxx.github.io/2023/03/14/upgradeHiveMeta/</id>
    <published>2023-03-14T04:28:38.000Z</published>
    <updated>2023-03-15T08:31:49.130Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>公司升级了hive 由 1.2 升级到 3.1,这里涉及到元数据的搬迁过程。元数据信息存储在mysql中</p><h4 id="升级过程"><a href="#升级过程" class="headerlink" title="升级过程"></a>升级过程</h4><ol><li><p>将旧库导出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uxxxx -pxxxx-S /tmp/mysql.sock --routines  --triggers --set-gtid-purged=off --default-character-set=latin1 hadoop &gt;hadoop_hive.1.2.sql</span><br></pre></td></tr></table></figure></li><li><p>将数据导入新的mysql实例中，如果已经是有搭建了3.x 版本的Hive 并联数据库产生了元数据的表，则先删除库。然后导入数据，不然升级脚本会报很多冲突</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uxxx -pxxx hadoop /tmp/mysql.sock &lt; hadoop_hive.1.2.sql</span><br></pre></td></tr></table></figure></li><li>在新库中执行 1.2.0 的表创建脚本(可能该版本是由以前的版本升上来的。部分表缺失，重新建表，对于存在的表则不会再建)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/PRG/hive/scripts/metastore/upgrade/mysql  <span class="comment"># hive 版本升级脚本存放目录</span></span><br><span class="line">mysql -uxxx -pxxx hadoop /tmp/mysql.sock &lt; hive-schema-1.2.0.mysql.sql</span><br></pre></td></tr></table></figure></li><li><p>安装版本脚本进行一个个执行升级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据升级脚本，一个个版本叠加上来，就不会报错</span></span><br><span class="line">mysql -uxxx -pxxxx hadoop -S /tmp/mysql.hadoop.sock &lt; upgrade-1.2.0-to-2.0.0.mysql.sql</span><br><span class="line">mysql -uxxx -pxxxx hadoop -S /tmp/mysql.hadoop.sock &lt; upgrade-2.0.0-to-2.1.0.mysql.sql</span><br><span class="line">mysql -uxxx -pxxxx hadoop -S /tmp/mysql.hadoop.sock &lt; upgrade-2.1.0-to-2.2.0.mysql.sql</span><br><span class="line">mysql -uxxx -pxxxx hadoop -S /tmp/mysql.hadoop.sock &lt; upgrade-2.2.0-to-2.3.0.mysql.sql</span><br><span class="line">mysql -uxxx -pxxxx hadoop -S /tmp/mysql.hadoop.sock &lt; upgrade-2.3.0-to-3.0.0.mysql.sql</span><br><span class="line">mysql -uxxx -pxxxx hadoop -S /tmp/mysql.hadoop.sock &lt; upgrade-3.0.0-to-3.1.0.mysql.sql</span><br></pre></td></tr></table></figure></li><li><p>客户端报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">javax.jdo.JDOException: Exception thrown when executing query : SELECT <span class="string">&#x27;org.apache.hadoop.hive.metastore.model.MDatabase&#x27;</span> AS `NUCLEUS_TYPE`,`A0`.`DESC`,`A0`.`DB_LOCATION_URI`,`A0`.`NAME`,`A0`.`OWNER_NAME`,`A0`.`OWNER_TYPE`,`A0`.`D</span><br><span class="line">B_ID` FROM `DBS` `A0` WHERE `A0`.`NAME` = ?</span><br><span class="line"></span><br><span class="line">检查数据库发现DBS 有2个字段没有。在 hive-schema-3.1.0.mysql.sql 找到对应的 建表语句。将缺失字段添加回去</span><br><span class="line">ALTER TABLE `DBS` ADD `OWNER_NAME` varchar(128);</span><br><span class="line">ALTER TABLE `DBS` ADD `OWNER_TYPE` varchar(10);</span><br><span class="line">alter table DBS change `CTLG_NAME` `CTLG_NAME` varchar(256) NOT NULL DEFAULT <span class="string">&#x27;hive&#x27;</span> after OWNER_TYPE;</span><br><span class="line">问题解决</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;公司升级了hive 由 1.2 升级到 3.1,这里涉及到元数据的搬迁过程。元数据信息存储在mysql中&lt;/p&gt;
&lt;h4 id=&quot;升级过程&quot;</summary>
      
    
    
    
    <category term="hadoop" scheme="https://sheenzxx.github.io/categories/hadoop/"/>
    
    
    <category term="hive" scheme="https://sheenzxx.github.io/tags/hive/"/>
    
  </entry>
  
  <entry>
    <title>docker容器下创建mysql主从集群</title>
    <link href="https://sheenzxx.github.io/2023/03/09/MysqlInDockerReplication/"/>
    <id>https://sheenzxx.github.io/2023/03/09/MysqlInDockerReplication/</id>
    <published>2023-03-09T07:28:41.000Z</published>
    <updated>2023-03-10T08:47:41.908Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h3><p>docker 已安装，mysql 镜像已拉取，这里以mysql/mysql-server:8.0 镜像为例</p><h3 id="创建mysql-主库"><a href="#创建mysql-主库" class="headerlink" title="创建mysql 主库"></a>创建mysql 主库</h3><p>配置文件中必须要有server-id，主从库必须不一样,在my.cnf 指定 </p><p>log-bin = mysql-bin<br>log-bin-index = mysql-bin.index<br>server-id=185<br>gtid-mode=on<br>enforce_gtid_consistency = 1<br>binlog-format=row<br>log_replica_updates = 1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建指定目录。</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/mysql_data/&#123;conf,data,<span class="built_in">log</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 启动主库容器</span></span><br><span class="line">docker run -p 3306:3306 --name mysql8-1 \ <span class="comment">##映射端口 跟给container 取个名字</span></span><br><span class="line">-v /data/mysql8_data/log:/var/log/mysql \ <span class="comment">## -v 使用volumn 的方式挂载相关数据库目录 日志</span></span><br><span class="line">-v /data/mysql8_data:/var/lib/mysql \  <span class="comment">## -v 使用volumn 的方式挂载相关数据库目录 数据目录</span></span><br><span class="line">-v /data/mysql8_data/conf/my.cnf:/etc/my.cnf \ <span class="comment">## -v 使用volumn 的方式挂载相关数据库目录 配置文件</span></span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root123 \  <span class="comment">## -e 环境变量.初始化时设置数据库的root 密码</span></span><br><span class="line">-d mysql/mysql-server:8.0</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看数据库日志是否正常</span></span><br><span class="line">docker logs mysql8-1 2&gt;&amp;1 </span><br></pre></td></tr></table></figure><h3 id="创建mysql-从库"><a href="#创建mysql-从库" class="headerlink" title="创建mysql 从库"></a>创建mysql 从库</h3><p>配置文件中必须要有server-id，主从库必须不一样,在my.cnf 指定<br>port = 3307<br>log-bin = mysql-bin<br>log-bin-index = mysql-bin.index<br>server-id=186<br>gtid-mode=on<br>enforce_gtid_consistency = 1<br>binlog-format=row<br>log_replica_updates = 1<br>read_only<br>relay-log = relay-bin<br>relay_log_recovery = 1<br>replica_skip_errors = off</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建指定目录。</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/mysql_slave_data/&#123;conf,data,<span class="built_in">log</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 启动主库容器</span></span><br><span class="line">docker run -p 3307:3307 --name mysql8-slave \ <span class="comment">##映射端口 跟给container 取个名字</span></span><br><span class="line">-v /data/mysql8_slave_data/log:/var/log/mysql \ <span class="comment">## -v 使用volumn 的方式挂载相关数据库目录 日志</span></span><br><span class="line">-v /data/mysql8_slave_data:/var/lib/mysql \  <span class="comment">## -v 使用volumn 的方式挂载相关数据库目录 数据目录</span></span><br><span class="line">-v /data/mysql8_slave_data/conf/my.cnf:/etc/my.cnf \ <span class="comment">## -v 使用volumn 的方式挂载相关数据库目录 配置文件</span></span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root123 \  <span class="comment">## -e 环境变量.初始化时设置数据库的root 密码</span></span><br><span class="line">-d mysql/mysql-server:8.0</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看数据库日志是否正常</span></span><br><span class="line">docker logs mysql8-slave 2&gt;&amp;1 </span><br></pre></td></tr></table></figure><h3 id="创建复制用户"><a href="#创建复制用户" class="headerlink" title="创建复制用户"></a>创建复制用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mysql8-1 mysql -uroot -proot123 -e <span class="string">&quot;create user repl@&#x27;%&#x27; identified by &#x27;replpass&#x27;;grant select,replication slave to repl@&#x27;%&#x27;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="从库执行复制配置"><a href="#从库执行复制配置" class="headerlink" title="从库执行复制配置"></a>从库执行复制配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mysql8-slave mysql -uroot -proot123 -e <span class="string">&quot;CHANGE REPLICATION SOURCE TO \</span></span><br><span class="line"><span class="string">&gt; SOURCE_HOST=&#x27;192.168.56.15&#x27;,\</span></span><br><span class="line"><span class="string">&gt; SOURCE_PORT=3306,\</span></span><br><span class="line"><span class="string">&gt; SOURCE_USER=&#x27;repl&#x27;,\</span></span><br><span class="line"><span class="string">&gt; SOURCE_PASSWORD=&#x27;replpass&#x27;,\</span></span><br><span class="line"><span class="string">&gt; SOURCE_AUTO_POSITION=1,\</span></span><br><span class="line"><span class="string">&gt; GET_MASTER_PUBLIC_KEY=1;&quot;</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql8-slave mysql -uroot -proot123 -e <span class="string">&quot;start replica;&quot;</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql8-slave mysql -uroot -proot123 -e <span class="string">&quot;show replicat status\G&quot;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">             Replica_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Source_Host: 192.168.56.15</span><br><span class="line">                  Source_User: repl</span><br><span class="line">                  Source_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Source_Log_File: mysql-bin.000007</span><br><span class="line">          Read_Source_Log_Pos: 508</span><br><span class="line">               Relay_Log_File: relay-bin.000007</span><br><span class="line">                Relay_Log_Pos: 460</span><br><span class="line">        Relay_Source_Log_File: mysql-bin.000007</span><br><span class="line">           Replica_IO_Running: Yes</span><br><span class="line">          Replica_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Source_Log_Pos: 508</span><br><span class="line">              Relay_Log_Space: 1231</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Source_SSL_Allowed: No</span><br><span class="line">           Source_SSL_CA_File: </span><br><span class="line">           Source_SSL_CA_Path: </span><br><span class="line">              Source_SSL_Cert: </span><br><span class="line">            Source_SSL_Cipher: </span><br><span class="line">               Source_SSL_Key: </span><br><span class="line">        Seconds_Behind_Source: 0</span><br><span class="line">Source_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Source_Server_Id: 185</span><br><span class="line">                  Source_UUID: fca3aab0-bd94-11ed-9a7c-0242ac110002</span><br><span class="line">             Source_Info_File: mysql.slave_master_info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">    Replica_SQL_Running_State: Replica has <span class="built_in">read</span> all relay <span class="built_in">log</span>; waiting <span class="keyword">for</span> more updates</span><br><span class="line">           Source_Retry_Count: 86400</span><br><span class="line">                  Source_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: </span><br><span class="line">               Source_SSL_Crl: </span><br><span class="line">           Source_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: fca3aab0-bd94-11ed-9a7c-0242ac110002:1-8</span><br><span class="line">            Executed_Gtid_Set: 8239dff7-bf0e-11ed-9ce5-0242ac110002:1-3,</span><br><span class="line">fca3aab0-bd94-11ed-9a7c-0242ac110002:1-8</span><br><span class="line">                Auto_Position: 1</span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Source_TLS_Version: </span><br><span class="line">       Source_public_key_path: </span><br><span class="line">        Get_Source_public_key: 1</span><br><span class="line">            Network_Namespace: </span><br></pre></td></tr></table></figure><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>mysql8 默认是采用 caching_sha2_password 的密码加密方式，如果我们在 CHANGE REPLICATION SOURCE时<br>没有指定 GET_MASTER_PUBLIC_KEY=1。则在 start replica 的时候 会出现错误:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">error connecting to master <span class="string">&#x27;repl@192.168.56.15:3306&#x27;</span> - retry-time: 60 retries: 6 message:</span><br><span class="line">Authentication plugin <span class="string">&#x27;caching_sha2_password&#x27;</span> reported error: </span><br><span class="line">Authentication requires secure connection</span><br></pre></td></tr></table></figure><br>或者重置复制账号的密码为 mysql_native_password 的加密方式<br>alter user repl@’%’ identified with mysql_native_password by ‘replpass’;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;准备条件&quot;&gt;&lt;a href=&quot;#准备条件&quot; class=&quot;headerlink&quot; title=&quot;准备条件&quot;&gt;&lt;/a&gt;准备条件&lt;/h3&gt;&lt;p&gt;docker 已安装，mysql 镜像已拉取，这里以mysql/mysql-server:8.0 镜像为例&lt;/p&gt;
&lt;h3 </summary>
      
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/tags/mysql/"/>
    
    <category term="docker" scheme="https://sheenzxx.github.io/tags/docker/"/>
    
    <category term="replication" scheme="https://sheenzxx.github.io/tags/replication/"/>
    
  </entry>
  
  <entry>
    <title>oracle 12c 设置开机启动</title>
    <link href="https://sheenzxx.github.io/2023/03/09/o12cstartup/"/>
    <id>https://sheenzxx.github.io/2023/03/09/o12cstartup/</id>
    <published>2023-03-09T07:25:51.000Z</published>
    <updated>2023-03-09T07:27:18.650Z</updated>
    
    <content type="html"><![CDATA[<p>1.编辑 /etc/oratab  默认值是N 修改为Y<br>orcl:/data/oracle/product/12.2.0/db_1:Y</p><p>2.编辑 vi $ORACLE_HOME/bin/dbstart<br>将ORACLE_HOME_LISTNER=$1修改成 ORACLE_HOME_LISTNER=$ORACLE_HOME</p><p>3.在 /etc/rc.d/rc.local 添加 。这个启动包含 listener 启动<br>su - oracle -lc /data/oracle/product/12.2.0/db_1/bin/dbstart</p><p>4.启动时 只是启动实例。需要再将PDB 打开，可以通过trigger 设置自动打开所有pdb</p><p>在sqlplus / as sysdba</p><p>create trigger open_all_pdbs<br>AFTER STARTUP<br>ON DATABASE<br>BEGIN<br>  EXECUTE IMMEDIATE ‘alter pluggable database all open’;<br>end open_all_pdbs;<br>/<br>执行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.编辑 /etc/oratab  默认值是N 修改为Y&lt;br&gt;orcl:/data/oracle/product/12.2.0/db_1:Y&lt;/p&gt;
&lt;p&gt;2.编辑 vi $ORACLE_HOME/bin/dbstart&lt;br&gt;将ORACLE_HOME_LISTNER=$</summary>
      
    
    
    
    <category term="oracle" scheme="https://sheenzxx.github.io/categories/oracle/"/>
    
    
    <category term="startup" scheme="https://sheenzxx.github.io/tags/startup/"/>
    
  </entry>
  
  <entry>
    <title>docker 安装mysql</title>
    <link href="https://sheenzxx.github.io/2023/03/08/mysqlindocker/"/>
    <id>https://sheenzxx.github.io/2023/03/08/mysqlindocker/</id>
    <published>2023-03-08T10:04:29.000Z</published>
    <updated>2023-03-10T08:50:37.938Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载安装docker"><a href="#下载安装docker" class="headerlink" title="下载安装docker"></a>下载安装docker</h3><p>执行如下命令。等待安装完成<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure></p><h3 id="拉取mysql-镜像"><a href="#拉取mysql-镜像" class="headerlink" title="拉取mysql 镜像"></a>拉取mysql 镜像</h3><p>看mysql 官方文档使用的是 mysql/mysql-server:tag 的版本。那我们就下载这个版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql/mysql-server:8.0</span><br><span class="line"></span><br><span class="line">docker images</span><br><span class="line">[root@localhost mysql8_data]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY           TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">mysql                latest    4f06b49211c0   12 days ago   530MB</span><br><span class="line">mysql/mysql-server   8.0       1d9c2219ff69   7 weeks ago   496MB</span><br></pre></td></tr></table></figure></p><h3 id="启动镜像并进行相关检查"><a href="#启动镜像并进行相关检查" class="headerlink" title="启动镜像并进行相关检查"></a>启动镜像并进行相关检查</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mysql8-1 --restart on-failure -d mysql/mysql-server:8.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看正在运行的container</span></span><br><span class="line">docker ps</span><br><span class="line">[root@localhost mysql8_data]<span class="comment"># docker ps </span></span><br><span class="line">CONTAINER ID   IMAGE                    COMMAND                  CREATED          STATUS                    PORTS                                                        NAMES</span><br><span class="line">ac42ef0a7b2c   mysql/mysql-server:8.0   <span class="string">&quot;/entrypoint.sh mysq…&quot;</span>   33 minutes ago   Up 16 minutes (healthy)   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060-33061/tcp   mysql8-1</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看数据库的日志</span></span><br><span class="line">docker logs mysql8-1 2&gt;&amp;1 | grep GENERATED</span><br><span class="line">GENERATED ROOT PASSWORD: Axegh3kAJyDLaRuBemecis&amp;EShOs</span><br><span class="line"></span><br><span class="line"><span class="comment">#登录mysql</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql8-1 mysql -uroot -p </span><br><span class="line"><span class="comment">#修改密码</span></span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure><p>到此。一个简单的mysql 实例就被挂起来了<br>将mysql 的配置文件复制出来看看<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> mysql8-1:/etc/my.cnf ./</span><br><span class="line">里面只有几个很简单的参数 </span><br><span class="line"></span><br><span class="line"><span class="comment">#登录docker container 查看mysql 的文件</span></span><br><span class="line">docker <span class="built_in">exec</span> it mysql8-1 bash</span><br><span class="line">bash-4.4<span class="comment"># cd /var/lib/mysql </span></span><br><span class="line">bash-4.4<span class="comment"># ls</span></span><br><span class="line"><span class="string">&#x27;#ib_16384_0.dblwr&#x27;</span>   auto.cnf          dbindocker       mysql-bin.000001   mysql.ibd            public_key.pem    undo_002</span><br><span class="line"><span class="string">&#x27;#ib_16384_1.dblwr&#x27;</span>   ca-key.pem        ib_buffer_pool   mysql-bin.000002   mysql.sock           server-cert.pem</span><br><span class="line"><span class="string">&#x27;#innodb_redo&#x27;</span>        ca.pem            ibdata1          mysql-bin.000003   mysql.sock.lock      server-key.pem</span><br><span class="line"><span class="string">&#x27;#innodb_temp&#x27;</span>        client-cert.pem   ibtmp1           mysql-bin.000004   performance_schema   sys</span><br><span class="line"> ac42ef0a7b2c.pid     client-key.pem    mysql            mysql-bin.index    private_key.pem      undo_001</span><br></pre></td></tr></table></figure><br>到目前为止。一个mysql实例就成功跑起来了。不过，数据什么的都在container 里面。这在生产上绝对是不符合的</p><h3 id="将数据文件映射到宿主机上"><a href="#将数据文件映射到宿主机上" class="headerlink" title="将数据文件映射到宿主机上"></a>将数据文件映射到宿主机上</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#停掉并删除刚才启动的container</span></span><br><span class="line">docker stop mysql8-1</span><br><span class="line">docker <span class="built_in">rm</span> mysql8-1</span><br><span class="line"></span><br><span class="line"><span class="comment">#在本地建好路径</span></span><br><span class="line"><span class="built_in">mkdir</span> /data/mysql8_data</span><br><span class="line"><span class="built_in">mkdir</span> /data/mysql8_data/&#123;<span class="built_in">log</span>,conf,data&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑一个my.cnf 放 /data/mysql8_data/conf/my.cnf</span></span><br><span class="line"><span class="comment"># 不能让mysql8_data 成为数据库目录。初始化时会检查到存在文件。会初始化失败</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重新拉起一个container</span></span><br><span class="line">docker run -p 3306:3306 --name mysql8-1 \ <span class="comment">##映射端口 跟给container 取个名字</span></span><br><span class="line">-v /data/mysql8_data/log:/var/log/mysql \ <span class="comment">## -v 使用volumn 的方式挂载相关数据库目录 日志</span></span><br><span class="line">-v /data/mysql8_data:/var/lib/mysql \  <span class="comment">## -v 使用volumn 的方式挂载相关数据库目录 数据目录</span></span><br><span class="line">-v /data/mysql8_data/conf/my.cnf:/etc/my.cnf \ <span class="comment">## -v 使用volumn 的方式挂载相关数据库目录 配置文件</span></span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root123 \  <span class="comment">## -e 环境变量.初始化时设置数据库的root 密码</span></span><br><span class="line">-d mysql/mysql-server:8.0   <span class="comment">## 指定镜像</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看日志。可以看到初始化的日志</span></span><br><span class="line">docker logs mysql8-1 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器进程</span></span><br><span class="line">docker ps</span><br><span class="line">CONTAINER ID   IMAGE                    COMMAND                  CREATED          STATUS                    PORTS                                                        NAMES</span><br><span class="line">ac42ef0a7b2c   mysql/mysql-server:8.0   <span class="string">&quot;/entrypoint.sh mysq…&quot;</span>   33 minutes ago   Up 16 minutes (healthy)   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060-33061/tcp   mysql8-1</span><br><span class="line"></span><br><span class="line"><span class="comment">#登录mysql</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql8-1 mysql -uroot -proot123</span><br><span class="line"></span><br><span class="line">root 用户只适用于本地登录</span><br><span class="line"></span><br><span class="line">可以进入数据库建立一个远程登录用户</span><br><span class="line"></span><br><span class="line"><span class="comment">#看回刚才挂载的目录，里面已经产生各种数据文件</span></span><br><span class="line"><span class="built_in">cd</span> /data/mysql8_data/data </span><br><span class="line"></span><br><span class="line"><span class="comment">#使用dbeaver 远程登录</span></span><br><span class="line">报错:Public Key Retrieval is not allowed</span><br><span class="line">需修改连接配置 --》 驱动属性 --》 allowPublicKeyRetrieval 更改为<span class="literal">true</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次登录成功</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;下载安装docker&quot;&gt;&lt;a href=&quot;#下载安装docker&quot; class=&quot;headerlink&quot; title=&quot;下载安装docker&quot;&gt;&lt;/a&gt;下载安装docker&lt;/h3&gt;&lt;p&gt;执行如下命令。等待安装完成&lt;br&gt;&lt;figure class=&quot;highli</summary>
      
    
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/categories/mysql/"/>
    
    
    <category term="mysql" scheme="https://sheenzxx.github.io/tags/mysql/"/>
    
    <category term="docker" scheme="https://sheenzxx.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>hadoop3.x 纠删码策略</title>
    <link href="https://sheenzxx.github.io/2023/02/28/hadoop3EC/"/>
    <id>https://sheenzxx.github.io/2023/02/28/hadoop3EC/</id>
    <published>2023-02-28T10:26:32.000Z</published>
    <updated>2023-03-01T02:12:33.998Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>纠删码技术（Erasure coding）简称EC，是一种编码容错技术。最早用于通信行业，数据传输中的数据恢复。它通过对数据进行分块，然后计算出校验数据，使得各个部分的数据产生关联性。当一部分数据块丢失时，可以通过剩余的数据块和校验块计算出丢失的数据块。相比以前的冗余副本策略，它可以提高50%以上的存储利用率，并且保证数据的可靠性。</p><h3 id="纠删码内置策略"><a href="#纠删码内置策略" class="headerlink" title="纠删码内置策略"></a>纠删码内置策略</h3><p>1.RS-10-4-1024k：使用RS编码，每10个数据单元（cell），生成4个校验单元，共14个单元，也就是说：这14个单元中，只要有任意的10个单元存在（不管是数据单元还是校验单元，只要总数=10），就可以得到原始数据。每个单元的大小是1024k=1024*1024=1048576B。</p><p>2.RS-3-2-1024k：使用RS编码，每3个数据单元，生成2个校验单元，共5个单元，也就是说：这5个单元中，只要有任意的3个单元存在（不管是数据单元还是校验单元，只要总数=3），就可以得到原始数据。每个单元的大小是1024k=1024*1024=1048576B。</p><p>3.RS-6-3-1024k：使用RS编码，每6个数据单元，生成3个校验单元，共9个单元，也就是说：这9个单元中，只要有任意的6个单元存在（不管是数据单元还是校验单元，只要总数=6），就可以得到原始数据。每个单元的大小是1024k=1024*1024=1048576B。</p><p>4.RS-LEGACY-6-3-1024k：策略和上面的RS-6-3-1024k一样，只是编码的算法用的是rs-legacy，应该是之前遗留的rs算法。</p><p>5.XOR-2-1-1024k：使用XOR编码（速度比RS编码快），每2个数据单元，生成1个校验单元，共3个单元，也就是说：这3个单元中，只要有任意的2个单元存在（不管是数据单元还是校验单元，只要总数=2），就可以得到原始数据。每个单元的大小是1024k=1024*1024=1048576B。</p><p>以RS-6-3-1024k为例，6个数据单元+3个校验单元，可以容忍任意的3个单元丢失，冗余的数据是50%。而采用副本方式，3个副本，冗余200%，却还不能容忍任意的3个单元丢失。因此，RS编码在相同冗余度的情况下，会大大提升数据的可用性，而在相同可用性的情况下，会大大节省冗余空间。</p><h3 id="如何在hadoop-3-x-启动-EC-策略"><a href="#如何在hadoop-3-x-启动-EC-策略" class="headerlink" title="如何在hadoop 3.x 启动 EC 策略"></a>如何在hadoop 3.x 启动 EC 策略</h3><p>1.hadoop 3.x 默认 EC 策略为 RS-6-3-1024k，根据上面内置策略的描述，至少要满足相应的节点数才行<br>2.RS 策略 依赖于 Intel ISA-L 包。开启前需要安装Intel ISA-L 包<br>3.安装 Intel ISA-L 包，相关依赖 nasm 2.13<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">nasm 下载地址：https://www.nasm.us/pub/nasm/releasebuilds/2.13/linux/</span><br><span class="line">rpm -ivh nasm-2.13-0.fc24.x86_64.rpm</span><br><span class="line"></span><br><span class="line">isa-l 下载地址：https://github.com/intel/isa-l</span><br><span class="line">编译安装</span><br><span class="line">tar -xzvf  isa-l-2.30.0.tar.gz</span><br><span class="line">cd  isa-l-2.30.0</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure --prefix=/usr --libdir=/usr/lib64</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><br>4.设置EC策略<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -mkdir /ectest</span><br><span class="line">hdfs ec -setPolicy -path hdfs:///ectest (将设置默认策略)</span><br><span class="line">hdfs ec -setPolicy -policy RS-3-2-1024k -path hdfs:///ectest (指定策略)</span><br></pre></td></tr></table></figure></p><p>5.更改默认策略<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 纠删码策略 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.ec.system.default.policy<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>RS-3-2-1024k<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>The default erasure coding policy name will be used</span><br><span class="line">    on the path if no policy name is passed.</span><br><span class="line">    5 register EC policy: RS-3-2-1024k、RS-6-3-1024k、RS-10-4-1024k、RS-LEGACY-6-3-1024k、XOR-2-1-1024k</span><br><span class="line">  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="不适用的场景"><a href="#不适用的场景" class="headerlink" title="不适用的场景"></a>不适用的场景</h3><p>1.在EC 策略上的磁盘 做 append() 和 truncate() 操作将抛 IOException<br>2.如果文件存储编码混合了多种EC策略 或者 使用了多副本.concat() 操作将抛 IOException<br>3.setReplication() 操作在EC 策略编码的文件上无效<br>4.hflush() 和 hsync() 在 DFSStripedOutputStream 上无效，所以不能在 EC编码的文件 通过调用hflush()，hsync() 使数据一致性。</p><p>适用于划分独立路径，存储不需要修改的数据或者冷备份数据</p><h3 id="设置EC-策略的相关命令"><a href="#设置EC-策略的相关命令" class="headerlink" title="设置EC 策略的相关命令"></a>设置EC 策略的相关命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hdfs ec [generic options]</span><br><span class="line">     [-setPolicy -path &lt;path&gt; [-policy &lt;policyName&gt;] [-replicate]]  #为指定的路径设置指定的ec 策略</span><br><span class="line">     [-getPolicy -path &lt;path&gt;]  #获取指定路径的ec 策略</span><br><span class="line">     [-unsetPolicy -path &lt;path&gt;] #取消指定路径的上一次 setPolicy ec 策略</span><br><span class="line">     [-listPolicies]   #获取hdfs 上登记的所有策略（包括 启用。禁用。删除的策略)</span><br><span class="line">     [-addPolicies -policyFile &lt;file&gt;] # 通过文件的方式，添加用户指定的EC策略集</span><br><span class="line">     [-listCodecs]   #列出系统支持的EC编码策略列表</span><br><span class="line">     [-enablePolicy -policy &lt;policyName&gt;]   #启用某个策略</span><br><span class="line">     [-disablePolicy -policy &lt;policyName&gt;]  #禁用某个策略</span><br><span class="line">     [-removePolicy -policy &lt;policyName&gt;]   #删除某个策略</span><br><span class="line">     [-verifyClusterSetup -policy &lt;policyName&gt;...&lt;policyName&gt;]  #校验集群设置是否满足所有已经启用的EC 策略</span><br><span class="line">     [-help [cmd ...]]</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;纠删码技术（Erasure coding）简称EC，是一种编码容错技术。最早用于通信行业，数据传输中的数据恢复。它通过对数据进行分块，然后计</summary>
      
    
    
    
    <category term="hadoop" scheme="https://sheenzxx.github.io/categories/hadoop/"/>
    
    
    <category term="ec" scheme="https://sheenzxx.github.io/tags/ec/"/>
    
  </entry>
  
  <entry>
    <title>搭建clichouse 集群</title>
    <link href="https://sheenzxx.github.io/2023/01/29/buildClickHouseCluster/"/>
    <id>https://sheenzxx.github.io/2023/01/29/buildClickHouseCluster/</id>
    <published>2023-01-29T06:46:22.000Z</published>
    <updated>2023-01-29T07:37:57.910Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一-规划："><a href="#一-规划：" class="headerlink" title="一 规划："></a>一 规划：</h4><p>本次搭建采用3个服务器搭建一个 3分片2副本的clickhouse 集群。命名规则中。以S 代表分片。R代表复制集。集群架构如下图<br><img src="images/clickhouse.png" alt="cka"></p><p>172.28.160.2 上面存放2个实例分别为 S1R1(分片1复制集1)实例， S2R2(分片2复制集2)实例<br>172.28.160.3 上面存放2个实例分别为 S2R1(分片2复制集1)实例， S3R2(分片3复制集2)实例<br>172.28.160.4 上面存放2个实例分别为 S3R1(分片3复制集1)实例， S3R2(分片1复制集2)实例</p><p>以确保在宕机任何一个节点。都不会影响集群的正常使用<br>同时在三个节点上启动clickhouse-keeper ，用于分布式集群通讯。（旧版本中用zookeeper）</p><p>主机实例分布<br><img src="images/c1t1.png" alt="c1t1"><br><img src="images/c2t2.png" alt="c2t2"><br><img src="images/c3t3.png" alt="c3t3"></p><h4 id="二-安装"><a href="#二-安装" class="headerlink" title="二 安装"></a>二 安装</h4><h5 id="1-下载-clickhouse-稳定版本地址-：https-packages-clickhouse-com-rpm-stable"><a href="#1-下载-clickhouse-稳定版本地址-：https-packages-clickhouse-com-rpm-stable" class="headerlink" title="1. 下载 clickhouse 稳定版本地址 ：https://packages.clickhouse.com/rpm/stable/"></a>1. 下载 clickhouse 稳定版本地址 ：<a href="https://packages.clickhouse.com/rpm/stable/">https://packages.clickhouse.com/rpm/stable/</a></h5><p>本次安装采用RPM 安装，使用版本 22.12.3.5<br>需下载的rpm 包有<br>clickhouse-common-static-22.12.3.5.x86_64.rpm<br>clickhouse-server-22.12.3.5.x86_64.rpm<br>clickhouse-client-22.12.3.5.x86_64.rpm</p><h5 id="2-安装前检测以及优化系统项配置"><a href="#2-安装前检测以及优化系统项配置" class="headerlink" title="2. 安装前检测以及优化系统项配置"></a>2. 安装前检测以及优化系统项配置</h5><p>检查当前CPU是否支持SSE 4.2的命令<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -q sse4_2 /proc/cpuinfo &amp;&amp; echo &quot;SSE 4.2 supported&quot; || echo &quot;SSE 4.2 not supported&quot;</span><br></pre></td></tr></table></figure><br>设置内存分配策略为：0<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 0 |tee /proc/sys/vm/overcommit_memory</span><br></pre></td></tr></table></figure><br>禁用透明大页<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;never&quot; |tee /sys/kernel/mm/transparent_hugepage/enabled</span><br></pre></td></tr></table></figure><br>/etc/hosts 添加集群主机名IP地址映射<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">172.28.160.2 ct-bigdata-clickhouse-160-2</span><br><span class="line">172.28.160.3 ct-bigdata-clickhouse-160-3</span><br><span class="line">172.28.160.4 ct-bigdata-clickhouse-160-4</span><br></pre></td></tr></table></figure></p><h5 id="3-按顺序安装RPM-包"><a href="#3-按顺序安装RPM-包" class="headerlink" title="3. 按顺序安装RPM 包"></a>3. 按顺序安装RPM 包</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">[root@ct-bigdata-clickhouse-160-2 clickhouseSoft]# rpm -ivh clickhouse-common-static-22.12.3.5.x86_64.rpm</span><br><span class="line">Preparing... ################################# [100%]</span><br><span class="line">Updating / installing...</span><br><span class="line">      1:clickhouse-common-static-0:22.12.################################# [100%]</span><br><span class="line"></span><br><span class="line">安装clickhouse-server 中间提升需要设置default 密码。输入设置即可。会在 /etc/clickhouse-server/users.d/default-password.xml 保存这个密码     </span><br><span class="line"></span><br><span class="line">[root@ct-bigdata-clickhouse-160-2 clickhouseSoft]# rpm -ivh clickhouse-server-22.12.3.5.x86_64.rpm</span><br><span class="line">Preparing... ################################# [100%]</span><br><span class="line">Updating / installing...</span><br><span class="line">1:clickhouse-server-0:22.12.3.5-1 ################################# [100%]</span><br><span class="line">ClickHouse binary is already located at /usr/bin/clickhouse</span><br><span class="line">Symlink /usr/bin/clickhouse-server already exists but it points to /clickhouse. Will replace the old symlink to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-server to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-client to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-local to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-benchmark to /usr/bin/clickhouse.</span><br><span class="line">Symlink /usr/bin/clickhouse-copier already exists but it points to /clickhouse. Will replace the old symlink to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-copier to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-obfuscator to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-git-import to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-compressor to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-format to /usr/bin/clickhouse.</span><br><span class="line">Symlink /usr/bin/clickhouse-extract-from-config already exists but it points to /clickhouse. Will replace the old symlink to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-extract-from-config to /usr/bin/clickhouse.</span><br><span class="line">Symlink /usr/bin/clickhouse-keeper already exists but it points to /clickhouse. Will replace the old symlink to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-keeper to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-keeper-converter to /usr/bin/clickhouse.</span><br><span class="line">Creating symlink /usr/bin/clickhouse-disks to /usr/bin/clickhouse.</span><br><span class="line">Creating clickhouse group if it does not exist.</span><br><span class="line">groupadd -r clickhouse</span><br><span class="line">Creating clickhouse user if it does not exist.</span><br><span class="line">useradd -r --shell /bin/false --home-dir /nonexistent -g clickhouse clickhouse</span><br><span class="line">Will set ulimits for clickhouse user in /etc/security/limits.d/clickhouse.conf.</span><br><span class="line">Creating config directory /etc/clickhouse-server/config.d that is used for tweaks of main server configuration.</span><br><span class="line">Creating config directory /etc/clickhouse-server/users.d that is used for tweaks of users configuration.</span><br><span class="line">Config file /etc/clickhouse-server/config.xml already exists, will keep it and extract path info from it.</span><br><span class="line">/etc/clickhouse-server/config.xml has /var/lib/clickhouse/ as data path.</span><br><span class="line">/etc/clickhouse-server/config.xml has /var/log/clickhouse-server/ as log path.</span><br><span class="line">Users config file /etc/clickhouse-server/users.xml already exists, will keep it and extract users info from it.</span><br><span class="line">Creating log directory /var/log/clickhouse-server/.</span><br><span class="line">Creating data directory /var/lib/clickhouse/.</span><br><span class="line">Creating pid directory /var/run/clickhouse-server.</span><br><span class="line">chown -R clickhouse:clickhouse &#x27;/var/log/clickhouse-server/&#x27;</span><br><span class="line">chown -R clickhouse:clickhouse &#x27;/var/run/clickhouse-server&#x27;</span><br><span class="line">chown clickhouse:clickhouse &#x27;/var/lib/clickhouse/&#x27;</span><br><span class="line">groupadd -r clickhouse-bridge</span><br><span class="line">useradd -r --shell /bin/false --home-dir /nonexistent -g clickhouse-bridge clickhouse-bridge</span><br><span class="line">chown -R clickhouse-bridge:clickhouse-bridge &#x27;/usr/bin/clickhouse-odbc-bridge&#x27;</span><br><span class="line">chown -R clickhouse-bridge:clickhouse-bridge &#x27;/usr/bin/clickhouse-library-bridge&#x27;</span><br><span class="line">Enter password for default user:</span><br><span class="line">Password for default user is saved in file /etc/clickhouse-server/users.d/default-password.xml.</span><br><span class="line">Setting capabilities for clickhouse binary. This is optional.</span><br><span class="line">Cannot set &#x27;net_admin&#x27; or &#x27;ipc_lock&#x27; or &#x27;sys_nice&#x27; or &#x27;net_bind_service&#x27; capability for clickhouse binary. This is optional. Taskstats accounting will be disabled. To enable taskstats accounting you may add the required capability later manually.</span><br><span class="line">chown -R clickhouse:clickhouse &#x27;/etc/clickhouse-server&#x27;</span><br><span class="line"></span><br><span class="line">ClickHouse has been successfully installed.</span><br><span class="line"></span><br><span class="line">Start clickhouse-server with:</span><br><span class="line">sudo clickhouse start</span><br><span class="line"></span><br><span class="line">Start clickhouse-client with:</span><br><span class="line">clickhouse-client --password</span><br><span class="line"></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/clickhouse-server.service to /usr/lib/systemd/system/clickhouse-server.service.</span><br><span class="line"></span><br><span class="line">[root@ct-bigdata-clickhouse-160-2 clickhouseSoft]# rpm -ivh clickhouse-client-22.12.3.5.x86_64.rpm</span><br><span class="line">Preparing... ################################# [100%]</span><br><span class="line">Updating / installing...</span><br><span class="line">1:clickhouse-client-0:22.12.3.5-1 ################################# [100%]</span><br></pre></td></tr></table></figure><p>安装完这3个rpm 包同时也包含clickhouse-keeper 不需要额外安装,以上步骤均在各个节点上执行</p><h5 id="4-设置目录"><a href="#4-设置目录" class="headerlink" title="4. 设置目录"></a>4. 设置目录</h5><p>在 172.28.160.2 节点上<br>设置实例存储目录<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data1/clickhouse/s1r1</span><br><span class="line">mkdir -p /data2/clickhouse/s2r2</span><br><span class="line">chown -R clickhouse:clickhouse /data1/clickhouse</span><br><span class="line">chown -R clickhouse:clickhouse /data2/clickhouse</span><br><span class="line">cd /var/lib/clickhouse/</span><br><span class="line">ln -s /data1/clickhouse/s1r1 s1r1</span><br><span class="line">ln -s /data2/clickhouse/s2r2 s2r2</span><br></pre></td></tr></table></figure><br>设置各个实例日志目录<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/log/clickhouse-server/&#123;s1r1,s2r2&#125;</span><br><span class="line">chown -R clickhouse:clickhouse /var/log/clickhouse-server</span><br></pre></td></tr></table></figure><br>设置clickhouse-keeper 存储目录<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/lib/clickhouse/keeper/coordination</span><br><span class="line">mkdir -p /var/log/clickhouse-keeper</span><br><span class="line">chown -R clickhouse:clickhouse /var/lib/clickhouse/keeper</span><br><span class="line">chown -R clickhouse:clickhouse /var/log/clickhouse-keeper</span><br></pre></td></tr></table></figure><br>在172.28.160.3 节点上<br>设置实例存储目录<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data1/clickhouse/s2r1</span><br><span class="line">mkdir -p /data2/clickhouse/s3r2</span><br><span class="line">chown -R clickhouse:clickhouse /data1/clickhouse</span><br><span class="line">chown -R clickhouse:clickhouse /data2/clickhouse</span><br><span class="line">ln -s /data1/clickhouse/s2r1 s2r1</span><br><span class="line">ln -s /data2/clickhouse/s3r2 s3r2</span><br></pre></td></tr></table></figure><br>设置各个实例日志目录<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/log/clickhouse-server/&#123;s2r1,s3r2&#125;</span><br><span class="line">chown -R clickhouse:clickhouse /var/log/clickhouse-server</span><br></pre></td></tr></table></figure><br>设置clickhouse-keeper 存储目录<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/lib/clickhouse/keeper/coordination</span><br><span class="line">mkdir -p /var/log/clickhouse-keeper</span><br><span class="line">chown -R clickhouse:clickhouse /var/lib/clickhouse/keeper</span><br><span class="line">chown -R clickhouse:clickhouse /var/log/clickhouse-keeper</span><br></pre></td></tr></table></figure><br>在172.28.160.4 节点上<br>设置实例存储目录<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data1/clickhouse/s3r1</span><br><span class="line">mkdir -p /data2/clickhouse/s1r2</span><br><span class="line">chown -R clickhouse:clickhouse /data1/clickhouse</span><br><span class="line">chown -R clickhouse:clickhouse /data2/clickhouse</span><br><span class="line">ln -s /data1/clickhouse/s3r1 s3r1</span><br><span class="line">ln -s /data2/clickhouse/s1r2 s1r2</span><br></pre></td></tr></table></figure><br>设置各个实例日志目录<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/log/clickhouse-server/&#123;s3r1,s1r2&#125;</span><br><span class="line">chown -R clickhouse:clickhouse /var/log/clickhouse-server</span><br></pre></td></tr></table></figure><br>设置clickhouse-keeper 存储目录<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/lib/clickhouse/keeper/coordination</span><br><span class="line">mkdir -p /var/log/clickhouse-keeper</span><br><span class="line">chown -R clickhouse:clickhouse /var/lib/clickhouse/keeper</span><br><span class="line">chown -R clickhouse:clickhouse /var/log/clickhouse-keeper</span><br></pre></td></tr></table></figure></p><h5 id="5-设置配置文件"><a href="#5-设置配置文件" class="headerlink" title="5. 设置配置文件"></a>5. 设置配置文件</h5><p>在172.28.160.2 上<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/clickhouse-server/</span><br><span class="line">cp config.xml config_s1r1.xml </span><br></pre></td></tr></table></figure><br>在config_s1r1.xml  中 将以下参数替换成如下参数,将路径指向我们定义好的路径</p><p>日志部分 设置waring 级别，并将错误日志，日志指向 s1r1<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">level</span>&gt;</span>warning<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">log</span>&gt;</span>/var/log/clickhouse-server/s1r1/clickhouse-server.log<span class="tag">&lt;/<span class="name">log</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">errorlog</span>&gt;</span>/var/log/clickhouse-server/s1r1/clickhouse-server.err.log<span class="tag">&lt;/<span class="name">errorlog</span>&gt;</span></span><br></pre></td></tr></table></figure><br>设置数据文件存放路径<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">path</span>&gt;</span>/var/lib/clickhouse/s1r1<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tmp_path</span>&gt;</span>/var/lib/clickhouse/s1r1/tmp/<span class="tag">&lt;/<span class="name">tmp_path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user_files_path</span>&gt;</span>/var/lib/clickhouse/s1r1/user_files/<span class="tag">&lt;/<span class="name">user_files_path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user_directories</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">local_directory</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">path</span>&gt;</span>/var/lib/clickhouse/s1r1/access/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">local_directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user_directories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 宏定义，表示分片1 副本 1 用于分布式表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">macros</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">shard</span>&gt;</span>01<span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">replica</span>&gt;</span>01-1<span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">macros</span>&gt;</span></span><br></pre></td></tr></table></figure><br>设置集群信息，在remote_servers 表签下，将原有的信息删除，仅保留 <remote_servers></remote_servers>,并添加信息如下</p><p>设置一个3分片2副本集群 <three_shards_tow_replicated> 表示集群名称  <shard> </shard> 表示分片，<shard> 中的 <replica> 表示 分片中的的副本信息<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">remote_servers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         <span class="tag">&lt;<span class="name">three_shards_tow_replicated</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">shard</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">internal_replication</span>&gt;</span>true<span class="tag">&lt;/<span class="name">internal_replication</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                                      <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.2<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                      <span class="tag">&lt;<span class="name">port</span>&gt;</span>9000<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                      <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                                      <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                                     <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.4<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                     <span class="tag">&lt;<span class="name">port</span>&gt;</span>9001<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                     <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                                     <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shard</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">internal_replication</span>&gt;</span>true<span class="tag">&lt;/<span class="name">internal_replication</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                                  <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.3<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                  <span class="tag">&lt;<span class="name">port</span>&gt;</span>9000<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                  <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                                  <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                                 <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.2<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                 <span class="tag">&lt;<span class="name">port</span>&gt;</span>9001<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                 <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                                 <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">shard</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">internal_replication</span>&gt;</span>true<span class="tag">&lt;/<span class="name">internal_replication</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                              <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.4<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                              <span class="tag">&lt;<span class="name">port</span>&gt;</span>9000<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                              <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                              <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.3<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">port</span>&gt;</span>9001<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">three_shards_tow_replicated</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">remote_servers</span>&gt;</span></span><br></pre></td></tr></table></figure><br>打开zookeeper 配置信息<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">zookeeper</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">node</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.2<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">port</span>&gt;</span>2181<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">node</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.3<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">port</span>&gt;</span>2181<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">node</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.4<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">port</span>&gt;</span>2181<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">zookeeper</span>&gt;</span></span><br></pre></td></tr></table></figure><br>设置好config 配置文件后，将其拷贝一份</p><p>cp config_s1r1.xml config_s2r2.xml</p><p>修改config_s2r2.xml如下</p><p>将其中涉及路径 s1r1 全部替换为 s2r2</p><p>端口部分修改为如下对应<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">http_port</span>&gt;</span>8124<span class="tag">&lt;/<span class="name">http_port</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">tcp_port</span>&gt;</span>9001<span class="tag">&lt;/<span class="name">tcp_port</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mysql_port</span>&gt;</span>9014<span class="tag">&lt;/<span class="name">mysql_port</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">postgresql_port</span>&gt;</span>9015<span class="tag">&lt;/<span class="name">postgresql_port</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">interserver_http_port</span>&gt;</span>9019<span class="tag">&lt;/<span class="name">interserver_http_port</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 宏定义部分 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">macros</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">shard</span>&gt;</span>02<span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">replica</span>&gt;</span>02-2<span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">macros</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>为其他节点准备配置文件<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp config_s1r1.xml config_s2r1.xml</span><br><span class="line"></span><br><span class="line">cp config_s1r1.xml config_s3r1.xml</span><br><span class="line"></span><br><span class="line">cp config_s2r2.xml config_s3r2.xml</span><br><span class="line"></span><br><span class="line">cp config_s2r2.xml config_s1r2.xml</span><br></pre></td></tr></table></figure><br>修改 config_s2r1.xml</p><p>将路径中的s1r1 全部替换成 s2r1</p><p>宏定义部分<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">macros</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">shard</span>&gt;</span>02<span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">replica</span>&gt;</span>02-1<span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">macros</span>&gt;</span></span><br></pre></td></tr></table></figure><br>修改 config_s3r1.xml</p><p>将路径中的s1r1 全部替换成 s3r1</p><p>宏定义部分<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">macros</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">shard</span>&gt;</span>03<span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">replica</span>&gt;</span>03-1<span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">macros</span>&gt;</span></span><br></pre></td></tr></table></figure><br>修改 config_s3r2.xml</p><p>将路径中的s2r2 全部替换成 s3r2</p><p>宏定义部分<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">macros</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">shard</span>&gt;</span>03<span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">replica</span>&gt;</span>03-2<span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">macros</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>将路径中的s2r2 全部替换成 s1r2</p><p>宏定义部分<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">macros</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">shard</span>&gt;</span>01<span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">replica</span>&gt;</span>01-2<span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">macros</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>将文件分发到各个节点上</p><p>172.28.160.2 保留  config_s1r1.xml config_s2r2.xml 文件</p><p>172.28.160.3 保留  config_s2r1.xml config_s3r2.xml 文件</p><p>172.28.160.4 保留  config_s3r1.xml config_s1r2.xml 文件<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp  config_s2r1.xml config_s3r2.xml  172.28.160.3:/etc/clickhouse-server/</span><br><span class="line"></span><br><span class="line">scp  config_s3r1.xml config_s1r2.xml  172.28.160.4:/etc/clickhouse-server/</span><br></pre></td></tr></table></figure><br>在172.28.160.2 上删除多余的文件</p><p>rm -f  config_s2r1.xml config_s3r2.xml  config_s3r1.xml config_s1r2.xml</p><p>新增clickhouse-keeper 配置文件</p><p>vi keeper.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">clickhouse</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">logger</span>&gt;</span></span><br><span class="line">                 <span class="comment">&lt;!-- Possible levels [1]:</span></span><br><span class="line"><span class="comment">                    - none (turns off logging)</span></span><br><span class="line"><span class="comment">                    - fatal</span></span><br><span class="line"><span class="comment">                    - critical</span></span><br><span class="line"><span class="comment">                    - error</span></span><br><span class="line"><span class="comment">                    - warning</span></span><br><span class="line"><span class="comment">                    - notice</span></span><br><span class="line"><span class="comment">                    - information</span></span><br><span class="line"><span class="comment">                    - debug</span></span><br><span class="line"><span class="comment">                    - trace</span></span><br><span class="line"><span class="comment">                       [1]: https://github.com/pocoproject/poco/blob/poco-1.9.4-release/Foundation/include/Poco/Logger.h#L105-L114</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">level</span>&gt;</span>warning<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">log</span>&gt;</span>/var/log/clickhouse-keeper/clickhouse-keeper.log<span class="tag">&lt;/<span class="name">log</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">errorlog</span>&gt;</span>/var/log/clickhouse-keeper/clickhouse-keeper.err.log<span class="tag">&lt;/<span class="name">errorlog</span>&gt;</span></span><br><span class="line">                  <span class="comment">&lt;!-- Rotation policy</span></span><br><span class="line"><span class="comment">                         See https://github.com/pocoproject/poco/blob/poco-1.9.4-release/Foundation/include/Poco/FileChannel.h#L54-L85</span></span><br><span class="line"><span class="comment">                   --&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">size</span>&gt;</span>1000M<span class="tag">&lt;/<span class="name">size</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">count</span>&gt;</span>10<span class="tag">&lt;/<span class="name">count</span>&gt;</span></span><br><span class="line">                  <span class="comment">&lt;!-- &lt;console&gt;1&lt;/console&gt; --&gt;</span> <span class="comment">&lt;!-- Default behavior is autodetection (log to console if not daemon mode and is tty) --&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         <span class="tag">&lt;<span class="name">max_connections</span>&gt;</span>4096<span class="tag">&lt;/<span class="name">max_connections</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         <span class="tag">&lt;<span class="name">keeper_server</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">tcp_port</span>&gt;</span>2181<span class="tag">&lt;/<span class="name">tcp_port</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                   <span class="comment">&lt;!-- Must be unique among all keeper serves --&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">server_id</span>&gt;</span>1<span class="tag">&lt;/<span class="name">server_id</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                   <span class="tag">&lt;<span class="name">log_storage_path</span>&gt;</span>/var/lib/clickhouse/keeper/coordination/logs<span class="tag">&lt;/<span class="name">log_storage_path</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">snapshot_storage_path</span>&gt;</span>/var/lib/clickhouse/keeper/coordination/snapshots<span class="tag">&lt;/<span class="name">snapshot_storage_path</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                   <span class="tag">&lt;<span class="name">coordination_settings</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">operation_timeout_ms</span>&gt;</span>10000<span class="tag">&lt;/<span class="name">operation_timeout_ms</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">min_session_timeout_ms</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">min_session_timeout_ms</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">session_timeout_ms</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">session_timeout_ms</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">raft_logs_level</span>&gt;</span>warning<span class="tag">&lt;/<span class="name">raft_logs_level</span>&gt;</span></span><br><span class="line">                             <span class="comment">&lt;!-- All settings listed in https://github.com/ClickHouse/ClickHouse/blob/master/src/Coordination/CoordinationSettings.h --&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">coordination_settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="comment">&lt;!-- enable sanity hostname checks for cluster configuration (e.g. if localhost is used with remote endpoints) --&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">hostname_checks_enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">hostname_checks_enabled</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">raft_configuration</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>1<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">hostname</span>&gt;</span>172.28.160.2<span class="tag">&lt;/<span class="name">hostname</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>9444<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>2<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">hostname</span>&gt;</span>172.28.160.3<span class="tag">&lt;/<span class="name">hostname</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>9444<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">id</span>&gt;</span>3<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">hostname</span>&gt;</span>172.28.160.4<span class="tag">&lt;/<span class="name">hostname</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">port</span>&gt;</span>9444<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                         <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                         <span class="comment">&lt;!-- Add more servers here --&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">raft_configuration</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">keeper_server</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">clickhouse</span>&gt;</span></span><br></pre></td></tr></table></figure><br>将keeper.xml 拷贝到其他2个节点上<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp  keeper.xml  172.28.160.3:/etc/clickhouse-server/</span><br><span class="line">scp  keeper.xml  172.28.160.4:/etc/clickhouse-server/</span><br></pre></td></tr></table></figure><br>在172.28.160.3 修改 keeper.xml  替换server_id  为 <server_id>2</server_id></p><p>在172.28.160.4 修改 keeper.xml  替换server_id  为 <server_id>3</server_id></p><p>配置user.xml 文件,添加集群用户repl。3节点上都添加</p><p>vi user.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- replicat user --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">repl</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">password_sha256_hex</span>&gt;</span>SHA256PASSWORD<span class="tag">&lt;/<span class="name">password_sha256_hex</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">networks</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">ip</span>&gt;</span>::/0<span class="tag">&lt;/<span class="name">ip</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;/<span class="name">networks</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">profile</span>&gt;</span>default<span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">quota</span>&gt;</span>default<span class="tag">&lt;/<span class="name">quota</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">repl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure><br>重新全部授权 clickhouse </p><p>chown -R clickhouse:clickhouse /etc/clickhouse-server</p><h5 id="6-设置systemctl-启动脚本，并启动集群"><a href="#6-设置systemctl-启动脚本，并启动集群" class="headerlink" title="6. 设置systemctl 启动脚本，并启动集群"></a>6. 设置systemctl 启动脚本，并启动集群</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">vi  clickhouse-keeper.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=ClickHouse Keeper (analytic DBMS <span class="keyword">for</span> big data)</span><br><span class="line">Requires=network-online.target</span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> that After/Wants=time-sync.target is not enough, you need to ensure</span></span><br><span class="line"><span class="comment"># that the time was adjusted already, if you use systemd-timesyncd you are</span></span><br><span class="line"><span class="comment"># safe, but if you use ntp or some other daemon, you should configure it</span></span><br><span class="line"><span class="comment"># additionaly.</span></span><br><span class="line">After=time-sync.target network-online.target</span><br><span class="line">Wants=time-sync.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=clickhouse</span><br><span class="line">Group=clickhouse</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=30</span><br><span class="line">ExecStart=/usr/bin/clickhouse-keeper --config=/etc/clickhouse-server/keeper.xml --pid-file=/var/lib/clickhouse/keeper/clickhouse-keeper.pid</span><br><span class="line">LimitCORE=infinity</span><br><span class="line">LimitNOFILE=500000</span><br><span class="line">CapabilityBoundingSet=CAP_NET_ADMIN CAP_IPC_LOCK CAP_SYS_NICE CAP_NET_BIND_SERVICE</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="comment"># ClickHouse should not start from the rescue shell (rescue.target).</span></span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>将启动脚本拷贝到/lib/systemd/system/<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp clickhouse-keeper.service /lib/systemd/system/clickhouse-keeper.service</span><br></pre></td></tr></table></figure><br>重载并启动<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start clickhouse-keeper.service</span><br></pre></td></tr></table></figure><br>启动成功验证<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status clickhouse-keeper.service</span><br></pre></td></tr></table></figure><br>将这个脚本拷贝到其他2个服务器上。执行同样的操作。</p><p>这样keeper 集群就启动了，可以通过跟zookeeper 一样的四字母命令来查看zookeeper 的状态<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@ct-bigdata-clickhouse-160-2 clickhouse-server]# echo mntr | nc localhost 2181</span><br><span class="line">zk_version v22.12.3.5-stable-893de538f0298310edb9ea1d7c83968cbbc5310f</span><br><span class="line">zk_avg_latency 0</span><br><span class="line">zk_max_latency 0</span><br><span class="line">zk_min_latency 0</span><br><span class="line">zk_packets_received 0</span><br><span class="line">zk_packets_sent 0</span><br><span class="line">zk_num_alive_connections 0</span><br><span class="line">zk_outstanding_requests 0</span><br><span class="line">zk_server_state leader</span><br><span class="line">zk_znode_count 3</span><br><span class="line">zk_watch_count 0</span><br><span class="line">zk_ephemerals_count 0</span><br><span class="line">zk_approximate_data_size 644</span><br><span class="line">zk_key_arena_size 4096</span><br><span class="line">zk_latest_snapshot_size 0</span><br><span class="line">zk_open_file_descriptor_count 41</span><br><span class="line">zk_max_file_descriptor_count 12640848</span><br><span class="line">zk_followers 2</span><br><span class="line">zk_synced_followers 2</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>接下来配置clickhouse-server 的启动脚本<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /lib/systemd/system/clickhouse-server.service   /lib/systemd/system/clickhouse-server_s1r1.service</span><br></pre></td></tr></table></figure><br>修改启动配置文件的路径以及pid 文件的存放路径<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">vi /lib/systemd/system/clickhouse-server_s1r1.service  </span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=ClickHouse Server (analytic DBMS for big data)</span><br><span class="line">Requires=network-online.target</span><br><span class="line"># NOTE: that After/Wants=time-sync.target is not enough, you need to ensure</span><br><span class="line"># that the time was adjusted already, if you use systemd-timesyncd you are</span><br><span class="line"># safe, but if you use ntp or some other daemon, you should configure it</span><br><span class="line"># additionaly.</span><br><span class="line">After=time-sync.target network-online.target</span><br><span class="line">Wants=time-sync.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"></span><br><span class="line"># Switching off watchdog is very important for sd_notify to work correctly.</span><br><span class="line">Environment=CLICKHOUSE_WATCHDOG_ENABLE=0</span><br><span class="line">User=clickhouse</span><br><span class="line">Group=clickhouse</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=30</span><br><span class="line">RuntimeDirectory=clickhouse-server</span><br><span class="line">ExecStart=/usr/bin/clickhouse-server --config=/etc/clickhouse-server/config_s1r1.xml --pid-file=/var/lib/clickhouse/s1r1/clickhouse-server_s1r1.pid</span><br><span class="line"># Minus means that this file is optional.</span><br><span class="line">EnvironmentFile=-/etc/default/clickhouse</span><br><span class="line">LimitCORE=infinity</span><br><span class="line">LimitNOFILE=500000</span><br><span class="line">CapabilityBoundingSet=CAP_NET_ADMIN CAP_IPC_LOCK CAP_SYS_NICE CAP_NET_BIND_SERVICE</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"># ClickHouse should not start from the rescue shell (rescue.target).</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><br>对应的其他实例在ExecStart=的位置将配置文件指定到对应的配置文件以及路径上。</p><p>在172.28.160.2 上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">lickhouse-server_s1r1.service  ExecStart=/usr/bin/clickhouse-server --config=/etc/clickhouse-server/config_s1r1.xml --pid-file=/var/lib/clickhouse/s1r1/clickhouse-server_s1r1.pid</span><br><span class="line"></span><br><span class="line">clickhouse-server_s2r2.service  ExecStart=/usr/bin/clickhouse-server --config=/etc/clickhouse-server/config_s2r2.xml --pid-file=/var/lib/clickhouse/s1r1/clickhouse-server_s2r2.pid</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">systemctl start clickhouse-server_s1r1.service</span><br><span class="line"></span><br><span class="line">systemctl start clickhouse-server_s2r2.service</span><br></pre></td></tr></table></figure><p>在172.28.160.3 上<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">lickhouse-server_s2r1.service  ExecStart=/usr/bin/clickhouse-server --config=/etc/clickhouse-server/config_s2r1.xml --pid-file=/var/lib/clickhouse/s1r1/clickhouse-server_s2r1.pid</span><br><span class="line"></span><br><span class="line">clickhouse-server_s3r2.service  ExecStart=/usr/bin/clickhouse-server --config=/etc/clickhouse-server/config_s3r2.xml --pid-file=/var/lib/clickhouse/s1r1/clickhouse-server_s3r2.pid</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">systemctl start clickhouse-server_s2r1.service</span><br><span class="line"></span><br><span class="line">systemctl start clickhouse-server_s3r2.service</span><br></pre></td></tr></table></figure><br>在172.28.160.4 上<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">lickhouse-server_s3r1.service  ExecStart=/usr/bin/clickhouse-server --config=/etc/clickhouse-server/config_s3r1.xml --pid-file=/var/lib/clickhouse/s1r1/clickhouse-server_s3r1.pid</span><br><span class="line"></span><br><span class="line">clickhouse-server_s1r2.service  ExecStart=/usr/bin/clickhouse-server --config=/etc/clickhouse-server/config_s1r2.xml --pid-file=/var/lib/clickhouse/s1r1/clickhouse-server_s1r2.pid</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">systemctl start clickhouse-server_s3r1.service</span><br><span class="line"></span><br><span class="line">systemctl start clickhouse-server_s1r2.service</span><br></pre></td></tr></table></figure></p><h5 id="7-集群验证"><a href="#7-集群验证" class="headerlink" title="7. 集群验证"></a>7. 集群验证</h5><p>节点启动成功后,可以登录本地节点查看<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@ct-bigdata-clickhouse-160-2 ~]# clickhouse-client --user=default --password=123456</span><br><span class="line">ClickHouse client version 22.12.3.5 (official build).</span><br><span class="line">Connecting to localhost:9000 as user default.</span><br><span class="line">Connected to ClickHouse server version 22.12.3 revision 54461.</span><br><span class="line"></span><br><span class="line">ct-bigdata-clickhouse-160-2 :) </span><br><span class="line"></span><br><span class="line">ct-bigdata-clickhouse-160-2 :) select * from system.clusters;</span><br><span class="line"></span><br><span class="line">SELECT *</span><br><span class="line">FROM system.clusters</span><br><span class="line"></span><br><span class="line">Query id: 85ad631d-dacf-49d0-a410-3b3420d2e619</span><br><span class="line"></span><br><span class="line">┌─cluster─────────────────────┬─shard_num─┬─shard_weight─┬─replica_num─┬─host_name────┬─host_address─┬─port─┬─is_local─┬─user─┬─default_database─┬─errors_count─┬─slowdowns_count─┬─estimated_recovery_time─┐</span><br><span class="line">│ three_shards_tow_replicated │ 1 │ 1 │ 1 │ 172.28.160.2 │ 172.28.160.2 │ 9000 │ 1 │ repl │ │ 0 │ 0 │ 0 │</span><br><span class="line">│ three_shards_tow_replicated │ 1 │ 1 │ 2 │ 172.28.160.4 │ 172.28.160.4 │ 9001 │ 0 │ repl │ │ 0 │ 0 │ 0 │</span><br><span class="line">│ three_shards_tow_replicated │ 2 │ 1 │ 1 │ 172.28.160.3 │ 172.28.160.3 │ 9000 │ 0 │ repl │ │ 0 │ 0 │ 0 │</span><br><span class="line">│ three_shards_tow_replicated │ 2 │ 1 │ 2 │ 172.28.160.2 │ 172.28.160.2 │ 9001 │ 0 │ repl │ │ 0 │ 0 │ 0 │</span><br><span class="line">│ three_shards_tow_replicated │ 3 │ 1 │ 1 │ 172.28.160.4 │ 172.28.160.4 │ 9000 │ 0 │ repl │ │ 0 │ 0 │ 0 │</span><br><span class="line">│ three_shards_tow_replicated │ 3 │ 1 │ 2 │ 172.28.160.3 │ 172.28.160.3 │ 9001 │ 0 │ repl │ │ 0 │ 0 │ 0 │</span><br><span class="line">└─────────────────────────────┴───────────┴──────────────┴─────────────┴──────────────┴──────────────┴──────┴──────────┴──────┴──────────────────┴──────────────┴─────────────────┴─────────────────────────┘</span><br><span class="line"></span><br><span class="line">6 rows in set. Elapsed: 0.001 sec.</span><br></pre></td></tr></table></figure><br>通过查询clusters 系统表。可以看到集群信息</p><p>建一个集群表验证一下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ct-bigdata-clickhouse-160-2 :) create table test_cluster_table on cluster three_shards_tow_replicated (id int,name String,price int ) ENGINE = ReplicatedMergeTree(&#x27;/clickhouse/tables/&#123;shard&#125;/default/test_cluster_table&#x27;,&#x27;&#123;replica&#125;&#x27;) ORDER BY id;</span><br><span class="line"></span><br><span class="line">CREATE TABLE test_cluster_table ON CLUSTER three_shards_tow_replicated</span><br><span class="line">(</span><br><span class="line">`id` int,</span><br><span class="line">`name` String,</span><br><span class="line">`price` int</span><br><span class="line">)</span><br><span class="line">ENGINE = ReplicatedMergeTree(&#x27;/clickhouse/tables/&#123;shard&#125;/default/test_cluster_table&#x27;, &#x27;&#123;replica&#125;&#x27;)</span><br><span class="line">ORDER BY id</span><br><span class="line"></span><br><span class="line">Query id: 0461fe5a-19f6-4017-9683-a596670b34e3</span><br><span class="line"></span><br><span class="line">┌─host─────────┬─port─┬─status─┬─error─┬─num_hosts_remaining─┬─num_hosts_active─┐</span><br><span class="line">│ 172.28.160.4 │ 9000 │ 0 │ │ 5 │ 0 │</span><br><span class="line">│ 172.28.160.4 │ 9001 │ 0 │ │ 4 │ 0 │</span><br><span class="line">│ 172.28.160.3 │ 9001 │ 0 │ │ 3 │ 0 │</span><br><span class="line">│ 172.28.160.2 │ 9000 │ 0 │ │ 2 │ 0 │</span><br><span class="line">│ 172.28.160.2 │ 9001 │ 0 │ │ 1 │ 0 │</span><br><span class="line">│ 172.28.160.3 │ 9000 │ 0 │ │ 0 │ 0 │</span><br><span class="line">└──────────────┴──────┴────────┴───────┴─────────────────────┴──────────────────┘</span><br><span class="line"></span><br><span class="line">6 rows in set. Elapsed: 0.310 sec.</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>可以看到各个节点上均已创建了表，集群功能正常</p><p>验证插入数据<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">ct-bigdata-clickhouse-160-2 :) insert into test_cluster_table values(1,&#x27;光猫200&#x27;,88)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ct-bigdata-clickhouse-160-2 :) select * from test_cluster_table;</span><br><span class="line"></span><br><span class="line">SELECT *</span><br><span class="line">FROM test_cluster_table</span><br><span class="line"></span><br><span class="line">Query id: c29c5e62-8843-4456-98b5-2cdda06068fb</span><br><span class="line"></span><br><span class="line">┌─id─┬─name────┬─price─┐</span><br><span class="line">│ 1 │ 光猫200 │ 88 │</span><br><span class="line">└────┴─────────┴───────┘</span><br><span class="line"></span><br><span class="line">1 row in set. Elapsed: 0.001 sec.</span><br><span class="line"></span><br><span class="line">[root@ct-bigdata-clickhouse-160-4 ~]# clickhouse-client --user=default --password=123456 --port=9001</span><br><span class="line">ClickHouse client version 22.12.3.5 (official build).</span><br><span class="line">Connecting to localhost:9001 as user default.</span><br><span class="line">Connected to ClickHouse server version 22.12.3 revision 54461.</span><br><span class="line"></span><br><span class="line">ct-bigdata-clickhouse-160-4 :) select * from test_cluster_table;</span><br><span class="line"></span><br><span class="line">SELECT *</span><br><span class="line">FROM test_cluster_table</span><br><span class="line"></span><br><span class="line">Query id: 97c833d2-cd9a-4994-95c6-7919555b5e55</span><br><span class="line"></span><br><span class="line">┌─id─┬─name────┬─price─┐</span><br><span class="line">│ 1 │ 光猫200 │ 88 │</span><br><span class="line">└────┴─────────┴───────┘</span><br><span class="line"></span><br><span class="line">1 row in set. Elapsed: 0.001 sec.</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>上面的结果可以看到 在s1r1 插入的数据。在 s1r2 实例上可以看到。replica 功能正常。</p><p>以上为clickhouse 集群安装完整步骤。</p><h5 id="8-将集群配置独立写到metrika-xml-的方法"><a href="#8-将集群配置独立写到metrika-xml-的方法" class="headerlink" title="8. 将集群配置独立写到metrika.xml 的方法"></a>8. 将集群配置独立写到metrika.xml 的方法</h5><p>上述安装过程是将集群配置 <remote_servers> 写在 config 配置文件中，这里提供另一种方案，将remote_servers 的配置写在额外的配置文件中。默认额外配置文件读取路径为 /etc/metrika.xml</p><p>1) 在 172.28.160.2 节点上 /etc/config.d/ 目录中创建文件 metrika.xml </p><p>vi metrika.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">yandex</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">clickhouse_remote_servers</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">three_shards_tow_replicated</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">shard</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">internal_replication</span>&gt;</span>true<span class="tag">&lt;/<span class="name">internal_replication</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.2<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>9000<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.4<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">port</span>&gt;</span>9001<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">shard</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">internal_replication</span>&gt;</span>true<span class="tag">&lt;/<span class="name">internal_replication</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                                     <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.3<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                     <span class="tag">&lt;<span class="name">port</span>&gt;</span>9000<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                     <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                                     <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.2<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>9001<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">shard</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">internal_replication</span>&gt;</span>true<span class="tag">&lt;/<span class="name">internal_replication</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.4<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">port</span>&gt;</span>9000<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">replica</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">host</span>&gt;</span>172.28.160.3<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">port</span>&gt;</span>9001<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">user</span>&gt;</span>repl<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">password</span>&gt;</span>PLAINPASSWORD<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;/<span class="name">replica</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;/<span class="name">shard</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">three_shards_tow_replicated</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">clickhouse_remote_servers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">yandex</span>&gt;</span></span><br></pre></td></tr></table></figure><br>将该文件发送到其他节点上上<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp metrika.xml 172.28.160.3:/etc/clickhouse-server/config.d/</span><br><span class="line"></span><br><span class="line">scp metrika.xml 172.28.160.4:/etc/clickhouse-server/config.d/</span><br></pre></td></tr></table></figure><br>三个节点上对该文件修改所有者为 clickhouse</p><p>2) 修改config 文件，所有实例的config 文件都要修改</p><p>将原先<code>&lt;remote_servers&gt;。。。&lt;/remote_servers&gt;</code> 的配置屏蔽或者删除</p><p>添加<br>表示将引用子文件 clickhouse_remote_servers 属性下的配置,incl对应metrika 里面的标签名。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">remote_servers</span> <span class="attr">incl</span>=<span class="string">&quot;clickhouse_remote_servers&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><br>修改读取 metrika.xml 的路径。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">include_from</span>&gt;</span>/etc/clickhouse-server/config.d/metrika.xml<span class="tag">&lt;/<span class="name">include_from</span>&gt;</span></span><br></pre></td></tr></table></figure><br>3) 重启实例，并检查集群是否正常</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;一-规划：&quot;&gt;&lt;a href=&quot;#一-规划：&quot; class=&quot;headerlink&quot; title=&quot;一 规划：&quot;&gt;&lt;/a&gt;一 规划：&lt;/h4&gt;&lt;p&gt;本次搭建采用3个服务器搭建一个 3分片2副本的clickhouse 集群。命名规则中。以S 代表分片。R代表复制集。</summary>
      
    
    
    
    <category term="clickhouse" scheme="https://sheenzxx.github.io/categories/clickhouse/"/>
    
    
    <category term="cluster" scheme="https://sheenzxx.github.io/tags/cluster/"/>
    
  </entry>
  
  <entry>
    <title>clickhouse 的 MergeTree 引擎</title>
    <link href="https://sheenzxx.github.io/2023/01/13/MergeTree/"/>
    <id>https://sheenzxx.github.io/2023/01/13/MergeTree/</id>
    <published>2023-01-13T01:49:07.000Z</published>
    <updated>2023-03-16T08:30:20.207Z</updated>
    
    <content type="html"><![CDATA[<p>MergeTree 的主要特性</p><ul><li>存储按主键排序的数据</li><li>支持分区表</li><li>支持数据复制</li><li>支持数据采样</li></ul><p><code>注意的是 Merge 引擎并不是 *MergeTree 引擎的家族成员</code></p><h4 id="建一个-MergeTree-表"><a href="#建一个-MergeTree-表" class="headerlink" title="建一个 MergeTree 表"></a>建一个 MergeTree 表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] [db.]table_name [<span class="keyword">ON</span> CLUSTER cluster]</span><br><span class="line">(</span><br><span class="line">    name1 [type1] [<span class="keyword">DEFAULT</span><span class="operator">|</span>MATERIALIZED<span class="operator">|</span>ALIAS expr1] [TTL expr1],</span><br><span class="line">    name2 [type2] [<span class="keyword">DEFAULT</span><span class="operator">|</span>MATERIALIZED<span class="operator">|</span>ALIAS expr2] [TTL expr2],</span><br><span class="line">    ...</span><br><span class="line">    INDEX index_name1 expr1 TYPE type1(...) GRANULARITY value1,</span><br><span class="line">    INDEX index_name2 expr2 TYPE type2(...) GRANULARITY value2,</span><br><span class="line">    ...</span><br><span class="line">    PROJECTION projection_name_1 (<span class="keyword">SELECT</span> <span class="operator">&lt;</span><span class="keyword">COLUMN</span> LIST EXPR<span class="operator">&gt;</span> [<span class="keyword">GROUP</span> <span class="keyword">BY</span>] [<span class="keyword">ORDER</span> <span class="keyword">BY</span>]),</span><br><span class="line">    PROJECTION projection_name_2 (<span class="keyword">SELECT</span> <span class="operator">&lt;</span><span class="keyword">COLUMN</span> LIST EXPR<span class="operator">&gt;</span> [<span class="keyword">GROUP</span> <span class="keyword">BY</span>] [<span class="keyword">ORDER</span> <span class="keyword">BY</span>])</span><br><span class="line">) ENGINE <span class="operator">=</span> MergeTree()</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> expr</span><br><span class="line">[<span class="keyword">PARTITION</span> <span class="keyword">BY</span> expr]</span><br><span class="line">[<span class="keyword">PRIMARY</span> KEY expr]</span><br><span class="line">[SAMPLE <span class="keyword">BY</span> expr]</span><br><span class="line">[TTL expr</span><br><span class="line">    [<span class="keyword">DELETE</span><span class="operator">|</span><span class="keyword">TO</span> DISK <span class="string">&#x27;xxx&#x27;</span><span class="operator">|</span><span class="keyword">TO</span> VOLUME <span class="string">&#x27;xxx&#x27;</span> [, ...] ]</span><br><span class="line">    [<span class="keyword">WHERE</span> conditions]</span><br><span class="line">    [<span class="keyword">GROUP</span> <span class="keyword">BY</span> key_expr [<span class="keyword">SET</span> v1 <span class="operator">=</span> aggr_func(v1) [, v2 <span class="operator">=</span> aggr_func(v2) ...]] ] ]</span><br><span class="line">[SETTINGS name<span class="operator">=</span><span class="keyword">value</span>, ...]</span><br><span class="line"></span><br><span class="line">ENGINE： 指定 MergeTree() ,MergeTree 引擎没有参数</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span>： 指定一组排序键, 例如 <span class="keyword">ORDER</span> <span class="keyword">BY</span> (event_date,counter_id)不需要排序时指定 tuple()如果没有指定 <span class="keyword">PRIMARY</span> KEY 则clickhouse 会按<span class="keyword">ORDER</span> <span class="keyword">BY</span> 的排序字段建一个主键</span><br><span class="line"><span class="keyword">PARTITION</span> <span class="keyword">BY</span>：指定分区键，分区并不会加速查询，不要使用细粒度的键作为分区键。按月分区可使用 toYYYYMM(date_column) 表达式</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY：主键，当主键顺序与 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 排序键不一致时指定</span><br><span class="line">SAMPLE <span class="keyword">BY</span>：采样表达式。采样列必须包含在主键里面。例如:SAMPLE <span class="keyword">BY</span> intHash32(UserID) <span class="keyword">ORDER</span> <span class="keyword">BY</span> (CounterID, EventDate, intHash32(UserID))</span><br><span class="line">TTL：指定一系列规则，规定行的持续存储时长，并定义数据在磁盘与卷之间自动转移的逻辑。比如定时将部分数据转化为冷数据,存储到普通磁盘中。表达式必须包含日期或者时间的字段。</span><br><span class="line">示例:</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> example_table</span><br><span class="line">(</span><br><span class="line">    d DateTime,</span><br><span class="line">    a <span class="type">Int</span></span><br><span class="line">)</span><br><span class="line">ENGINE <span class="operator">=</span> MergeTree</span><br><span class="line"><span class="keyword">PARTITION</span> <span class="keyword">BY</span> toYYYYMM(d)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> d</span><br><span class="line">TTL d <span class="operator">+</span> <span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MONTH</span> <span class="keyword">DELETE</span>,   <span class="comment">-- 删除超过一个月的行</span></span><br><span class="line">    d <span class="operator">+</span> <span class="type">INTERVAL</span> <span class="number">1</span> WEEK <span class="keyword">TO</span> VOLUME <span class="string">&#x27;aaa&#x27;</span>, <span class="comment">-- 超过1周的行转移到名为aaa 的卷</span></span><br><span class="line">    d <span class="operator">+</span> <span class="type">INTERVAL</span> <span class="number">2</span> WEEK <span class="keyword">TO</span> DISK <span class="string">&#x27;bbb&#x27;</span>; <span class="comment">-- 超过2周的行转移到名为 bbb 的磁盘</span></span><br><span class="line"></span><br><span class="line">SETTINGS：设置控制MergeTree 行为的参数</span><br><span class="line">   index_granularity：索引粒度，定义一个索引标记存储的最大行数。默认值 <span class="number">8192</span>行</span><br><span class="line">   index_granularity_bytes：数据粒度的最大大小。默认值 <span class="number">10</span>Mb ,如果只按行数限制，则需要将其值设置为<span class="number">0</span> (不推荐)</span><br><span class="line">   min_index_granularity_bytes：数据粒度最小大小。默认<span class="number">1024</span>b,防止意外创建具有非常低粒度的表</span><br><span class="line">   enable_mixed_granularity_parts：是否启动 index_granularity_bytes 的开关。启动数据粒度大小限制有利于提高大行表的查询</span><br><span class="line">   use_minimalistic_part_header_in_zookeeper：设置在zookeeper中存储数据部分头部信息的方法。设置为<span class="number">1</span> 将存储更少的信息</span><br><span class="line">   min_merge_bytes_to_use_direct_io：设置在合并操作时直接使用DIRECT_IO 的最小数据量，默认<span class="number">10</span>MB，设置<span class="number">1</span> 开启， <span class="number">0</span> 关闭</span><br><span class="line">   merge_with_ttl_timeout：在重复合并数据执行 ttl <span class="keyword">delete</span> 操作时的最小间隔时间 。默认<span class="number">4</span>小时</span><br><span class="line">   merge_with_recompression_ttl_timeout：在重复合并数据执行 ttl 压缩 操作时的最小间隔时间。默认<span class="number">4</span>小时</span><br><span class="line">   try_fetch_recompressed_part_timeout：clickhouse 在启动合并压缩数据前，尝试从副本里获取此次标志合并压缩的已压缩数据的超时时间。 默认<span class="number">2</span>小时</span><br><span class="line">   write_final_mark：是否在数据部分末尾写上最终索引标记(在最后一个字节之后)。默认 <span class="number">1</span> 开启， 请不要关掉它</span><br><span class="line">   merge_max_block_size：合并时块的最大行数，默认 <span class="number">8192</span></span><br><span class="line">   storage_policy：存储策略</span><br><span class="line">   min_bytes_for_wide_part,min_rows_for_wide_part：设置可以存储为wide 格式的最小的数据大小<span class="operator">/</span>最小的行数</span><br><span class="line">   max_parts_in_total：最大的分区数</span><br><span class="line">   max_compress_block_size：数据压缩前数据块的最大尺寸。</span><br><span class="line">   min_compress_block_size：数据压缩前数据块的最小尺寸。</span><br><span class="line">   max_partitions_to_read：查询时可以查的最大分区数</span><br></pre></td></tr></table></figure><h4 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h4><p>一张表由按主键排序的数据部分组成<br>主键没有唯一性约束，允许插入多条相同主键的数据</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;MergeTree 的主要特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存储按主键排序的数据&lt;/li&gt;
&lt;li&gt;支持分区表&lt;/li&gt;
&lt;li&gt;支持数据复制&lt;/li&gt;
&lt;li&gt;支持数据采样&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;注意的是 Merge 引擎并不是 *MergeTree 引擎</summary>
      
    
    
    
    <category term="clickhouse" scheme="https://sheenzxx.github.io/categories/clickhouse/"/>
    
    
    <category term="engine" scheme="https://sheenzxx.github.io/tags/engine/"/>
    
    <category term="index" scheme="https://sheenzxx.github.io/tags/index/"/>
    
  </entry>
  
  <entry>
    <title>ckOptimize</title>
    <link href="https://sheenzxx.github.io/2023/01/11/ckOptimize/"/>
    <id>https://sheenzxx.github.io/2023/01/11/ckOptimize/</id>
    <published>2023-01-11T02:53:49.000Z</published>
    <updated>2023-01-11T02:53:49.390Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>基于SQL user mode 的用户创建</title>
    <link href="https://sheenzxx.github.io/2023/01/04/clickhouseUser/"/>
    <id>https://sheenzxx.github.io/2023/01/04/clickhouseUser/</id>
    <published>2023-01-04T04:08:09.000Z</published>
    <updated>2023-01-11T02:46:17.181Z</updated>
    
    <content type="html"><![CDATA[<p>clickhouse 在旧版本创建用户以及密码需要通过修改users.xml 配置文件，笔记麻烦。在20.5 开始支持SQL话的用户配置<br>首先修改配置 /etc/clickhouse-server/users.xml，打开 SQL USER mode<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">default</span>&gt;</span></span><br><span class="line">        ....</span><br><span class="line">        <span class="comment">&lt;!-- User can create other users and grant rights to them. --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">access_management</span>&gt;</span>1<span class="tag">&lt;/<span class="name">access_management</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">default</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>重启服务</p><p>定义一个用户<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">clickhouse<span class="operator">-</span>client <span class="comment">--user default --password &lt;password&gt;</span></span><br><span class="line"><span class="comment">-- 创建一个管理员用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> clickhouse_admin IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> clickhouse_admin <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 展示权限</span></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> clickhouse_admin;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建普通用户</span></span><br><span class="line"><span class="comment">-- 创建一个列读取用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> column_user IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="comment">-- 创建一个行读取用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> row_user IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建一个 列查询角色，并授权表上的列读取权限</span></span><br><span class="line"><span class="keyword">CREATE</span> ROLE column1_users;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>(id, column1) <span class="keyword">ON</span> db1.table1 <span class="keyword">TO</span> column1_users;</span><br><span class="line"><span class="comment">-- 将角色授权给列用户</span></span><br><span class="line"><span class="keyword">GRANT</span> column1_users <span class="keyword">TO</span> column_user;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建一个 行策略查询角色</span></span><br><span class="line"><span class="keyword">CREATE</span> ROLE A_rows_users;</span><br><span class="line"><span class="comment">-- 将行策略角色授权给行查询用户</span></span><br><span class="line"><span class="keyword">GRANT</span> A_rows_users <span class="keyword">TO</span> row_user;</span><br><span class="line"><span class="comment">-- 创建行查询策略给角色 A_rows_users</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="type">ROW</span> POLICY A_row_filter <span class="keyword">ON</span> db1.table1 <span class="keyword">FOR</span> <span class="keyword">SELECT</span> <span class="keyword">USING</span> column1 <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span> <span class="keyword">TO</span> A_rows_users;</span><br><span class="line"><span class="comment">-- 授权查询db1.table1 上的列查询权限给角色 A_rows_users</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>(id, column1, column2) <span class="keyword">ON</span> db1.table1 <span class="keyword">TO</span> A_rows_users;</span><br><span class="line"><span class="comment">-- 创建一个其他可访问该表整表的角色给其他用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="type">ROW</span> POLICY allow_other_users_filter <span class="keyword">ON</span> db1.table1 <span class="keyword">FOR</span> <span class="keyword">SELECT</span> <span class="keyword">USING</span> <span class="number">1</span> <span class="keyword">TO</span> clickhouse_admin, column1_users;</span><br><span class="line">将策略附加到表时，系统将应用该策略，并且只有那些定义的用户和角色才能对表进行操作，其他所有用户和角色都将被拒绝任何操作。 为了不将限制性行策略应用于其他用户，必须定义另一个策略以允许其他用户和角色具有常规或其他类型的访问权限。</span><br></pre></td></tr></table></figure></p><p>修改用户和角色<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建一个具有默认角色的用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> row_and_column_user IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span> <span class="keyword">DEFAULT</span> ROLE A_rows_users;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 回收角色A_rows_users的部分权限</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span>(id, column1, column2) <span class="keyword">ON</span> db1.table1 <span class="keyword">FROM</span> A_rows_users;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 允许角色A_rows_users 只能查询 column1 列</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>(id, column1) <span class="keyword">ON</span> db1.table1 <span class="keyword">TO</span> A_rows_users;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>查看权限<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看角色 row_and_column_user 具有什么权限</span></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> row_and_column_user</span><br><span class="line"><span class="comment">-- 查看clickhouse 建有的角色</span></span><br><span class="line"><span class="keyword">SHOW</span> ROLES</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看所有行策略</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="type">ROW</span> POLICIES</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看策略 A_row_filter 定义</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="type">ROW</span> POLICY A_row_filter <span class="keyword">ON</span> db1.table1</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>管理角色，策略，用户<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 回收角色A_rows_users 在table1 表上查询colunm1 的权限</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span>(column1, id) <span class="keyword">ON</span> db1.table1 <span class="keyword">FROM</span> A_rows_users;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除策略A_row_filter</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="type">ROW</span> POLICY A_row_filter <span class="keyword">ON</span> db1.table1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 回收row_user 的角色 A_rows_users</span></span><br><span class="line"><span class="keyword">REVOKE</span> A_rows_users <span class="keyword">FROM</span> row_user;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除角色</span></span><br><span class="line"><span class="keyword">DROP</span> ROLE A_rows_users;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> row_user;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改用户密码</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> row_user@<span class="string">&#x27;192.168.%.%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> sha256_password <span class="keyword">BY</span> <span class="string">&#x27;passwd2&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建profile</span></span><br><span class="line"><span class="keyword">CREATE</span> SETTINGS PROFILE low_mem_readonly SETTINGS max_threads <span class="operator">=</span> <span class="number">4</span>, max_memory_usage <span class="operator">=</span> <span class="number">4000000000</span> READONLY;</span><br><span class="line"><span class="keyword">CREATE</span> ROLE role_low_mem SETTINGS PROFILE <span class="string">&#x27;low_mem_readonly&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> db1.<span class="operator">*</span> <span class="keyword">TO</span> role_low_mem;</span><br></pre></td></tr></table></figure></p><p>通过命令创建的用户权限可以在access 目录里面查看到<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /data1/clickhouse/access</span><br><span class="line">[root@bigdata access]<span class="comment"># ll</span></span><br><span class="line">总用量 32</span><br><span class="line">-rw-r-----. 1 clickhouse clickhouse  263 Dec 28 10:52 344a88a5-c2bc-a961-252d.sql</span><br><span class="line">-rw-r-----. 1 clickhouse clickhouse 2365 Jan  4 10:53 b406882-c6bd-65dd-413e-721a4b75afaf.sql</span><br><span class="line">-rw-r-----. 1 clickhouse clickhouse    1 Dec 21 17:36 quotas.list</span><br><span class="line">-rw-r-----. 1 clickhouse clickhouse    1 Dec 21 17:36 roles.list</span><br><span class="line">-rw-r-----. 1 clickhouse clickhouse    1 Dec 21 17:36 row_policies.list</span><br><span class="line">-rw-r-----. 1 clickhouse clickhouse    1 Dec 21 17:36 settings_profiles.list</span><br><span class="line">-rw-r-----. 1 clickhouse clickhouse  143 Jan  4 10:51 users.list</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> users.list</span><br><span class="line">testeb406882-c6bd-65dd-413e-721a4b75afaf clickhouse_admin344a88a5-c2bc-a961-252d</span><br><span class="line"></span><br><span class="line">相关用户的权限语句可以在对应的 xxx.sql 查看</span><br><span class="line">比如 clickhouse_admin 对应上面的 344a88a5-c2bc-a961-252d.sql</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>以上操作都是在单点中执行。也仅在单点中生效<br><em>如果是部署的集群。需要在集群中生效。则需要加上 ON CLUSTER 子句</em><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> all_hits <span class="keyword">ON</span> CLUSTER cluster (p <span class="type">Date</span>, i Int32) ENGINE <span class="operator">=</span> Distributed(cluster, <span class="keyword">default</span>, hits)</span><br></pre></td></tr></table></figure></p><p>看回完整的USER 语法<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="operator">|</span> <span class="keyword">OR</span> REPLACE] name1 [<span class="keyword">ON</span> CLUSTER cluster_name1]</span><br><span class="line">        [, name2 [<span class="keyword">ON</span> CLUSTER cluster_name2] ...]</span><br><span class="line">    [<span class="keyword">NOT</span> IDENTIFIED <span class="operator">|</span> IDENTIFIED &#123;[<span class="keyword">WITH</span> &#123;no_password <span class="operator">|</span> plaintext_password <span class="operator">|</span> sha256_password <span class="operator">|</span> sha256_hash <span class="operator">|</span> double_sha1_password <span class="operator">|</span> double_sha1_hash&#125;] <span class="keyword">BY</span> &#123;<span class="string">&#x27;password&#x27;</span> <span class="operator">|</span> <span class="string">&#x27;hash&#x27;</span>&#125;&#125; <span class="operator">|</span> &#123;<span class="keyword">WITH</span> ldap SERVER <span class="string">&#x27;server_name&#x27;</span>&#125; <span class="operator">|</span> &#123;<span class="keyword">WITH</span> kerberos [REALM <span class="string">&#x27;realm&#x27;</span>]&#125; <span class="operator">|</span> &#123;<span class="keyword">WITH</span> ssl_certificate CN <span class="string">&#x27;common_name&#x27;</span>&#125;]</span><br><span class="line">    [HOST &#123;<span class="keyword">LOCAL</span> <span class="operator">|</span> NAME <span class="string">&#x27;name&#x27;</span> <span class="operator">|</span> REGEXP <span class="string">&#x27;name_regexp&#x27;</span> <span class="operator">|</span> IP <span class="string">&#x27;address&#x27;</span> <span class="operator">|</span> <span class="keyword">LIKE</span> <span class="string">&#x27;pattern&#x27;</span>&#125; [,...] <span class="operator">|</span> <span class="keyword">ANY</span> <span class="operator">|</span> <span class="keyword">NONE</span>]</span><br><span class="line">    [<span class="keyword">DEFAULT</span> ROLE role [,...]]</span><br><span class="line">    [<span class="keyword">DEFAULT</span> DATABASE database <span class="operator">|</span> <span class="keyword">NONE</span>]</span><br><span class="line">    [GRANTEES &#123;<span class="keyword">user</span> <span class="operator">|</span> role <span class="operator">|</span> <span class="keyword">ANY</span> <span class="operator">|</span> <span class="keyword">NONE</span>&#125; [,...] [<span class="keyword">EXCEPT</span> &#123;<span class="keyword">user</span> <span class="operator">|</span> role&#125; [,...]]]</span><br><span class="line">    [SETTINGS variable [<span class="operator">=</span> <span class="keyword">value</span>] [MIN [<span class="operator">=</span>] min_value] [MAX [<span class="operator">=</span>] max_value] [READONLY <span class="operator">|</span> WRITABLE] <span class="operator">|</span> PROFILE <span class="string">&#x27;profile_name&#x27;</span>] [,...]</span><br></pre></td></tr></table></figure></p><p>ALTER 权限树<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── ALTER (only <span class="keyword">for</span> table and view)/</span><br><span class="line">│   ├── ALTER TABLE/</span><br><span class="line">│   │   ├── ALTER UPDATE</span><br><span class="line">│   │   ├── ALTER DELETE</span><br><span class="line">│   │   ├── ALTER COLUMN/</span><br><span class="line">│   │   │   ├── ALTER ADD COLUMN</span><br><span class="line">│   │   │   ├── ALTER DROP COLUMN</span><br><span class="line">│   │   │   ├── ALTER MODIFY COLUMN</span><br><span class="line">│   │   │   ├── ALTER COMMENT COLUMN</span><br><span class="line">│   │   │   ├── ALTER CLEAR COLUMN</span><br><span class="line">│   │   │   └── ALTER RENAME COLUMN</span><br><span class="line">│   │   ├── ALTER INDEX/</span><br><span class="line">│   │   │   ├── ALTER ORDER BY</span><br><span class="line">│   │   │   ├── ALTER SAMPLE BY</span><br><span class="line">│   │   │   ├── ALTER ADD INDEX</span><br><span class="line">│   │   │   ├── ALTER DROP INDEX</span><br><span class="line">│   │   │   ├── ALTER MATERIALIZE INDEX</span><br><span class="line">│   │   │   └── ALTER CLEAR INDEX</span><br><span class="line">│   │   ├── ALTER CONSTRAINT/</span><br><span class="line">│   │   │   ├── ALTER ADD CONSTRAINT</span><br><span class="line">│   │   │   └── ALTER DROP CONSTRAINT</span><br><span class="line">│   │   ├── ALTER TTL/</span><br><span class="line">│   │   │   └── ALTER MATERIALIZE TTL</span><br><span class="line">│   │   ├── ALTER SETTINGS</span><br><span class="line">│   │   ├── ALTER MOVE PARTITION</span><br><span class="line">│   │   ├── ALTER FETCH PARTITION</span><br><span class="line">│   │   └── ALTER FREEZE PARTITION</span><br><span class="line">│   └── ALTER LIVE VIEW/</span><br><span class="line">│       ├── ALTER LIVE VIEW REFRESH</span><br><span class="line">│       └── ALTER LIVE VIEW MODIFY QUERY</span><br><span class="line">├── ALTER DATABASE</span><br><span class="line">├── ALTER USER</span><br><span class="line">├── ALTER ROLE</span><br><span class="line">├── ALTER QUOTA</span><br><span class="line">├── ALTER [ROW] POLICY</span><br><span class="line">└── ALTER [SETTINGS] PROFILE</span><br></pre></td></tr></table></figure><br>示例<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">alter</span> <span class="keyword">on</span> my_db.my_table <span class="keyword">TO</span> my_user;</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span>  my_user;</span><br><span class="line">┌─GRANTS <span class="keyword">FOR</span> my_user───────────────────────────────────────────┐</span><br><span class="line">│ <span class="keyword">GRANT</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span>, <span class="keyword">ALTER</span> <span class="keyword">VIEW</span> <span class="keyword">ON</span> my_db.my_table <span class="keyword">TO</span> my_user   │</span><br><span class="line">└──────────────────────────────────────────────────────────────┘</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 这里我们可以看到 alter 作用于 表上 包含了 alter table , alter view 2个主权限，其下还包含各种详细的权限。由上面的ALTER 权限树可以看出。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 单独授权添加列的权限</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALTER</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="keyword">ON</span> my_db.my_table <span class="keyword">TO</span> my_user;</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> my_user;</span><br><span class="line">┌─GRANTS <span class="keyword">FOR</span> my_user──────────────────────────────────┐</span><br><span class="line">│ <span class="keyword">GRANT</span> <span class="keyword">ALTER</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="keyword">ON</span> my_db.my_table <span class="keyword">TO</span> my_user │</span><br><span class="line">└─────────────────────────────────────────────────────┘</span><br><span class="line"></span><br><span class="line"><span class="comment">--回收添加表列的权限，</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALTER</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="keyword">ON</span> my_db.my_table <span class="keyword">FROM</span> my_user;</span><br><span class="line">(</span><br><span class="line">回收任何上级权限，都会回收当前子集权限，<span class="keyword">REVOKE</span> <span class="keyword">ALTER</span> CLOUMN 也将会回收 <span class="keyword">ALTER</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> 的权限，在上面只授权一个子权限的情况下，</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> <span class="keyword">ON</span> my_db.my_table <span class="keyword">FROM</span> my_user;</span><br><span class="line">与直接回收子权限的语句等同。</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> my_user;</span><br><span class="line">Ok.</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> <span class="keyword">rows</span> <span class="keyword">in</span> set. Elapsed: <span class="number">0.003</span> sec.</span><br></pre></td></tr></table></figure></p><p>修改用户设置的4种方式</p><ul><li>1 通过配置 users.xml 配置文件。在 <code>&lt;profiles&gt;</code> 标签下面设置</li><li>2 如果是会话级别参数 可以通过 <code>set setting=value</code> 的方式设置</li><li>3 在查询期间设置<ul><li>1) 在启动clickhouse-client 时加参数 <code>--setting=value</code></li><li>2) 使用http API ,通过CGI 参数（<code>URL?setting_1=value&amp;setting_2=value...</code>）</li><li>3) 在查询语句中指定settings ，<code>insert xxx values() settings setting1=value,setting2=value...</code></li></ul></li><li>4 通过ALTER USER username settings 的方式 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> bireport settings async_insert<span class="operator">=</span><span class="number">1</span>,wait_for_async_insert<span class="operator">=</span><span class="number">0</span>,async_insert_max_data_size<span class="operator">=</span><span class="number">500000</span>,async_insert_busy_timeout_ms<span class="operator">=</span><span class="number">5000</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;clickhouse 在旧版本创建用户以及密码需要通过修改users.xml 配置文件，笔记麻烦。在20.5 开始支持SQL话的用户配置&lt;br&gt;首先修改配置 /etc/clickhouse-server/users.xml，打开 SQL USER mode&lt;br&gt;&lt;figu</summary>
      
    
    
    
    <category term="clickhouse" scheme="https://sheenzxx.github.io/categories/clickhouse/"/>
    
    
    <category term="database" scheme="https://sheenzxx.github.io/tags/database/"/>
    
    <category term="create user" scheme="https://sheenzxx.github.io/tags/create-user/"/>
    
  </entry>
  
  <entry>
    <title>mangodb 集群复制</title>
    <link href="https://sheenzxx.github.io/2022/12/16/mongoreplica/"/>
    <id>https://sheenzxx.github.io/2022/12/16/mongoreplica/</id>
    <published>2022-12-16T03:03:30.000Z</published>
    <updated>2022-12-21T10:31:52.755Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-mongodb-复制集群成员"><a href="#1-mongodb-复制集群成员" class="headerlink" title="1. mongodb 复制集群成员"></a>1. mongodb 复制集群成员</h3><p>primary 主库，接收集群所有写操作。并将操作记录在oplog 中。辅助节点则通过oplog来回放主库的操作。</p><p>Secondaries 辅助节点，从主节点复制操作以维护相同的数据集。</p><p>一个集群最多只有一个主节点，副本集最多可以有 50 个成员，但只有 7 个有投票权的成员。</p><h5 id="辅助节点类型："><a href="#辅助节点类型：" class="headerlink" title="辅助节点类型："></a>辅助节点类型：</h5><p><em>Priority 0 辅助节点</em>：这种节点不能提升成为主节点，并且不能触发选举，但是可以参与投票。<br>                    可以正常的回放主库的oplog,可以提供只读，参与集群的负载均衡。</p><p><em>隐藏的辅助节点</em>：隐藏节点具有Priority 0 节点的大部分属性（除了提供只读服务)，对应用客户端不可见。<br>              此类节点因为不参与工作负载，所以几乎没有压力。可以用于做定时任务。报表。或者备份</p><p><em>延迟复制辅助节点</em>：延缓应用来自主库的oplog,可以看成是主库某一个过去时的快照。主要用于人为的数据误操作<br>                恢复。<br> &emsp; &emsp;由于是主库的历史版本，所以它在集群中必须满足下面三个要求<br> &emsp; &emsp;&emsp;Priority 0 最低权限<br> &emsp; &emsp;&emsp;hidden     隐藏的节点<br> &emsp; &emsp;&emsp;non-voting 不能参与投票</p><p><em>仲裁节点</em>： 仲裁节点适用于仅有一主一从的集群。仲裁节点参与投票，但不能成为主节点。因为它并没有数据</p><h3 id="2-Oplog"><a href="#2-Oplog" class="headerlink" title="2. Oplog"></a>2. Oplog</h3><p>oplog（操作日志）是一个特殊的上限集合，它保留所有修改存储在数据库中的数据的操作的滚动记录。</p><p>4.0 开始 oplog 能够增长超过它设置的上限。以避免删除 majority commit point.</p><p>4.4 开始支持设置 oplog 以小时为单位的最小保留周期，MongoDB 想要清除Oplog 必须满足2个条件<br>oplog 大小必须达到设置上限，并且超过了设置的最小保留周期数。</p><p>所有的辅助节点在 local.oplog.rs 集合中维护着一份oplog 备份。</p><h5 id="oplog-的大小"><a href="#oplog-的大小" class="headerlink" title="oplog 的大小"></a>oplog 的大小</h5><p>[UNIX &amp; WINDOWS]<br>In-Memory 存储引擎  | 默认占用物理内存5%       |最小 50M    | 最大 50G<br>WiredTiger 存储引擎 | 默认占用空闲磁盘空间5%    |最小 990M   | 最大 50G<br>[64bit macOS]<br>In-Memory 存储引擎 | 192M 物理内存<br>WiredTiger 存储引擎 | 192M 空闲磁盘空间</p><p>如果 oplog 占可用磁盘空间的 5% 并在 24 小时的操作中填满，则辅助节点可以停止从 oplog 复制条目<br>长达 24 小时，而不会变得太陈旧而无法继续复制。</p><p>在 mongod 创建oplog 之前，可以通过 oplogSizeMB 参数指定oplog 的大小。当复制集群启动后。还可以<br>通过管理命令  replSetResizeOplog 重置oplog 的大小，而无需重启服务</p><h5 id="设置-oplog-保留最小周期"><a href="#设置-oplog-保留最小周期" class="headerlink" title="设置 oplog 保留最小周期"></a>设置 oplog 保留最小周期</h5><p>mongod 配置文件参数：storage.oplogMinRetentionHours<br>命令行参数： —oplogMinRetentionHours<br>在运行期间变更使用 replSetResizeOplog 命令，请注意同时需要配置文件，以备下一次重启生效。</p><h5 id="oplog-窗口"><a href="#oplog-窗口" class="headerlink" title="oplog 窗口"></a>oplog 窗口</h5><p>oplog 条目带有时间戳。 oplog 窗口是 oplog 中最新时间戳和最旧时间戳之间的时间差。 如果辅助<br>节点失去与主节点的连接，如果连接在 oplog 窗口内恢复，它只能使用复制再次同步。</p><h5 id="那些可能需要更大的oplog-尺寸的-工作负载"><a href="#那些可能需要更大的oplog-尺寸的-工作负载" class="headerlink" title="那些可能需要更大的oplog 尺寸的 工作负载"></a>那些可能需要更大的oplog 尺寸的 工作负载</h5><p>1.同时更新多个文档<br>2.删除了于插入相当的数据，数据库空间没增加。不过oplog 就会显著增加。（删除跟写入都计入oplog）<br>3.大量的更新文档</p><h5 id="查看-Oplog-的状态"><a href="#查看-Oplog-的状态" class="headerlink" title="查看 Oplog 的状态"></a>查看 Oplog 的状态</h5><p>rs.printReplicationInfo() </p><h5 id="复制滞后以及流量控制"><a href="#复制滞后以及流量控制" class="headerlink" title="复制滞后以及流量控制"></a>复制滞后以及流量控制</h5><p>db.getReplicationInfo() 可在辅助节点上查看跟主库存在滞后性<br>flowControlTargetLagSeconds 参数控制应用的写入速率。以确保主节点与辅助节点的 majority committed<br>                            的滞后时间控制在 flowControlTargetLagSeconds 秒内</p><h5 id="Oplog-应用慢日志"><a href="#Oplog-应用慢日志" class="headerlink" title="Oplog 应用慢日志"></a>Oplog 应用慢日志</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">applied op: &lt;oplog entry&gt; took &lt;num&gt;ms.</span><br></pre></td></tr></table></figure><p>相关参数：   命令行 mongod —slowms  配置参数 slowOpThresholdMs<br>以下情况不记录<br>logLevel/systemLog.verbosity 或 systemLog.component.replication.verbosity 日志级别<br>不被解析器捕获，并且在分析级别不被记录</p><p>使用 WiredTiger 引擎的复制集 local.oplog.rs 文档不能被删除，4.2 开始 单机版的 local.oplog.rs 文档<br>也不能被删除。也强烈不建议删除 local.oplog.rs 文档。5.0 开始 oplog 不能被手工操作。单机版对 oplog<br>的操作必须在Mongodb 的指导下进行</p><h3 id="3-复制集数据同步"><a href="#3-复制集数据同步" class="headerlink" title="3. 复制集数据同步"></a>3. 复制集数据同步</h3><h4 id="初始化同步"><a href="#初始化同步" class="headerlink" title="初始化同步"></a>初始化同步</h4><p><strong>逻辑初始化同步</strong><br>  1.克隆所有的数据库（local 库除外），mongod 扫描所有数据库中的每一个集合。并将这些数据写入自己备份集合中<br>  2.为集合里的每个文档创建索引<br>  3.推送拷贝文件期间产生的新oplog<br>  4.应用所有的变化到数据集中</p><p><strong>基于文件拷贝的初始化同步 （仅企业版支持）</strong><br>  1.设置 initialSyncMethod = fileCopyBased<br>  2.源库的local 库也会被复制<br>  3.限制：<br>  &emsp; &emsp;同步期间源库不能做备份，源库的local 库不能写入<br>  &emsp; &emsp;一次只能指定一个复制源节点<br>  &emsp; &emsp;使用加密存储引擎时，MongoDB 使用源密钥加密目标。</p><p><strong>容错机制</strong><br>  4.4 版本开始。如果遇到网络闪断，集合删除或者集合重命名导致的中断，则初始化进程将会尝试恢复同步，<br>  源库也必须是4.4版本以上。如果同步源是4.2 或更早的版本。辅助节点必须重启初始化同步进程。就像遇到<br>  非暂时性网络中断一样</p><p>  默认情况下辅助节点将尝试24小时恢复初始化同步，4.4 添加参数 initialSyncTransientErrorRetryPeriodSeconds<br>  如果超过这个参数设定的时间。它会从副本集中选择一个健康的节点并重头开始初始化。</p><p>  辅助节点在抛出同步错误之前，会进行10次尝试重启初始化进程</p><p><strong>初始化源选择</strong><br>  4.4 开始 ，初始化源将由参数 initialSyncSourceReadPreference 决定<br>  &emsp; &emsp; 1.设置为 primary (链式模式关闭将作为默认值) ，则选择主库为复制源。如果主库不可用或不可达。则抛错<br>  &emsp; &emsp; 2.设置为 primaryPreferred (选举复制集成员的默认值)。则优先选择主库复制，如果主库不可用或不可达，<br>  &emsp; &emsp; &emsp; 则选择集群中其他在线的节点作为复制源<br>  &emsp; &emsp; 3.对于所有其他支持的读取模式，从副本集成员执行同步源选择。</p><p>  选择源的第一遍，同步源必须满足下面要求：<br>  &emsp; &emsp; 1.同步源必须是primary 或者 secondary 状态<br>  &emsp; &emsp; 2.同步源必须在线并且可达<br>  &emsp; &emsp; 3.initialSyncSourceReadPreference 的值如果为secondary 或 secondaryPreferred,同步源必须是 secondary<br>  &emsp; &emsp; 4.同步源必须可用<br>  &emsp; &emsp; 5.同步源必须包含有来自主库30秒内新的oplog<br>  &emsp; &emsp; 6.如果成员建立索引。同步源必须建立索引<br>  &emsp; &emsp; 7.如果成员在副本集选举中投票，则同步源也必须投票<br>  &emsp; &emsp; 8.如果成员不是延迟成员，则同步源不得延迟。<br>  &emsp; &emsp; 9.如果成员是延迟成员，则同步源必须具有较短的配置延迟。<br>  &emsp; &emsp; 10.同步源必须比当前最佳同步源更快（即延迟更低）。<br>  如果第一遍过后没有同步源满足。则进行较为宽松的第二遍查找<br>  &emsp; &emsp; 1.同步源必须是primary 或者 secondary 状态<br>  &emsp; &emsp; 2.同步源必须在线并且可达<br>  &emsp; &emsp; 3.initialSyncSourceReadPreference 的值如果为secondary ,同步源必须是 secondary<br>  &emsp; &emsp; 4.如果成员建立索引。同步源必须建立索引<br>  &emsp; &emsp; 5.同步源必须比当前最佳同步源更快（即延迟更低）。</p><p>  如果2遍过后都没有可以选择的同步源。那么它将记录一个错误并且等待1秒钟后重新启动选择进程，在10次重启后都没有合适的。将报错退出</p><h4 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h4><p>  初始化同步完成之后，辅助节点就连续的进行数据复制。根据ping 值以及其他节点的状态变化。辅助节点可以根据自己的需要更改源的同步。</p><p>  <strong>流复制</strong>：源节点将连续的oplog 同步推送到同步它的辅助节点上。<br>  &emsp; &emsp; 流复制减轻了高负载和高延迟网络中的复制滞后<br>  &emsp; &emsp; 减少从辅助节点读取数据的陈旧性<br>  &emsp; &emsp; 降低了由于主库故障转移而丢失 w:1 的写操作的风险。<br>  &emsp; &emsp; 减少使用 w: “majority” 和 w: &gt;1 的写操作的延迟。<br>  4.4 版本添加了 oplogFetcherUsesExhaust 参数用来关闭流复制，当来自同步源的资源限制或者想要减少oplog 同步带来的网络带宽压力。可以将其制设置为false</p><p>  <strong>多线程复制</strong>: mongodb 在批量写操作时使用了多线程来改善并发。MongoDB 按文档 ID (WiredTiger) 对批次进行分组，并使用不同的线程同时应用每组操作。MongoDB 始终以原始写入顺序对给定文档应用写入操作。当读操作发生在正在应用批处理的辅助节点上并且设置阅读关注级别为 “local” 或者 “majority” 时将在  WiredTiger 快照上读取数据。从快照读取保证了数据的一致性视图，并且允许读取与复制的同时发生而不需要加锁</p><p>  <strong>流控制</strong>：前面说到过的，通过设置 flowControlTargetLagSeconds 实现</p><p><strong>复制同步源的选择</strong><br>与初始化源的选择遵循相同的准则</p><h3 id="4-复制集的部署架构"><a href="#4-复制集的部署架构" class="headerlink" title="4. 复制集的部署架构"></a>4. 复制集的部署架构</h3><h4 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h4><p><strong>决定复制集成员的数量</strong><br><em>选举成员的最大数量</em>：最多50个成员，以及最多7个投票成员,如果复制集中已经有7个投票成员，那么添加的成员就必须是非投票成员</p><p><em>部署奇数成员数量</em>：确保复制集中的投票成员数必须是奇数的。如果有偶数个投票成员，请部署另一个数据承载的投票成员。或者部署一个仲裁节点。</p><p><strong><em>避免在集群中部署多个仲裁节点</em></strong></p><p><strong>集群节点数与容错节点数</strong></p><table><tr><td>集群节点数</td><td>Majority 选举出新主节点需要的节点数</td><td>容错节点数</td></tr><tr><td>3</td><td>2</td><td>1</td></tr><tr><td>4</td><td>3</td><td>1</td></tr><tr><td>5</td><td>3</td><td>2</td></tr><tr><td>6</td><td>4</td><td>2</td></tr></table><p>从4.2开始，可以通过r.status() 查看集群的投票节点数 majorityVoteCount</p><p><strong>3节点复制集群（P-S-S)</strong><br><img src="images/replica-set-primary-with-two-secondaries.bakedsvg.svg" alt="pss"></p><p>集群中包含一个主节点和2个辅助节点，当主节点挂掉之后。将在2个辅助节点间选举，推出一个新的主节点</p><p><strong>3节点复制集群（P-S-A)</strong><br><img src="images/replica-set-primary-with-secondary-and-arbiter.bakedsvg.svg" alt="psa"></p><p>集群中包含一个主节点和1个辅助节点和一个仲裁节点，当主节点挂掉之后。另一个辅助节点提升为主节点</p><p><strong>多数据中心部署复制集群</strong><br><img src="images/replica-set-three-data-centers.bakedsvg.svg" alt="mutidata"></p><p>集群将辅助节点部署在3不同的数据中心。任何数据中心断线，都不影响集群的读写。剩下的节点依然可以选举</p><h3 id="5-复制集选举"><a href="#5-复制集选举" class="headerlink" title="5. 复制集选举"></a>5. 复制集选举</h3><p><strong>触发选举的情况</strong></p><ul><li>新增一个节点到集群</li><li>初始化复制集</li><li>复制集维护，例如rs.setDown() ,rs.reconfig() 等</li><li>辅助节点同主节点失去连接超过配置的超时时间（默认10s)</li></ul><p>在选举结束前，集群不可写，如果设置了运行在辅助节点上，则保持可读。集群在主节点失败到选举出新主所用的时间，一般不会超过12s,这包含了标志主库不可用和调用一个完整的选举过程。可以通过调整复制配置参数settings.electionTimeoutMillis 来改变这个时间。</p><p><strong>影响选举的因素和条件</strong></p><ul><li>复制协议。 protocolVersion: 1 减少了副本集的故障转移时间并加速了对多个同步主节点的检测。</li><li>心跳。集群成员每2秒钟向其他成员发送心跳包，如果心跳没有在10s 内返回，则违规成员将被标记不可访问</li><li>成员优先级。</li><li>镜像读取</li><li>数据中心丢失</li><li></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-mongodb-复制集群成员&quot;&gt;&lt;a href=&quot;#1-mongodb-复制集群成员&quot; class=&quot;headerlink&quot; title=&quot;1. mongodb 复制集群成员&quot;&gt;&lt;/a&gt;1. mongodb 复制集群成员&lt;/h3&gt;&lt;p&gt;primary 主库，接</summary>
      
    
    
    
    <category term="mangodb" scheme="https://sheenzxx.github.io/categories/mangodb/"/>
    
    
    <category term="nosql" scheme="https://sheenzxx.github.io/tags/nosql/"/>
    
    <category term="replica" scheme="https://sheenzxx.github.io/tags/replica/"/>
    
  </entry>
  
  <entry>
    <title>为yapi搭建mongodb 存储单机版</title>
    <link href="https://sheenzxx.github.io/2022/12/14/mongodbSingle/"/>
    <id>https://sheenzxx.github.io/2022/12/14/mongodbSingle/</id>
    <published>2022-12-14T06:04:31.000Z</published>
    <updated>2022-12-14T07:41:04.720Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-背景"><a href="#1-背景" class="headerlink" title="1. 背景"></a>1. 背景</h3><p>测试组有一套yapi 服务。希望迁到线上来。后端数据库用到mongodb,考虑到资源问题，<br>以及数据可丢失一天的容忍度。搭建一个mongodb 单机版</p><h3 id="2-下载安装包"><a href="#2-下载安装包" class="headerlink" title="2. 下载安装包"></a>2. 下载安装包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 1. 下载mongodb 社区版安装包，采用 mongodb-5.0.14 版本， centos 7  tgz 文件包</span><br><span class="line">wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel70-5.0.14.tgz</span><br><span class="line"></span><br><span class="line"># 2. 下载工具包,在mongodb 4.4 开始，很多mongodb 数据库工具 独立成 mongotool，初始版本由 100.0.0 开始</span><br><span class="line"></span><br><span class="line">wget https://fastdl.mongodb.org/tools/db/mongodb-database-tools-rhel70-x86_64-100.6.1.tgz</span><br><span class="line"></span><br><span class="line"># 3. 下载mongo shell: mongosh 替代 mongo</span><br><span class="line"></span><br><span class="line">wget https://downloads.mongodb.com/compass/mongosh-1.6.1-linux-x64.tgz</span><br></pre></td></tr></table></figure><h3 id="3-安装相关依赖包"><a href="#3-安装相关依赖包" class="headerlink" title="3. 安装相关依赖包"></a>3. 安装相关依赖包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install libcurl openssl xz-libs</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-安装"><a href="#4-安装" class="headerlink" title="4. 安装"></a>4. 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压安装软件</span></span><br><span class="line"><span class="built_in">cd</span> /data</span><br><span class="line">tar -xzvf mongodb-linux-x86_64-rhel70-5.0.14.tgz</span><br><span class="line">tar -xzvf mongodb-database-tools-rhel70-x86_64-100.6.1.tgz</span><br><span class="line">tar -xzvf mongosh-1.6.1-linux-x64.tgz</span><br><span class="line"></span><br><span class="line"><span class="comment">#将工具包的bin包含文件以及 mongosh 的bin 包含文件移到mongodb server 的安装目录下</span></span><br><span class="line"><span class="built_in">mv</span> mongodb-database-tools-rhel70-x86_64-100.6.1/bin/* mongodb-linux-x86_64-rhel70-5.0.14/bin</span><br><span class="line"><span class="built_in">mv</span> mongosh-1.6.1-linux-x64/bin/mongosh mongodb-linux-x86_64-rhel70-5.0.14/bin</span><br><span class="line"><span class="built_in">mv</span> mongosh-1.6.1-linux-x64/bin/mongosh_crypt_v1.so /usr/local/lib</span><br><span class="line"></span><br><span class="line"><span class="comment">#建立软链以及相关目录和授权</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local</span><br><span class="line"><span class="built_in">ln</span> -s /data/mongodb-linux-x86_64-rhel70-5.0.14 mongodb</span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/local/mongodb/&#123;logs,mongodata&#125;</span><br><span class="line"><span class="built_in">chown</span> -R mongod:mongod /data/mongodb-linux-x86_64-rhel70-5.0.14</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置环境变量</span></span><br><span class="line">vi /etc/profile</span><br><span class="line">...</span><br><span class="line">pathmunge /usr/local/mongodb/bin after</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加配置文件,指定日志。存储。以及网络，安全等信息</span></span><br><span class="line">vi /etc/mongod.conf</span><br><span class="line">systemLog:</span><br><span class="line">   destination: file</span><br><span class="line">   path: <span class="string">&quot;/usr/local/mongodb/logs/mongod.log&quot;</span></span><br><span class="line">   logAppend: <span class="literal">true</span></span><br><span class="line">   logRotate: reopen</span><br><span class="line">storage:</span><br><span class="line">   dbPath: <span class="string">&quot;/usr/local/mongodb/mongodata&quot;</span></span><br><span class="line">   journal:</span><br><span class="line">      enabled: <span class="literal">true</span></span><br><span class="line">   directoryPerDB: <span class="literal">true</span></span><br><span class="line">   engine: wiredTiger</span><br><span class="line">   wiredTiger:</span><br><span class="line">      engineConfig:</span><br><span class="line">         cacheSizeGB: 5</span><br><span class="line">         journalCompressor: snappy</span><br><span class="line">         directoryForIndexes: <span class="literal">false</span></span><br><span class="line">      collectionConfig:</span><br><span class="line">         blockCompressor: snappy</span><br><span class="line">      indexConfig:</span><br><span class="line">         prefixCompression: <span class="literal">true</span></span><br><span class="line">net:</span><br><span class="line">   port: 27017</span><br><span class="line">   bindIpAll: <span class="literal">true</span></span><br><span class="line">   maxIncomingConnections: 65536</span><br><span class="line">security:</span><br><span class="line">   authorization: enabled</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> mongod:mongod /etc/mongod.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换到 mongod 用户</span></span><br><span class="line">su - mongod</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建启动脚本以及关闭脚本</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/mongodb/bin</span><br><span class="line">vi start_mongod.sh</span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line">/usr/local/mongodb/bin/mongod -f /etc/mongod.conf --fork</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x start_mongod.sh</span><br><span class="line"></span><br><span class="line">vi stop_mongod.sh</span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line">/usr/local/mongodb/bin/mongod --shutdown -f /etc/mongod.conf </span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x stop_mongod.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-启动"><a href="#5-启动" class="headerlink" title="5. 启动"></a>5. 启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">start_mongod.sh</span><br><span class="line">ps -ef |grep mongod</span><br><span class="line">mongod    90789      1  0 12月08 ?       00:34:45 /usr/local/mongodb/bin/mongod -f /etc/mongod.conf --fork</span><br></pre></td></tr></table></figure><h3 id="6-创建账号初始化"><a href="#6-创建账号初始化" class="headerlink" title="6. 创建账号初始化"></a>6. 创建账号初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mongosh</span><br><span class="line"><span class="comment">## 创建超级用户</span></span><br><span class="line"><span class="built_in">test</span> &gt; use admin</span><br><span class="line">admin &gt; db.createUser(&#123;</span><br><span class="line">...       user: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">...       <span class="built_in">pwd</span>: <span class="string">&#x27;xxxxxx&#x27;</span>,</span><br><span class="line">...       roles: [ &#123; role: <span class="string">&quot;root&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125; ]</span><br><span class="line">...       &#125;)</span><br><span class="line"><span class="comment">## 授权超级用户登录</span></span><br><span class="line">admin &gt; db.auth(<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;xxxxxx&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#新建yapi 库并创建普通用户</span></span><br><span class="line">admin &gt; use yapi</span><br><span class="line">yapi &gt; db.createUser(&#123;</span><br><span class="line">...    user: <span class="string">&#x27;yapi&#x27;</span>,</span><br><span class="line">...    <span class="built_in">pwd</span>: <span class="string">&#x27;xxxxxxxx&#x27;</span>,</span><br><span class="line">...    roles: [ &#123; role: <span class="string">&quot;readWrite&quot;</span>, db: <span class="string">&quot;yapi&quot;</span> &#125; ]</span><br><span class="line">... &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-数据迁移"><a href="#7-数据迁移" class="headerlink" title="7. 数据迁移"></a>7. 数据迁移</h3><p>因为测试用的是4+ 版本，线上用的是5+ 版本，不能用monogdump,只能用 export import<br>的方式来迁移</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 测试环境导出</span></span><br><span class="line"><span class="built_in">cd</span> /data</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> yapiexport</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c adv_mock_case -o ./yapiexport/adv_mock_case.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c avatar -o ./yapiexport/avatar.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c follow -o ./yapiexport/follow.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c group -o ./yapiexport/group.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c identitycounters -o ./yapiexport/identitycounters.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c interface -o ./yapiexport/interface.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c interface_auto_sync -o ./yapiexport/interface_auto_sync.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c interface_case -o ./yapiexport/interface_case.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c interface_cat -o ./yapiexport/interface_cat.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c interface_col -o ./yapiexport/interface_col.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c <span class="built_in">log</span> -o ./yapiexport/log.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c project -o ./yapiexport/project.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c statis_mock -o ./yapiexport/statis_mock.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c storage -o ./yapiexport/storage.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c token -o ./yapiexport/token.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c user -o ./yapiexport/user.data</span><br><span class="line"></span><br><span class="line">PRG/mongodb/bin/mongoexport -d yapi -c wiki -o ./yapiexport/wiki.data</span><br><span class="line"></span><br><span class="line">tar -czvf yapiexport.tar.gz yapiexport</span><br><span class="line"></span><br><span class="line"><span class="comment">## 线上环境导入</span></span><br><span class="line">tar -xzvf yapiexport.tar.gz</span><br><span class="line"><span class="built_in">cd</span> yapiexport</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> `<span class="built_in">ls</span> *.data`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$f</span></span><br><span class="line">    mongoimport --authenticationDatabase=<span class="string">&quot;yapi&quot;</span> -u <span class="string">&quot;yapi&quot;</span> -p <span class="string">&quot;xxxxxx&quot;</span> -d <span class="string">&quot;yapi&quot;</span> -c <span class="variable">$&#123;f%%.data&#125;</span> <span class="variable">$f</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="8-创建备份脚本"><a href="#8-创建备份脚本" class="headerlink" title="8. 创建备份脚本"></a>8. 创建备份脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建备份目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /data/MONGODB_BACKUP</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建备份脚本</span></span><br><span class="line">vi /usr/local/mongodb/bin/mongobackup.sh</span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">DT=`<span class="built_in">date</span> +<span class="string">&#x27;%Y%m%d&#x27;</span>`</span><br><span class="line"><span class="built_in">cd</span> /data/MONGODB_BACKUP</span><br><span class="line">backupset=<span class="string">&quot;yapi&quot;</span>_<span class="variable">$&#123;DT&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;start backup: backupdate <span class="variable">$&#123;backupset&#125;</span>&quot;</span></span><br><span class="line"><span class="comment">## 使用mongodump 导出并压缩</span></span><br><span class="line">/usr/local/mongodb/bin/mongodump --db=<span class="string">&quot;yapi&quot;</span> -u <span class="string">&quot;yapi&quot;</span> -p <span class="string">&quot;xxxxxx&quot;</span>  --gzip --archive=<span class="variable">$backupset</span>.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">## 备份完成后同步传到异地存储</span></span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line">     <span class="built_in">echo</span> <span class="string">&quot;mongodump sucessful ! now send to remote&quot;</span></span><br><span class="line">     rsync -av <span class="variable">$backupset</span>.gz mongod@192.168.11.244:/data/MONGODB_BACKUP</span><br><span class="line">     <span class="built_in">echo</span> <span class="string">&quot;finsh backup&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;mongodump failed!!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##clean backup，keep backup for 30 day</span></span><br><span class="line">find /data/MONGODB_BACKUP -name <span class="string">&quot;yapi_*.gz&quot;</span> -mtime +30 |xargs <span class="built_in">rm</span> -f</span><br><span class="line"></span><br><span class="line"><span class="comment">#end of script</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权可执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x mongobackup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## 挂crontab 每天执行</span></span><br><span class="line">crontab -e</span><br><span class="line"><span class="comment">##mongodb backup</span></span><br><span class="line">1 1 * * * /usr/local/mongodb/bin/mongobackup.sh &gt;&gt; /data/MONGODB_BACKUP/mongobackup.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-背景&quot;&gt;&lt;a href=&quot;#1-背景&quot; class=&quot;headerlink&quot; title=&quot;1. 背景&quot;&gt;&lt;/a&gt;1. 背景&lt;/h3&gt;&lt;p&gt;测试组有一套yapi 服务。希望迁到线上来。后端数据库用到mongodb,考虑到资源问题，&lt;br&gt;以及数据可丢失一天的容</summary>
      
    
    
    
    <category term="MongoDB" scheme="https://sheenzxx.github.io/categories/MongoDB/"/>
    
    
    <category term="install" scheme="https://sheenzxx.github.io/tags/install/"/>
    
    <category term="yapi" scheme="https://sheenzxx.github.io/tags/yapi/"/>
    
  </entry>
  
  <entry>
    <title>Linux 自带日志切换工具 logrotate</title>
    <link href="https://sheenzxx.github.io/2022/12/14/logrotate/"/>
    <id>https://sheenzxx.github.io/2022/12/14/logrotate/</id>
    <published>2022-12-14T03:28:32.000Z</published>
    <updated>2022-12-14T04:10:33.402Z</updated>
    
    <content type="html"><![CDATA[<p>很多时候某些工具并没有自带日志轮转功能。当产生日志过多，单个日志文件可能<br>大到几十G对于日志运维比较麻烦，比如nginx。最好的办法就是对文件进行切片。<br>按指定日期进行轮转，后期也有利于日志归档删除。很多人会自己写脚本，在crontab<br>中挂个定时任务，去切换文件。<br>其实在 Linux 中提供了一个logrotate 工具。可以满足这方面的需求，只要配置一下文件。<br>就可以轻松实现各种轮转</p><p>以nginx 为例<br>我们需要在 /etc/logrotate.d/ 下面创建一个配置文件<br>vi </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/logrotate.d/nginx</span><br><span class="line"></span><br><span class="line">/usr/local/nginx/logs/*.<span class="built_in">log</span> &#123;</span><br><span class="line">         monthly    <span class="comment">## 轮转周期 daily |weekly |monthly |yearly</span></span><br><span class="line">         missingok  <span class="comment">## 在日志轮循期间，任何错误将被忽略，例如“文件无法找到”之类的错误</span></span><br><span class="line">         rotate 7   <span class="comment">## 保留7个归档</span></span><br><span class="line">         minsize 5M <span class="comment">## 只有超过这个最小值才归档</span></span><br><span class="line">         dateext    <span class="comment">## 归档日志文件名 + 当前日期 重命名</span></span><br><span class="line">         compress   <span class="comment">##在轮循任务完成后，已轮循的归档将使用gzip进行压缩</span></span><br><span class="line">         delaycompress <span class="comment">##总是与compress选项一起用，delaycompress选项指示logrotate不要将最近的归档压缩，压缩将在下一次轮循周期进行。这在你或任何软件仍然需要读取最新归档时很有用。</span></span><br><span class="line">         notifempty  <span class="comment">## 如果日志文件为空，轮循不会进行。</span></span><br><span class="line">         create 640 django django <span class="comment">## 新建的日志文件指定权限</span></span><br><span class="line">         sharedscripts  <span class="comment">## 运行postrotate脚本，作用是在所有日志都轮转后统一执行一次脚本。如果没有配置这个，那么每个日志轮转后都会执行一次脚本</span></span><br><span class="line">         postrotate    <span class="comment">##  在所有其它指令完成后，postrotate和endscript里面指定的命令将被执行。在这种情况下，rsyslogd 进程将立即再次读取其配置并继续运行</span></span><br><span class="line">         <span class="keyword">if</span> [ -f /usr/local/nginx/nginx.pid ]; <span class="keyword">then</span></span><br><span class="line">              <span class="built_in">kill</span> -USR1 `<span class="built_in">cat</span> /usr/local/nginx/nginx.pid`  <span class="comment">## 触发nginx 重新加载配置。这样新的日志才会写入新建的文件</span></span><br><span class="line">         <span class="keyword">fi</span></span><br><span class="line">         endscript</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上配置了一个nginx 的日志轮转 按月归档。保留7个月</p><p>注意:<br>这些注释在使用时一定要删掉。否则会报错</p><p>可以对没有提供轮转功能的任何应用的日志进行轮转。如果没有提供reload 重载配置文件的<br>应用。则需要重启<br>以下是我对django uwsgi 的日志行进轮转配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/logrotate.d/uwsgi</span><br><span class="line">/data/PRG/django/pc_dba_platform/uwsgi.log &#123;</span><br><span class="line">         daily</span><br><span class="line">         missingok</span><br><span class="line">         rotate 30</span><br><span class="line">         minsize 5M</span><br><span class="line">         dateext</span><br><span class="line">         compress</span><br><span class="line">         delaycompress</span><br><span class="line">         notifempty</span><br><span class="line">         create 640 django django</span><br><span class="line">         sharedscripts</span><br><span class="line">         postrotate</span><br><span class="line">         <span class="keyword">if</span> [ -f /data/PRG/django/pc_dba_platform/uwsgi.pid ]; <span class="keyword">then</span></span><br><span class="line">              <span class="comment">## uwsgi --reload 并不做重载配置操作。只是更新python 代码。所以这里用重启服务的方式</span></span><br><span class="line">              /data/PRG/django/pc_dba_platform/django_server.sh stop</span><br><span class="line">              /data/PRG/django/pc_dba_platform/django_server.sh start</span><br><span class="line">         <span class="keyword">fi</span></span><br><span class="line">         endscript</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>强制执行日志轮换<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/logrotate -f /etc/logrotate.d/uwsgi</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很多时候某些工具并没有自带日志轮转功能。当产生日志过多，单个日志文件可能&lt;br&gt;大到几十G对于日志运维比较麻烦，比如nginx。最好的办法就是对文件进行切片。&lt;br&gt;按指定日期进行轮转，后期也有利于日志归档删除。很多人会自己写脚本，在crontab&lt;br&gt;中挂个定时任务，去</summary>
      
    
    
    
    <category term="Linux" scheme="https://sheenzxx.github.io/categories/Linux/"/>
    
    
    <category term="logrotate" scheme="https://sheenzxx.github.io/tags/logrotate/"/>
    
    <category term="nginx log rotate" scheme="https://sheenzxx.github.io/tags/nginx-log-rotate/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机安装TiDB单机版</title>
    <link href="https://sheenzxx.github.io/2022/12/07/TiDBSingle/"/>
    <id>https://sheenzxx.github.io/2022/12/07/TiDBSingle/</id>
    <published>2022-12-07T02:18:01.000Z</published>
    <updated>2022-12-13T07:48:53.329Z</updated>
    
    <content type="html"><![CDATA[<h3 id="TiDB-集群的基本架构"><a href="#TiDB-集群的基本架构" class="headerlink" title="TiDB 集群的基本架构"></a>TiDB 集群的基本架构</h3><p>TiDB 是众多国产数据库中，最具人气的一款。采用分布式架构。其中可分为如下3个部分：<br>TiDB server: SQL 层。此层无状态。主要工作就是对SQL进行解析，生成物理执行计划，<br>             将数据请求转发到底层的 TiKV</p><p>PD server: 复制整个TiDB集群的元信息管理。存储每个 TiKV 节点实时的数据分布情况<br>           和集群的整体拓扑结构。同时为分布式事务分配事务ID，同时还会根据 TiKV<br>           节点实时上报的数据分布状态，下发数据调度命令给具体的 TiKV 节点。可以<br>           说是整个集群的大脑</p><p>数据存储层：<br>      TiKV: 负责数据存储工作，通过RocksDB 数据库将数据持久化到磁盘中。TiKV 的<br>           基本存储单元为region .负责存储一个key range 的数据。每个TiKV 会负责多<br>           个region.集群里面TiKV 会为数据准备多个数据副本，并保存在多个TiKV 节点中<br>      TiFlash: TiFalsh 是为OLAP 运算加速而设计的。它设计以列式存储。</p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>完整的配置官文很详细。<br><a href="https://docs.pingcap.com/zh/tidb/dev/check-before-deployment">https://docs.pingcap.com/zh/tidb/dev/check-before-deployment</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;fs.file-max = 1000000&quot;&gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.core.somaxconn = 32768&quot;&gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.ipv4.tcp_tw_recycle = 0&quot;&gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.ipv4.tcp_syncookies = 0&quot;&gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;vm.overcommit_memory = 1&quot;&gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line">cat &lt;&lt; EOF &gt;&gt;/etc/security/limits.conf</span><br><span class="line">tidb           soft    nofile          1000000</span><br><span class="line">tidb           hard    nofile          1000000</span><br><span class="line">tidb           soft    stack          32768</span><br><span class="line">tidb           hard    stack          32768</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="安装辅助工具TiUP"><a href="#安装辅助工具TiUP" class="headerlink" title="安装辅助工具TiUP"></a>安装辅助工具TiUP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">有了TiUP 安装非常方便。特别是在线安装。</span><br><span class="line">下载并安装 tiup</span><br><span class="line">curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh | sh</span><br><span class="line"></span><br><span class="line">安装完后执行命令,因为它往这个文件写入了tiup 的路径。需要<span class="built_in">source</span> 生效</span><br><span class="line"><span class="built_in">source</span> /root/.bash_profile </span><br></pre></td></tr></table></figure><h3 id="在线安装TiDB"><a href="#在线安装TiDB" class="headerlink" title="在线安装TiDB"></a>在线安装TiDB</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><span class="line">1. 安装 cluster 组件</span><br><span class="line">tiup cluster</span><br><span class="line"></span><br><span class="line">2.修改sshd 配置文件</span><br><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">MaxSessions = 20</span><br><span class="line">service sshd restart</span><br><span class="line"></span><br><span class="line">3.新建配置文件 topo.yaml 并按模板编辑。替换里面的host 为本机的IP</span><br><span class="line">user: <span class="string">&quot;tidb&quot;</span>：表示通过 tidb 系统用户（部署会自动创建）来做集群的内部管理，默认使用 22 端口通过 ssh 登录目标机器</span><br><span class="line">replication.enable-placement-rules：设置这个 PD 参数来确保 TiFlash 正常运行</span><br><span class="line">host：设置为本部署主机的 IP</span><br><span class="line"></span><br><span class="line">vi topo.yaml</span><br><span class="line"><span class="comment"># # Global variables are applied to all deployments and used as the default value of</span></span><br><span class="line"><span class="comment"># # the deployments if a specific deployment value is missing.</span></span><br><span class="line">global:</span><br><span class="line"> user: <span class="string">&quot;tidb&quot;</span></span><br><span class="line"> ssh_port: 22</span><br><span class="line"> deploy_dir: <span class="string">&quot;/tidb-deploy&quot;</span></span><br><span class="line"> data_dir: <span class="string">&quot;/tidb-data&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # Monitored variables are applied to all the machines.</span></span><br><span class="line">monitored:</span><br><span class="line"> node_exporter_port: 9100</span><br><span class="line"> blackbox_exporter_port: 9115</span><br><span class="line"></span><br><span class="line">server_configs:</span><br><span class="line"> tidb:</span><br><span class="line">   log.slow-threshold: 300</span><br><span class="line"> tikv:</span><br><span class="line">   readpool.storage.use-unified-pool: <span class="literal">false</span></span><br><span class="line">   readpool.coprocessor.use-unified-pool: <span class="literal">true</span></span><br><span class="line"> pd:</span><br><span class="line">   replication.enable-placement-rules: <span class="literal">true</span></span><br><span class="line">   replication.location-labels: [<span class="string">&quot;host&quot;</span>]</span><br><span class="line"> tiflash:</span><br><span class="line">   logger.level: <span class="string">&quot;info&quot;</span></span><br><span class="line"></span><br><span class="line">pd_servers:</span><br><span class="line"> - host: 192.168.56.14</span><br><span class="line"></span><br><span class="line">tidb_servers:</span><br><span class="line"> - host: 192.168.56.14</span><br><span class="line"></span><br><span class="line">tikv_servers:</span><br><span class="line"> - host: 192.168.56.14</span><br><span class="line">   port: 20160</span><br><span class="line">   status_port: 20180</span><br><span class="line">   config:</span><br><span class="line">     server.labels: &#123; host: <span class="string">&quot;logic-host-1&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"> - host: 192.168.56.14</span><br><span class="line">   port: 20161</span><br><span class="line">   status_port: 20181</span><br><span class="line">   config:</span><br><span class="line">     server.labels: &#123; host: <span class="string">&quot;logic-host-2&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"> - host: 192.168.56.14</span><br><span class="line">   port: 20162</span><br><span class="line">   status_port: 20182</span><br><span class="line">   config:</span><br><span class="line">     server.labels: &#123; host: <span class="string">&quot;logic-host-3&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">tiflash_servers:</span><br><span class="line"> - host: 192.168.56.14</span><br><span class="line"></span><br><span class="line">monitoring_servers:</span><br><span class="line"> - host: 192.168.56.14</span><br><span class="line"></span><br><span class="line">grafana_servers:</span><br><span class="line"> - host: 192.168.56.14</span><br><span class="line"></span><br><span class="line">4. 执行集群部署命令</span><br><span class="line"></span><br><span class="line"><span class="comment">#tiup cluster deploy &lt;cluster-name&gt; &lt;tidb-version&gt; ./topo.yaml --user root -p</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># tiup cluster deploy TiDBCluster v6.1.3 ./topo.yaml --user root -p</span></span><br><span class="line">tiup is checking updates <span class="keyword">for</span> component cluster ...</span><br><span class="line">Starting component `cluster`: /root/.tiup/components/cluster/v1.11.1/tiup-cluster deploy TiDBCluster v6.1.3 ./topo.yaml --user root -p</span><br><span class="line">Input SSH password: </span><br><span class="line"></span><br><span class="line">+ Detect CPU Arch Name</span><br><span class="line">  - Detecting node 192.168.56.14 Arch info ... Done</span><br><span class="line"></span><br><span class="line">+ Detect CPU OS Name</span><br><span class="line">  - Detecting node 192.168.56.14 OS info ... Done</span><br><span class="line">Please confirm your topology:</span><br><span class="line">Cluster <span class="built_in">type</span>:    tidb</span><br><span class="line">Cluster name:    TiDBCluster</span><br><span class="line">Cluster version: v6.1.3</span><br><span class="line">Role        Host           Ports                            OS/Arch       Directories</span><br><span class="line">----        ----           -----                            -------       -----------</span><br><span class="line">pd          192.168.56.14  2379/2380                        linux/x86_64  /tidb-deploy/pd-2379,/tidb-data/pd-2379</span><br><span class="line">tikv        192.168.56.14  20160/20180                      linux/x86_64  /tidb-deploy/tikv-20160,/tidb-data/tikv-20160</span><br><span class="line">tikv        192.168.56.14  20161/20181                      linux/x86_64  /tidb-deploy/tikv-20161,/tidb-data/tikv-20161</span><br><span class="line">tikv        192.168.56.14  20162/20182                      linux/x86_64  /tidb-deploy/tikv-20162,/tidb-data/tikv-20162</span><br><span class="line">tidb        192.168.56.14  4000/10080                       linux/x86_64  /tidb-deploy/tidb-4000</span><br><span class="line">tiflash     192.168.56.14  9000/8123/3930/20170/20292/8234  linux/x86_64  /tidb-deploy/tiflash-9000,/tidb-data/tiflash-9000</span><br><span class="line">prometheus  192.168.56.14  9090/12020                       linux/x86_64  /tidb-deploy/prometheus-9090,/tidb-data/prometheus-9090</span><br><span class="line">grafana     192.168.56.14  3000                             linux/x86_64  /tidb-deploy/grafana-3000</span><br><span class="line">Attention:</span><br><span class="line">    1. If the topology is not what you expected, check your yaml file.</span><br><span class="line">    2. Please confirm there is no port/directory conflicts <span class="keyword">in</span> same host.</span><br><span class="line">Do you want to <span class="built_in">continue</span>? [y/N]: (default=N) y</span><br><span class="line">+ Generate SSH keys ... Done</span><br><span class="line">+ Download TiDB components</span><br><span class="line">  - Download pd:v6.1.3 (linux/amd64) ... Done</span><br><span class="line">  - Download tikv:v6.1.3 (linux/amd64) ... Error</span><br><span class="line">  - Download tidb:v6.1.3 (linux/amd64) ... Error</span><br><span class="line">  - Download tiflash:v6.1.3 (linux/amd64) ... Error</span><br><span class="line">  - Download prometheus:v6.1.3 (linux/amd64) ... Done</span><br><span class="line">  - Download grafana:v6.1.3 (linux/amd64) ... Done</span><br><span class="line">  - Download node_exporter: (linux/amd64) ... Done</span><br><span class="line">  - Download blackbox_exporter: (linux/amd64) ... Done</span><br><span class="line"></span><br><span class="line">Error: download from https://tiup-mirrors.pingcap.com/tiflash-v6.1.3-linux-amd64.tar.gz failed: <span class="built_in">read</span> tcp 10.0.2.13:50586-&gt;183.60.150.53:443: <span class="built_in">read</span>: connection reset by peer</span><br><span class="line"></span><br><span class="line">Verbose debug logs has been written to /root/.tiup/logs/tiup-cluster-debug-2022-12-13-10-37-25.<span class="built_in">log</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">#网络请求超时</span></span><br><span class="line">好吧。try it later... 1000 years later...</span><br><span class="line">try it again and again</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># tiup cluster deploy TiDBCluster v6.1.3 ./topo.yaml --user root -p</span></span><br><span class="line">tiup is checking updates <span class="keyword">for</span> component cluster ...</span><br><span class="line">Starting component `cluster`: /root/.tiup/components/cluster/v1.11.1/tiup-cluster deploy TiDBCluster v6.1.3 ./topo.yaml --user root -p</span><br><span class="line">Input SSH password: </span><br><span class="line"></span><br><span class="line">+ Detect CPU Arch Name</span><br><span class="line">  - Detecting node 192.168.56.14 Arch info ... Done</span><br><span class="line"></span><br><span class="line">+ Detect CPU OS Name</span><br><span class="line">  - Detecting node 192.168.56.14 OS info ... Done</span><br><span class="line">Please confirm your topology:</span><br><span class="line">Cluster <span class="built_in">type</span>:    tidb</span><br><span class="line">Cluster name:    TiDBCluster</span><br><span class="line">Cluster version: v6.1.3</span><br><span class="line">Role        Host           Ports                            OS/Arch       Directories</span><br><span class="line">----        ----           -----                            -------       -----------</span><br><span class="line">pd          192.168.56.14  2379/2380                        linux/x86_64  /tidb-deploy/pd-2379,/tidb-data/pd-2379</span><br><span class="line">tikv        192.168.56.14  20160/20180                      linux/x86_64  /tidb-deploy/tikv-20160,/tidb-data/tikv-20160</span><br><span class="line">tikv        192.168.56.14  20161/20181                      linux/x86_64  /tidb-deploy/tikv-20161,/tidb-data/tikv-20161</span><br><span class="line">tikv        192.168.56.14  20162/20182                      linux/x86_64  /tidb-deploy/tikv-20162,/tidb-data/tikv-20162</span><br><span class="line">tidb        192.168.56.14  4000/10080                       linux/x86_64  /tidb-deploy/tidb-4000</span><br><span class="line">tiflash     192.168.56.14  9000/8123/3930/20170/20292/8234  linux/x86_64  /tidb-deploy/tiflash-9000,/tidb-data/tiflash-9000</span><br><span class="line">prometheus  192.168.56.14  9090/12020                       linux/x86_64  /tidb-deploy/prometheus-9090,/tidb-data/prometheus-9090</span><br><span class="line">grafana     192.168.56.14  3000                             linux/x86_64  /tidb-deploy/grafana-3000</span><br><span class="line">Attention:</span><br><span class="line">    1. If the topology is not what you expected, check your yaml file.</span><br><span class="line">    2. Please confirm there is no port/directory conflicts <span class="keyword">in</span> same host.</span><br><span class="line">Do you want to <span class="built_in">continue</span>? [y/N]: (default=N) y</span><br><span class="line">+ Generate SSH keys ... Done</span><br><span class="line">+ Download TiDB components</span><br><span class="line">  - Download pd:v6.1.3 (linux/amd64) ... Done</span><br><span class="line">  - Download tikv:v6.1.3 (linux/amd64) ... Done</span><br><span class="line">  - Download tidb:v6.1.3 (linux/amd64) ... Done</span><br><span class="line">  - Download tiflash:v6.1.3 (linux/amd64) ... Done</span><br><span class="line">  - Download prometheus:v6.1.3 (linux/amd64) ... Done</span><br><span class="line">  - Download grafana:v6.1.3 (linux/amd64) ... Done</span><br><span class="line">  - Download node_exporter: (linux/amd64) ... Done</span><br><span class="line">  - Download blackbox_exporter: (linux/amd64) ... Done</span><br><span class="line">+ Initialize target host environments</span><br><span class="line">  - Prepare 192.168.56.14:22 ... Done</span><br><span class="line">+ Deploy TiDB instance</span><br><span class="line">  - Copy pd -&gt; 192.168.56.14 ... Done</span><br><span class="line">  - Copy tikv -&gt; 192.168.56.14 ... Done</span><br><span class="line">  - Copy tikv -&gt; 192.168.56.14 ... Done</span><br><span class="line">  - Copy tikv -&gt; 192.168.56.14 ... Done</span><br><span class="line">  - Copy tidb -&gt; 192.168.56.14 ... Done</span><br><span class="line">  - Copy tiflash -&gt; 192.168.56.14 ... Done</span><br><span class="line">  - Copy prometheus -&gt; 192.168.56.14 ... Done</span><br><span class="line">  - Copy grafana -&gt; 192.168.56.14 ... Done</span><br><span class="line">  - Deploy node_exporter -&gt; 192.168.56.14 ... Done</span><br><span class="line">  - Deploy blackbox_exporter -&gt; 192.168.56.14 ... Done</span><br><span class="line">+ Copy certificate to remote host</span><br><span class="line">+ Init instance configs</span><br><span class="line">  - Generate config pd -&gt; 192.168.56.14:2379 ... Done</span><br><span class="line">  - Generate config tikv -&gt; 192.168.56.14:20160 ... Done</span><br><span class="line">  - Generate config tikv -&gt; 192.168.56.14:20161 ... Done</span><br><span class="line">  - Generate config tikv -&gt; 192.168.56.14:20162 ... Done</span><br><span class="line">  - Generate config tidb -&gt; 192.168.56.14:4000 ... Done</span><br><span class="line">  - Generate config tiflash -&gt; 192.168.56.14:9000 ... Done</span><br><span class="line">  - Generate config prometheus -&gt; 192.168.56.14:9090 ... Done</span><br><span class="line">  - Generate config grafana -&gt; 192.168.56.14:3000 ... Done</span><br><span class="line">+ Init monitor configs</span><br><span class="line">  - Generate config node_exporter -&gt; 192.168.56.14 ... Done</span><br><span class="line">  - Generate config blackbox_exporter -&gt; 192.168.56.14 ... Done</span><br><span class="line">+ Check status</span><br><span class="line">Enabling component pd</span><br><span class="line">        Enabling instance 192.168.56.14:2379</span><br><span class="line">        Enable instance 192.168.56.14:2379 success</span><br><span class="line">Enabling component tikv</span><br><span class="line">        Enabling instance 192.168.56.14:20162</span><br><span class="line">        Enabling instance 192.168.56.14:20160</span><br><span class="line">        Enabling instance 192.168.56.14:20161</span><br><span class="line">        Enable instance 192.168.56.14:20161 success</span><br><span class="line">        Enable instance 192.168.56.14:20162 success</span><br><span class="line">        Enable instance 192.168.56.14:20160 success</span><br><span class="line">Enabling component tidb</span><br><span class="line">        Enabling instance 192.168.56.14:4000</span><br><span class="line">        Enable instance 192.168.56.14:4000 success</span><br><span class="line">Enabling component tiflash</span><br><span class="line">        Enabling instance 192.168.56.14:9000</span><br><span class="line">        Enable instance 192.168.56.14:9000 success</span><br><span class="line">Enabling component prometheus</span><br><span class="line">        Enabling instance 192.168.56.14:9090</span><br><span class="line">        Enable instance 192.168.56.14:9090 success</span><br><span class="line">Enabling component grafana</span><br><span class="line">        Enabling instance 192.168.56.14:3000</span><br><span class="line">        Enable instance 192.168.56.14:3000 success</span><br><span class="line">Enabling component node_exporter</span><br><span class="line">        Enabling instance 192.168.56.14</span><br><span class="line">        Enable 192.168.56.14 success</span><br><span class="line">Enabling component blackbox_exporter</span><br><span class="line">        Enabling instance 192.168.56.14</span><br><span class="line">        Enable 192.168.56.14 success</span><br><span class="line">Cluster `TiDBCluster` deployed successfully, you can start it with <span class="built_in">command</span>: `tiup cluster start TiDBCluster --init`</span><br><span class="line"></span><br><span class="line"><span class="comment">#终于下载安装成功。失败后执行相同的命令重试。之前下载成功的包只是验证不需要重新下载。直到全部done 之后就自动安装了</span></span><br><span class="line"><span class="comment">#迫不及待。来启动下看看</span></span><br><span class="line">tiup cluster start TiDBCluster --init</span><br><span class="line">[root@localhost ~]<span class="comment"># tiup cluster start TiDBCluster --init</span></span><br><span class="line">tiup is checking updates <span class="keyword">for</span> component cluster ...</span><br><span class="line">Starting component `cluster`: /root/.tiup/components/cluster/v1.11.1/tiup-cluster start TiDBCluster --init</span><br><span class="line">Starting cluster TiDBCluster...</span><br><span class="line">+ [ Serial ] - SSHKeySet: privateKey=/root/.tiup/storage/cluster/clusters/TiDBCluster/ssh/id_rsa, publicKey=/root/.tiup/storage/cluster/clusters/TiDBCluster/ssh/id_rsa.pub</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [ Serial ] - StartCluster</span><br><span class="line">Starting component pd</span><br><span class="line">        Starting instance 192.168.56.14:2379</span><br><span class="line">        Start instance 192.168.56.14:2379 success</span><br><span class="line">Starting component tikv</span><br><span class="line">        Starting instance 192.168.56.14:20162</span><br><span class="line">        Starting instance 192.168.56.14:20160</span><br><span class="line">        Starting instance 192.168.56.14:20161</span><br><span class="line">        Start instance 192.168.56.14:20161 success</span><br><span class="line">        Start instance 192.168.56.14:20162 success</span><br><span class="line">        Start instance 192.168.56.14:20160 success</span><br><span class="line">Starting component tidb</span><br><span class="line">        Starting instance 192.168.56.14:4000</span><br><span class="line"></span><br><span class="line">Error: failed to start tidb: failed to start: 192.168.56.14 tidb-4000.service, please check the instance<span class="string">&#x27;s log(/tidb-deploy/tidb-4000/log) for more detail.: timed out waiting for port 4000 to be started after 2m0s</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">报错了</span></span><br><span class="line"><span class="string">查看日志：</span></span><br><span class="line"><span class="string">vi /tidb-deploy/tidb-4000/log/tidb.log</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">[2022/12/13 10:42:49.558 +08:00] [FATAL] [bootstrap.go:2088] [&quot;mustExecute error&quot;] [error=&quot;tikv disk full&quot;] [stack=&quot;github.com/pingcap/tidb/session.mustExecute\n\t/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tidb/session/bootstrap.go:2088\ngithub.com/pingcap/tidb/session.insertBuiltinBindInfoRow\n\t/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tidb/session/bootstrap.go:1461\ngithub.com/pingcap/tidb/session.initBindInfoTable\n\t/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tidb/session/bootstrap.go:1457\ngithub.com/pingcap/tidb/session.doDDLWorks\n\t/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tidb/session/bootstrap.go:1941\ngithub.com/pingcap/tidb/session.bootstrap\n\t/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tidb/session/bootstrap.go:445\ngithub.com/pingcap/tidb/session.runInBootstrapSession\n\t/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tidb/session/session.go:2961\ngithub.com/pingcap/tidb/session.BootstrapSession\n\t/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tidb/session/session.go:2849\nmain.createStoreAndDomain\n\t/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tidb/tidb-server/main.go:296\nmain.main\n\t/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tidb/tidb-server/main.go:202\nruntime.main\n\t/usr/local/go/src/runtime/proc.go:250&quot;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">error=&quot;tikv disk full&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">但是查看磁盘信息</span></span><br><span class="line"><span class="string">[root@localhost ~]# df -h</span></span><br><span class="line"><span class="string">Filesystem               Size  Used Avail Use% Mounted on</span></span><br><span class="line"><span class="string">devtmpfs                 8.6G     0  8.6G   0% /dev</span></span><br><span class="line"><span class="string">tmpfs                    8.6G     0  8.6G   0% /dev/shm</span></span><br><span class="line"><span class="string">tmpfs                    8.6G  8.6M  8.6G   1% /run</span></span><br><span class="line"><span class="string">tmpfs                    8.6G     0  8.6G   0% /sys/fs/cgroup</span></span><br><span class="line"><span class="string">/dev/mapper/centos-root  9.2G  6.3G  3.0G  68% /</span></span><br><span class="line"><span class="string">/dev/sda1               1014M  156M  859M  16% /boot</span></span><br><span class="line"><span class="string">tmpfs                    1.8G     0  1.8G   0% /run/user/0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">还有3G 空闲空间</span></span><br></pre></td></tr></table></figure><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>最后在社区论坛翻到一篇提问<br><a href="https://asktug.com/t/topic/513370">https://asktug.com/t/topic/513370</a></p><p>里面有提到可能是磁盘预留空间过小<br><a href="https://docs.pingcap.com/zh/tidb/stable/tikv-configuration-file/#reserve-space">https://docs.pingcap.com/zh/tidb/stable/tikv-configuration-file/#reserve-space</a><br>reserve-space<br>TiKV 启动时会预留一块空间用于保护磁盘空间。当磁盘剩余空间小于该预留空间时，<br>TiKV 会限制部分写操作。预留空间形式上分为两个部分：预留空间的 80% 用作磁盘空间不足时的运维操作所<br>需要的额外磁盘空间，剩余的 20% 为磁盘临时文件。在回收空间的过程中，如果额外使用的磁盘空间过多，导致<br>存储耗尽时，该临时文件会成为恢复服务的最后一道防御。<br>临时文件名为 space_placeholder_file，位于 storage.data-dir 目录下。当 TiKV 因磁盘空间耗尽而下线时，<br>重启 TiKV 会自动删除该临时文件，并自动尝试回收空间。当剩余空间不足时，TiKV 不会创建该临时文件。防御的<br>有效性与预留空间的大小有关。预留空间大小的计算方式为磁盘容量的 5% 与该配置项之间的最大值。当该配置项的<br>值为 0MB 时，TiKV 会关闭磁盘防护功能。<br>默认值：5GB<br>单位：MB|GB</p><p>停服务，停机把空间调大<br>由于虚拟机使用vmdk 格式。在OVM 里面需先改成vdi 才能扩容<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;D:\VirtualBox\VboxManage clonehd --format VDI F:\VirtualBox_VMS\TiDB\TiDB-disk1.vmdk F:\VirtualBox_VMS\TiDB\TiDB-disk1.vdi</span><br><span class="line">0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%</span><br><span class="line">Clone medium created in format &#x27;VDI&#x27;. UUID: f3343571-9286-4de3-8d81-2db0e1014cdf</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator&gt;D:\VirtualBox\VboxManage modifymedium F:\VirtualBox_VMS\TiDB\TiDB-disk1.vdi --resize 40960</span><br><span class="line">0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%</span><br><span class="line"></span><br><span class="line">在ovm 里面把存储修改为扩容的TiDB-disk1.vdi </span><br><span class="line">然后启动实例</span><br></pre></td></tr></table></figure></p><p>修改分区<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# fdisk /dev/sda</span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Command (m for help): p</span><br><span class="line"></span><br><span class="line">Disk /dev/sda: 42.9 GB, 42949672960 bytes, 83886080 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x000be816</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200    16777215     7339008   8e  Linux LVM</span><br><span class="line">/dev/sda3        16777216    41943039    12582912    5  Extended</span><br><span class="line">/dev/sda5        16779264    41943039    12581888   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">Command (m for help): n</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (2 primary, 1 extended, 1 free)</span><br><span class="line">   l   logical (numbered from 5)</span><br><span class="line">Select (default p): p</span><br><span class="line">Selected partition 4</span><br><span class="line">First sector (41943040-83886079, default 41943040): </span><br><span class="line">Using default value 41943040</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (41943040-83886079, default 83886079): </span><br><span class="line">Using default value 83886079</span><br><span class="line">Partition 4 of type Linux and of size 20 GiB is set</span><br><span class="line"></span><br><span class="line">Command (m for help): p</span><br><span class="line"></span><br><span class="line">Disk /dev/sda: 42.9 GB, 42949672960 bytes, 83886080 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x000be816</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200    16777215     7339008   8e  Linux LVM</span><br><span class="line">/dev/sda3        16777216    41943039    12582912    5  Extended</span><br><span class="line">/dev/sda4        41943040    83886079    20971520   83  Linux</span><br><span class="line">/dev/sda5        16779264    41943039    12581888   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">##格式化新分区</span><br><span class="line">[root@localhost ~]# mkfs -t xfs /dev/sda4</span><br><span class="line">meta-data=/dev/sda4              isize=512    agcount=4, agsize=1310720 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=5242880, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line">log      =internal log           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line"></span><br><span class="line">##创建新的逻辑卷</span><br><span class="line">[root@localhost ~]# pvcreate /dev/sda4</span><br><span class="line">WARNING: xfs signature detected on /dev/sda4 at offset 0. Wipe it? [y/n]: y</span><br><span class="line">  Wiping xfs signature on /dev/sda4.</span><br><span class="line">  Physical volume &quot;/dev/sda4&quot; successfully created.</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# vgdisplay </span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br><span class="line">  System ID             </span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        3</span><br><span class="line">  Metadata Sequence No  6</span><br><span class="line">  VG Access             read/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                2</span><br><span class="line">  Open LV               2</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                3</span><br><span class="line">  Act PV                3</span><br><span class="line">  VG Size               &lt;38.99 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              9981</span><br><span class="line">  Alloc PE / Size       2559 / &lt;10.00 GiB</span><br><span class="line">  Free  PE / Size       7422 / 28.99 GiB</span><br><span class="line">  VG UUID               3JfbC5-EXRn-70u3-rRza-aKuL-Z9bP-mS8aRQ</span><br><span class="line"></span><br><span class="line">##扩展跟目录分区</span><br><span class="line">[root@localhost ~]# lvextend -L +20G /dev/centos/root</span><br><span class="line">  Size of logical volume centos/root changed from &lt;9.20 GiB (2354 extents) to &lt;29.20 GiB (7474 extents).</span><br><span class="line">  Logical volume centos/root successfully resized.  </span><br><span class="line">##同步文件系统</span><br><span class="line">[root@localhost ~]# xfs_growfs /dev/mapper/centos-root </span><br><span class="line">meta-data=/dev/mapper/centos-root isize=512    agcount=6, agsize=406016 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=2410496, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line">log      =internal               bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# df -h</span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs                 8.6G     0  8.6G   0% /dev</span><br><span class="line">tmpfs                    8.6G     0  8.6G   0% /dev/shm</span><br><span class="line">tmpfs                    8.6G  8.6M  8.6G   1% /run</span><br><span class="line">tmpfs                    8.6G     0  8.6G   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root   30G  6.3G   23G  22% /</span><br><span class="line">/dev/sda1               1014M  156M  859M  16% /boot</span><br><span class="line">tmpfs                    1.8G     0  1.8G   0% /run/user/0</span><br></pre></td></tr></table></figure></p><p>再次启动看看<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# tiup cluster start TiDBCluster --init</span><br><span class="line">tiup is checking updates for component cluster ...</span><br><span class="line">Starting component `cluster`: /root/.tiup/components/cluster/v1.11.1/tiup-cluster start TiDBCluster --init</span><br><span class="line">Starting cluster TiDBCluster...</span><br><span class="line">+ [ Serial ] - SSHKeySet: privateKey=/root/.tiup/storage/cluster/clusters/TiDBCluster/ssh/id_rsa, publicKey=/root/.tiup/storage/cluster/clusters/TiDBCluster/ssh/id_rsa.pub</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [Parallel] - UserSSH: user=tidb, host=192.168.56.14</span><br><span class="line">+ [ Serial ] - StartCluster</span><br><span class="line">Starting component pd</span><br><span class="line">        Starting instance 192.168.56.14:2379</span><br><span class="line">        Start instance 192.168.56.14:2379 success</span><br><span class="line">Starting component tikv</span><br><span class="line">        Starting instance 192.168.56.14:20162</span><br><span class="line">        Starting instance 192.168.56.14:20160</span><br><span class="line">        Starting instance 192.168.56.14:20161</span><br><span class="line">        Start instance 192.168.56.14:20161 success</span><br><span class="line">        Start instance 192.168.56.14:20162 success</span><br><span class="line">        Start instance 192.168.56.14:20160 success</span><br><span class="line">Starting component tidb</span><br><span class="line">        Starting instance 192.168.56.14:4000</span><br><span class="line">        Start instance 192.168.56.14:4000 success</span><br><span class="line">Starting component tiflash</span><br><span class="line">        Starting instance 192.168.56.14:9000</span><br><span class="line">        Start instance 192.168.56.14:9000 success</span><br><span class="line">Starting component prometheus</span><br><span class="line">        Starting instance 192.168.56.14:9090</span><br><span class="line">        Start instance 192.168.56.14:9090 success</span><br><span class="line">Starting component grafana</span><br><span class="line">        Starting instance 192.168.56.14:3000</span><br><span class="line">        Start instance 192.168.56.14:3000 success</span><br><span class="line">Starting component node_exporter</span><br><span class="line">        Starting instance 192.168.56.14</span><br><span class="line">        Start 192.168.56.14 success</span><br><span class="line">Starting component blackbox_exporter</span><br><span class="line">        Starting instance 192.168.56.14</span><br><span class="line">        Start 192.168.56.14 success</span><br><span class="line">+ [ Serial ] - UpdateTopology: cluster=TiDBCluster</span><br><span class="line">Started cluster `TiDBCluster` successfully</span><br><span class="line">The root password of TiDB database has been changed.</span><br><span class="line">The new password is: &#x27;9g_K-b=DTx42fS81@3&#x27;.</span><br><span class="line">Copy and record it to somewhere safe, it is only displayed once, and will not be stored.</span><br><span class="line">The generated password can NOT be get and shown again.</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>启动成功了</p><p>查看节点状态<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# tiup cluster display TiDBCluster</span><br><span class="line">tiup is checking updates for component cluster ...</span><br><span class="line">Starting component `cluster`: /root/.tiup/components/cluster/v1.11.1/tiup-cluster display TiDBCluster</span><br><span class="line">Cluster type:       tidb</span><br><span class="line">Cluster name:       TiDBCluster</span><br><span class="line">Cluster version:    v6.1.3</span><br><span class="line">Deploy user:        tidb</span><br><span class="line">SSH type:           builtin</span><br><span class="line">Dashboard URL:      http://192.168.56.14:2379/dashboard</span><br><span class="line">Grafana URL:        http://192.168.56.14:3000</span><br><span class="line">ID                   Role        Host           Ports                            OS/Arch       Status   Data Dir                    Deploy Dir</span><br><span class="line">--                   ----        ----           -----                            -------       ------   --------                    ----------</span><br><span class="line">192.168.56.14:3000   grafana     192.168.56.14  3000                             linux/x86_64  Up       -                           /tidb-deploy/grafana-3000</span><br><span class="line">192.168.56.14:2379   pd          192.168.56.14  2379/2380                        linux/x86_64  Up|L|UI  /tidb-data/pd-2379          /tidb-deploy/pd-2379</span><br><span class="line">192.168.56.14:9090   prometheus  192.168.56.14  9090/12020                       linux/x86_64  Up       /tidb-data/prometheus-9090  /tidb-deploy/prometheus-9090</span><br><span class="line">192.168.56.14:4000   tidb        192.168.56.14  4000/10080                       linux/x86_64  Up       -                           /tidb-deploy/tidb-4000</span><br><span class="line">192.168.56.14:9000   tiflash     192.168.56.14  9000/8123/3930/20170/20292/8234  linux/x86_64  Up       /tidb-data/tiflash-9000     /tidb-deploy/tiflash-9000</span><br><span class="line">192.168.56.14:20160  tikv        192.168.56.14  20160/20180                      linux/x86_64  Up       /tidb-data/tikv-20160       /tidb-deploy/tikv-20160</span><br><span class="line">192.168.56.14:20161  tikv        192.168.56.14  20161/20181                      linux/x86_64  Up       /tidb-data/tikv-20161       /tidb-deploy/tikv-20161</span><br><span class="line">192.168.56.14:20162  tikv        192.168.56.14  20162/20182                      linux/x86_64  Up       /tidb-data/tikv-20162       /tidb-deploy/tikv-20162</span><br><span class="line">Total nodes: 8</span><br><span class="line"></span><br><span class="line">查看当前部署的集群列表</span><br><span class="line">[root@localhost ~]# tiup cluster list</span><br><span class="line">tiup is checking updates for component cluster ...</span><br><span class="line">Starting component `cluster`: /root/.tiup/components/cluster/v1.11.1/tiup-cluster list</span><br><span class="line">Name         User  Version  Path                                              PrivateKey</span><br><span class="line">----         ----  -------  ----                                              ----------</span><br><span class="line">TiDBCluster  tidb  v6.1.3   /root/.tiup/storage/cluster/clusters/TiDBCluster  /root/.tiup/storage/cluster/clusters/TiDBCluster/ssh/id_rsa</span><br><span class="line"></span><br><span class="line">访问数据库</span><br><span class="line">[root@localhost ~]# mysql -h 192.168.56.14 -P 4000 -uroot -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 441</span><br><span class="line">Server version: 5.7.25-TiDB-v6.1.3 TiDB Server (Apache License 2.0) Community Edition, MySQL 5.7 compatible</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MySQL [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| INFORMATION_SCHEMA |</span><br><span class="line">| METRICS_SCHEMA     |</span><br><span class="line">| PERFORMANCE_SCHEMA |</span><br><span class="line">| mysql              |</span><br><span class="line">| test               |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;TiDB-集群的基本架构&quot;&gt;&lt;a href=&quot;#TiDB-集群的基本架构&quot; class=&quot;headerlink&quot; title=&quot;TiDB 集群的基本架构&quot;&gt;&lt;/a&gt;TiDB 集群的基本架构&lt;/h3&gt;&lt;p&gt;TiDB 是众多国产数据库中，最具人气的一款。采用分布式架构</summary>
      
    
    
    
    <category term="TiDB" scheme="https://sheenzxx.github.io/categories/TiDB/"/>
    
    
    <category term="database" scheme="https://sheenzxx.github.io/tags/database/"/>
    
    <category term="tidb" scheme="https://sheenzxx.github.io/tags/tidb/"/>
    
    <category term="国产数据库" scheme="https://sheenzxx.github.io/tags/%E5%9B%BD%E4%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
