<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/10/14/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Percona xtradb Cluster 5.7 安装</title>
    <url>/2022/10/17/xtradbClusterInstall/</url>
    <content><![CDATA[<h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><p>oracle vbox : centos 7  xtradb cluster 5.7 </p>
<h3 id="1-修改主机节点名称"><a href="#1-修改主机节点名称" class="headerlink" title="1.修改主机节点名称"></a>1.修改主机节点名称</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">192.168.56.6</span><br><span class="line"><span class="comment"># hostnamectl --static set-hostname pxcnode1</span></span><br><span class="line">192.168.56.7</span><br><span class="line"><span class="comment"># hostnamectl --static set-hostname pxcnode2</span></span><br><span class="line">192.168.56.8</span><br><span class="line"><span class="comment"># hostnamectl --static set-hostname pxcnode3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span></span><br><span class="line">&gt; 192.168.56.6  pxcnode1</span><br><span class="line">&gt; 192.168.56.7  pxcnode2</span><br><span class="line">&gt; 192.168.56.8  pxcnode3</span><br><span class="line">&gt; EOF</span><br></pre></td></tr></table></figure>
<h3 id="2-关闭防火墙"><a href="#2-关闭防火墙" class="headerlink" title="2.关闭防火墙"></a>2.关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># iptables -F</span></span><br></pre></td></tr></table></figure>
<h3 id="3-关闭selinux"><a href="#3-关闭selinux" class="headerlink" title="3.关闭selinux"></a>3.关闭selinux</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27; /etc/selinux/config</span></span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># getenforce</span></span><br></pre></td></tr></table></figure>
<h3 id="4-修改内核参数"><a href="#4-修改内核参数" class="headerlink" title="4.修改内核参数"></a>4.修改内核参数</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat &gt;&gt; /etc/security/limits.conf &lt;&lt;EOF</span></span><br><span class="line">&gt; mysql  soft   <span class="built_in">nproc</span>     2047 </span><br><span class="line">&gt; mysql  hard   <span class="built_in">nproc</span>     16384</span><br><span class="line">&gt; mysql  soft   nofile    1024</span><br><span class="line">&gt; mysql  hard   nofile    65536</span><br><span class="line">&gt; mysql  soft   stack     10240</span><br><span class="line">&gt; EOF</span><br></pre></td></tr></table></figure>
<h3 id="5-修改登陆用户"><a href="#5-修改登陆用户" class="headerlink" title="5.修改登陆用户"></a>5.修改登陆用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat &gt;&gt; /etc/profile &lt;&lt;EOF</span></span><br><span class="line">&gt; <span class="keyword">if</span> [ <span class="variable">$USER</span> = <span class="string">&quot;mysql&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">&gt;     <span class="keyword">if</span> [ <span class="variable">$SHELL</span> = <span class="string">&quot;/bin/ksh&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">&gt;         <span class="built_in">ulimit</span> -p 16384</span><br><span class="line">&gt;         <span class="built_in">ulimit</span> -n 65536</span><br><span class="line">&gt;     <span class="keyword">else</span></span><br><span class="line">&gt;         <span class="built_in">ulimit</span> -u 16384 -n 65536</span><br><span class="line">&gt;     <span class="keyword">fi</span></span><br><span class="line">&gt;     <span class="built_in">umask</span> 022</span><br><span class="line">&gt; <span class="keyword">fi</span></span><br><span class="line">&gt; EOF</span><br></pre></td></tr></table></figure>
<h3 id="6-安装相关依赖包"><a href="#6-安装相关依赖包" class="headerlink" title="6.安装相关依赖包"></a>6.安装相关依赖包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install -y perl-DBD-MySQL perl-Digest-MD5 perl-Env perl-Test* openssl openssl-devel</span></span><br></pre></td></tr></table></figure>
<h3 id="7-查看并卸载-mariadb"><a href="#7-查看并卸载-mariadb" class="headerlink" title="7.查看并卸载 mariadb"></a>7.查看并卸载 mariadb</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rpm -qa |grep mariadb</span></span><br><span class="line"><span class="comment"># mariadb-libs-5.5.68-1.el7.x86_64</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rpm -e mariadb-libs-5.5.68-1.el7.x86_64 --nodeps</span></span><br></pre></td></tr></table></figure>
<h3 id="8-安装percona-repo-源-相关版本包"><a href="#8-安装percona-repo-源-相关版本包" class="headerlink" title="8.安装percona repo 源 相关版本包"></a>8.安装percona repo 源 相关版本包</h3><p>在网站上下载安装包安装的话，依赖太多。直接下载repo 源安装<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install -y https://repo.percona.com/yum/percona-release-latest.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install -y Percona-XtraDB-Cluster-57</span></span><br></pre></td></tr></table></figure></p>
<h3 id="9-安装完后会发现每个节点都已经启动了一个实例，将实例停止"><a href="#9-安装完后会发现每个节点都已经启动了一个实例，将实例停止" class="headerlink" title="9.安装完后会发现每个节点都已经启动了一个实例，将实例停止"></a>9.安装完后会发现每个节点都已经启动了一个实例，将实例停止</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ps -ef |grep mysql</span></span><br><span class="line"><span class="comment"># systemctl stop mysql</span></span><br><span class="line"></span><br><span class="line">删除实例产生的文件 </span><br><span class="line"><span class="comment"># rm -rf /var/lib/mysql</span></span><br></pre></td></tr></table></figure>
<h3 id="10-创建目录"><a href="#10-创建目录" class="headerlink" title="10. 创建目录"></a>10. 创建目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mkdir -p /data/mysql/&#123;data,redo,undo,log,run&#125;</span></span><br><span class="line"><span class="comment"># cd /data</span></span><br><span class="line"><span class="comment"># chown -R mysql.mysql /data/mysql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd /data/mysql/</span></span><br><span class="line"><span class="comment"># chmod 700 </span></span><br></pre></td></tr></table></figure>
<h3 id="11-修改-etc-my-cnf"><a href="#11-修改-etc-my-cnf" class="headerlink" title="11.修改 /etc/my.cnf"></a>11.修改 /etc/my.cnf</h3><h4 id="1-可以在这2个目录中分别配置mysql-参数以及-xtradb-cluster-参数"><a href="#1-可以在这2个目录中分别配置mysql-参数以及-xtradb-cluster-参数" class="headerlink" title="1) 可以在这2个目录中分别配置mysql 参数以及 xtradb-cluster 参数"></a>1) 可以在这2个目录中分别配置mysql 参数以及 xtradb-cluster 参数</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!includedir /etc/my.cnf.d/</span></span><br><span class="line"><span class="comment">#!includedir /etc/percona-xtradb-cluster.conf.d/</span></span><br></pre></td></tr></table></figure>
<h4 id="2）为测试方便。这里注释掉这2个。直接把所有参数写到一个文件里"><a href="#2）为测试方便。这里注释掉这2个。直接把所有参数写到一个文件里" class="headerlink" title="2）为测试方便。这里注释掉这2个。直接把所有参数写到一个文件里"></a>2）为测试方便。这里注释掉这2个。直接把所有参数写到一个文件里</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The Percona XtraDB Cluster 5.7 configuration file.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># * IMPORTANT: Additional settings that can override those from this file!</span></span><br><span class="line"><span class="comment">#   The files must end with &#x27;.cnf&#x27;, otherwise they&#x27;ll be ignored.</span></span><br><span class="line"><span class="comment">#   Please make any edits and changes to the appropriate sectional files</span></span><br><span class="line"><span class="comment">#   included below.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#!includedir /etc/my.cnf.d/</span></span><br><span class="line"><span class="comment">#!includedir /etc/percona-xtradb-cluster.conf.d/</span></span><br><span class="line">[client]</span><br><span class="line">socket=/data/mysql/run/mysql.sock</span><br><span class="line">[mysqld_safe]</span><br><span class="line">pid-file = /data/mysql/run/mysql.pid</span><br><span class="line">socket   = /data/mysql/run/mysql.sock</span><br><span class="line"><span class="built_in">nice</span>     = 0</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">#skip-grant-tables</span></span><br><span class="line"><span class="comment">#skip-name-resolve = 1</span></span><br><span class="line">user = mysql</span><br><span class="line">port = 3306</span><br><span class="line">server-id = 6</span><br><span class="line"><span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">symbolic-links=0</span><br><span class="line">basedir = /usr</span><br><span class="line">datadir = /data/mysql/data</span><br><span class="line">socket = /data/mysql/run/mysql.sock</span><br><span class="line">pid-file = /data/mysql/run/mysql.pid</span><br><span class="line">max_connections = 300</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">wait_timeout = 10800</span><br><span class="line">interactive_timeout = 10800</span><br><span class="line">log_timestamps = SYSTEM</span><br><span class="line">log-error = /data/mysql/log/error.log</span><br><span class="line"><span class="comment">#log_warnings = 2</span></span><br><span class="line">log_error_verbosity = 2</span><br><span class="line"><span class="comment">#slow_query_log = on</span></span><br><span class="line">slow_query_log_file = /data/mysql/log/mysql-slow.log</span><br><span class="line"><span class="comment">#long_query_time = 3</span></span><br><span class="line"><span class="comment">#log_queries_not_using_indexes = on</span></span><br><span class="line"><span class="comment">#general_log = on</span></span><br><span class="line">general_log_file = /data/mysql/log/mysql-general.log</span><br><span class="line">innodb_flush_log_at_trx_commit = 2</span><br><span class="line">innodb_log_buffer_size = 16777216</span><br><span class="line">innodb_log_file_size = 256M</span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line">innodb_buffer_pool_size = 512M</span><br><span class="line">innodb_log_group_home_dir = /data/mysql/redo</span><br><span class="line">innodb_undo_directory = /data/mysql/undo</span><br><span class="line">innodb_undo_tablespaces = 2</span><br><span class="line">innodb_flush_method = O_DIRECT</span><br><span class="line">innodb_write_io_threads = 8</span><br><span class="line">innodb_read_io_threads = 8</span><br><span class="line">innodb_page_cleaners = 16</span><br><span class="line">innodb_io_capacity = 300</span><br><span class="line">query_cache_type = off</span><br><span class="line">query_cache_size = 0</span><br><span class="line">max_heap_table_size = 64M</span><br><span class="line">tmp_table_size = 64M</span><br><span class="line">max_allowed_packet = 16M</span><br><span class="line">thread_cache_size = 50</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">table_definition_cache = 4096</span><br><span class="line">table_open_cache = 5000</span><br><span class="line">secure_file_priv = /data/mysql/data/</span><br><span class="line">log_bin_trust_function_creators = 1</span><br><span class="line"><span class="comment">###Percona Xtradb Cluster Wsrep Configure</span></span><br><span class="line">binlog_format = ROW</span><br><span class="line">default_storage_engine = INNODB</span><br><span class="line">innodb_autoinc_lock_mode = 2</span><br><span class="line"><span class="comment">#innodb_locks_unsafe_for_binlog = 1</span></span><br><span class="line">wsrep_retry_autocommit = 1</span><br><span class="line">wsrep_auto_increment_control = 1</span><br><span class="line">wsrep_provider = /usr/lib64/galera3/libgalera_smm.so</span><br><span class="line">wsrep_provider_options = <span class="string">&quot;gcache.page_size=64M;gcache.size=1G;gcs.fc_limit=512;gcs.fc_factor=0.9;evs.send_window=256;evs.user_send_window=128&quot;</span></span><br><span class="line">wsrep_cluster_name = <span class="string">&quot;mysql_galera_cluster&quot;</span></span><br><span class="line"><span class="comment">#wsrep_cluster_address = gcomm://</span></span><br><span class="line">wsrep_cluster_address = <span class="string">&quot;gcomm://192.168.56.6,192.168.56.7,192.168.56.8&quot;</span></span><br><span class="line">wsrep_node_name = pxc-cluster1</span><br><span class="line">wsrep_node_address = 192.168.56.6</span><br><span class="line">pxc_strict_mode = PERMISSIVE</span><br><span class="line"><span class="comment">#wsrep_sst_method = rsync</span></span><br><span class="line">wsrep_sst_method=xtrabackup-v2</span><br><span class="line">wsrep_slave_threads=8</span><br><span class="line">wsrep_sst_auth=<span class="string">&quot;sstuser:passw0rd&quot;</span></span><br></pre></td></tr></table></figure>
<p>  注意wsrep_sst_auth 为 配置sst 的用户名以及密码</p>
<h3 id="12-启动第一个节点"><a href="#12-启动第一个节点" class="headerlink" title="12.启动第一个节点"></a>12.启动第一个节点</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># systemctl start mysql@bootstrap</span></span><br><span class="line"></span><br><span class="line">启动成功后登陆数据库重新设置root 密码（初始化密码在err 文件里面）以及 sst 用户账号密码</span><br><span class="line"><span class="comment"># mysql -uroot -p -S /data/mysql/run/mysql.sock</span></span><br><span class="line"></span><br><span class="line">mysql &gt; alter user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;sheen$123&#x27;</span>;</span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">mysql &gt; GRANT PROCESS,RELOAD,LOCK TABLES,REPLICATION CLIENT ON *.* TO <span class="string">&#x27;sstuser&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;passw0rd&#x27;</span>;</span><br><span class="line"></span><br><span class="line">mysql &gt; flush privileges;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="13-将配置文件发送到其他2个节点。并修改相关设置"><a href="#13-将配置文件发送到其他2个节点。并修改相关设置" class="headerlink" title="13.将配置文件发送到其他2个节点。并修改相关设置"></a>13.将配置文件发送到其他2个节点。并修改相关设置</h3><p>  server-id = {7,8}<br>  wsrep_node_name = {pxc-cluster2,pxc-cluster3}<br>  wsrep_node_address = {192.168.56.7,192.168.56.8}</p>
<h3 id="14-在192-168-56-7-启动第二个节点"><a href="#14-在192-168-56-7-启动第二个节点" class="headerlink" title="14.在192.168.56.7 启动第二个节点"></a>14.在192.168.56.7 启动第二个节点</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># systemctl start mysql   (注意集群只有第一个节点启动需要  @bootstrap)</span></span><br></pre></td></tr></table></figure>
<p>观察err.log 看是否正常启动</p>
<h3 id="15-在192-168-56-8-启动第三个节点"><a href="#15-在192-168-56-8-启动第三个节点" class="headerlink" title="15.在192.168.56.8 启动第三个节点"></a>15.在192.168.56.8 启动第三个节点</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># systemctl start mysql   (注意集群只有第一个节点启动需要  @bootstrap)</span></span><br></pre></td></tr></table></figure>
<h3 id="16-集群验证"><a href="#16-集群验证" class="headerlink" title="16.集群验证"></a>16.集群验证</h3><h4 id="1）-完整性验证"><a href="#1）-完整性验证" class="headerlink" title="1） 完整性验证"></a>1） 完整性验证</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql &gt; show global status <span class="built_in">where</span> variable_name <span class="keyword">in</span></span><br><span class="line">(<span class="string">&#x27;wsrep_cluster_state_uuid&#x27;</span>,<span class="string">&#x27;wsrep_cluster_conf_id&#x27;</span>,<span class="string">&#x27;wsrep_cluster_size&#x27;</span>,<span class="string">&#x27;wsrep_cluster_status&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>注意：正常情况下以下指标值，在所有节点应该都是一致的</p>
<p>wsrep_cluster_state_uuid：在集群所有节点中该值应该是相同的，若有不同值，说明该节点没有连入集群</p>
<p>wsrep_cluster_conf_id：在集群所有节点中该值应该是相同的，若有不同值，说明该节点被临时”分区”了，当节点之间网络连接恢复后，该值应该恢复成一致</p>
<p>wsrep_cluster_size：如果与集群中的节点数一致，说明所有节点已经连接</p>
<p>wsrep_cluster_status：集群状态，若不为”Primary”，说明出现”分区”或是”split-brain”状况</p>
<h4 id="2）-节点状态检查"><a href="#2）-节点状态检查" class="headerlink" title="2） 节点状态检查"></a>2） 节点状态检查</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql &gt; show global status <span class="built_in">where</span> variable_name <span class="keyword">in</span></span><br><span class="line">(<span class="string">&#x27;wsrep_ready&#x27;</span>,<span class="string">&#x27;wsrep_connected&#x27;</span>,<span class="string">&#x27;wsrep_local_state_comment&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>wsrep_ready：该值为ON，则说明可以接受SQL负载；如果为OFF，则需要检查wsrep_connected</p>
<p>wsrep_connected：如果该值为OFF，且wsrep_ready的值也为OFF，则说明该节点没有连入集群</p>
<p>(可能是wsrep_cluster_address或wsrep_cluster_name等配置错误造成的，具体需要排查错误日志)</p>
<p>wsrep_local_state_comment：若wsrep_connected为ON，但wsrep_ready为OFF，则可以从该项查看原因</p>
<h4 id="3）-集群健康度检查"><a href="#3）-集群健康度检查" class="headerlink" title="3） 集群健康度检查"></a>3） 集群健康度检查</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql &gt; show global status <span class="built_in">where</span> variable_name <span class="keyword">in</span></span><br><span class="line">(<span class="string">&#x27;wsrep_flow_control_paused&#x27;</span>,<span class="string">&#x27;wsrep_cert_deps_distance&#x27;</span>,<span class="string">&#x27;wsrep_flow_control_sent&#x27;</span>,<span class="string">&#x27;wsrep_local_recv_queue_avg&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>wsrep_flow_control_paused：表示复制停止了多长时间</p>
<p>（即因Slave延迟而慢的程度，取值范围为0~1，越靠近0越好，值为1表示复制完全停止（停止广播），可优化wsrep_slave_threads的值来改善）</p>
<p>wsrep_cert_deps_distance：表示有多少事务可以并行应用处理，wsrep_slave_threads设置的值不应该高出该值太多</p>
<p>wsrep_flow_control_sent：表示该节点已经停止复制了多少次</p>
<p>wsrep_local_recv_queue_avg：表示slave事务队列的平均长度，slave瓶颈的预兆</p>
<h3 id="16-错误排查"><a href="#16-错误排查" class="headerlink" title="16.错误排查"></a>16.错误排查</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">在启动第二节点时，报错无法启动。看第一个节点日志报如下错误</span><br><span class="line">2022/08/29 09:37:21 socat[25648] E write(6, 0x564dea85bda0, 161): No route to host</span><br><span class="line">2022/08/29 09:37:22 socat[25652] E write(6, 0x56309d047da0, 161): No route to host</span><br><span class="line">2022/08/29 09:37:23 socat[25656] E write(6, 0x55d9b229fda0, 161): No route to host</span><br><span class="line">2022/08/29 09:37:24 socat[25660] E write(6, 0x55a3732bfda0, 161): No route to host</span><br><span class="line">2022/08/29 09:37:25 socat[25663] E write(6, 0x5598aa784da0, 161): No route to host</span><br><span class="line">        2022-08-29T09:37:26.737381+08:00 WSREP_SST: [ERROR] ******************* FATAL ERROR **********************</span><br><span class="line">        2022-08-29T09:37:26.738401+08:00 WSREP_SST: [ERROR] Error <span class="keyword">while</span> sending data to joiner node:  <span class="built_in">exit</span> codes: 0 1</span><br><span class="line">        2022-08-29T09:37:26.740138+08:00 WSREP_SST: [ERROR] ******************************************************</span><br><span class="line">        2022-08-29T09:37:26.741128+08:00 WSREP_SST: [ERROR] Cleanup after <span class="built_in">exit</span> with status:32</span><br><span class="line">2022-08-29T09:37:26.749151+08:00 0 [ERROR] WSREP: Process completed with error: wsrep_sst_xtrabackup-v2 --role <span class="string">&#x27;donor&#x27;</span> --address <span class="string">&#x27;192.168.56.7:4444/xtrabackup_sst//1&#x27;</span> --socket <span class="string">&#x27;/data/  mysql/run/mysql.sock&#x27;</span> --datadir <span class="string">&#x27;/data/mysql/data/&#x27;</span> --defaults-file <span class="string">&#x27;/etc/my.cnf&#x27;</span> --defaults-group-suffix <span class="string">&#x27;&#x27;</span> --mysqld-version <span class="string">&#x27;5.7.38-41-57&#x27;</span>   <span class="string">&#x27;&#x27;</span> --gtid   <span class="string">&#x27;fd5bdb71-2513-11ed-8942-0f1687c72112:4&#x27;</span> : 32 (Broken pipe)</span><br><span class="line">2022-08-29T09:37:26.749194+08:00 0 [ERROR] WSREP: Command did not run: wsrep_sst_xtrabackup-v2 --role <span class="string">&#x27;donor&#x27;</span> --address <span class="string">&#x27;192.168.56.7:4444/xtrabackup_sst//1&#x27;</span> --socket <span class="string">&#x27;/data/mysql/  run/mysql.sock&#x27;</span> --datadir <span class="string">&#x27;/data/mysql/data/&#x27;</span> --defaults-file <span class="string">&#x27;/etc/my.cnf&#x27;</span> --defaults-group-suffix <span class="string">&#x27;&#x27;</span> --mysqld-version <span class="string">&#x27;5.7.38-41-57&#x27;</span>   <span class="string">&#x27;&#x27;</span> --gtid   <span class="string">&#x27;fd5bdb71-2513-11ed-8942-0f1687c72112:4&#x27;</span></span><br><span class="line">2022-08-29T09:37:26.750072+08:00 0 [Warning] WSREP: 1.0 (pxc-cluster1): State transfer to 0.0 (pxc-cluster2) failed: -32 (Broken pipe)</span><br></pre></td></tr></table></figure>
<p>出现这个错误是防火墙的问题。 执行 iptables -F 清除防火墙规则</p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>percona</tag>
        <tag>cluster</tag>
      </tags>
  </entry>
  <entry>
    <title>postgis 插件安装</title>
    <url>/2022/10/14/postgisInstall/</url>
    <content><![CDATA[<h3 id="安装简介"><a href="#安装简介" class="headerlink" title="安装简介"></a>安装简介</h3><p>安装postgresql(已有跳过)—-&gt;安装postgis所需要的依赖—-&gt;安装postgis—-&gt;进入postgresql数据库—-&gt;指定数据库添加扩展<br>postgresql是基础软件，因此是必须第一个安装的，而postgis的依赖可分为两个部分，一部分是必须的库，包含 geos库，gdal库，<br>proj库，json-c库，libXML2库，这五个库如果正确安装了，那么就已经可以编译安装postgis并在pg数据中创建扩展了，但是需要<br>说明的是，此时的postgis并不支持3d数据的分析，存储，计算等工作，仅仅支持2d的地理信息。如果需要支持3d 则需要再安装四个<br>库，这四个库分别是protobuf，protobuf-c，cgal，sfcgal，这四个库均依赖于boost 库,在选择版本上要以boost 库版本为基准。<br>下面来开始安装，以全新的环境未安装postgresql 数据库做示例,所有软件包均放在 /data 目录下</p>
<h3 id="本文安装环境"><a href="#本文安装环境" class="headerlink" title="本文安装环境"></a>本文安装环境</h3><p>centos 7 3.10.0-1160.71.1.el7.x86_64</p>
<h3 id="postgis-安装的前置要求"><a href="#postgis-安装的前置要求" class="headerlink" title="postgis 安装的前置要求:"></a>postgis 安装的前置要求:</h3><ol>
<li>PostgreSQL 9.6 - 15</li>
<li>GNU C compiler (gcc)  gcc gcc-c++ 编译器</li>
<li>make 工具</li>
<li>proj  版本要求 &gt;= 4.9  找相应版本（本文用的是 proj.7.1.0） used to provide coordinate reprojection support within PostGIS     <a href="https://proj.org/">https://proj.org/</a> </li>
<li>GEOS  版本要求 &gt;= 3.6 geos 3.9 支持所有特性 （本文用的是 geos-3.8.3)  <a href="http://trac.osgeo.org/geos/">http://trac.osgeo.org/geos/</a> </li>
<li>libXML2 版本要求 &gt;= 2.5 (本文用的是libxml2-2.9.1) 当前用于一些 imports 函数 (ST_GeomFromGML and ST_GeomFromKML)</li>
<li>json-c  版本要求 &gt;=0.9 (本文用的是json-c-json-c-0.13.1-20180305) 用于 ST_GeomFromGeoJson 函数  <a href="https://github.com/json-c/json-c/releases/">https://github.com/json-c/json-c/releases/</a></li>
<li>gdal 版本要求 2+ ，3+ 更好 (本文用的是 gdal-3.5.2) raster支持  <a href="http://trac.osgeo.org/gdal/wiki/DownloadSource">http://trac.osgeo.org/gdal/wiki/DownloadSource</a></li>
</ol>
<h3 id="可选项"><a href="#可选项" class="headerlink" title="可选项"></a>可选项</h3><ol>
<li>dgal</li>
<li>gtk</li>
<li>sfcgal （支持3D坐标必备）</li>
<li>protobuf-c  ST_AsMVT可用</li>
<li>CUnit</li>
<li>DBLatex</li>
<li>ImageMagick </li>
</ol>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>boost , libxml2 都通过yum 安装 降低难度，gcc gcc-c++ 也通过yum 安装。自己安装更高的版本后续编译也会带来很多问题。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install -y lrzsz wget perl-ExtUtils-Embed \</span></span><br><span class="line">    readline-devel zlib-devel pam-devel \</span><br><span class="line">    libxml2-devel libxslt-devel openldap-devel \</span><br><span class="line">    python-devel gcc-c++ openssl-devel cmake libtool \</span><br><span class="line">    gcc libffi-devel mpfr-devel gmp-devel boost-devel</span><br></pre></td></tr></table></figure>
<p>安装完通过rpm -qa |grep xxx 可以看到<br>libxml2-2.9.1-6.el7_9.6.x86_64<br>gcc-c++-4.8.5-44.el7.x86_64<br>gcc-4.8.5-44.el7.x86_64<br>boost-1.53.0-28.el7.x86_64 （ pg_routing 版本3+ 要求 boost-1.56+ 我们选择 pgrouting-2.6.3.tar.gz ）</p>
<h3 id="编译安装-postgresql"><a href="#编译安装-postgresql" class="headerlink" title="编译安装 postgresql"></a>编译安装 postgresql</h3><p>数据库使用postgresql-14.5 编译安装完成后到/usr/local 目录下创建软链 并将目录授权postgres 用户<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /data</span></span><br><span class="line"><span class="comment"># tar -xzvf postgresql-14.5.tar.gz</span></span><br><span class="line"><span class="comment"># mv postgresql-14.5 postgresql-14.5_pkg</span></span><br><span class="line"><span class="comment"># cd postgresql-14.5_pkg</span></span><br><span class="line"><span class="comment"># CFLAGS=&quot;-O2 -march=native -mtune=native -pipe -fomit-frame-pointer&quot; \</span></span><br><span class="line">        CXXFLAGS=<span class="string">&quot;-O2 -march=native -mtune=native -pipe -fomit-frame-pointer&quot;</span> \</span><br><span class="line">        ./configure \</span><br><span class="line">        --prefix=/data/postgresql-14.5  \</span><br><span class="line">        --enable-nls \</span><br><span class="line">        --enable-thread-safety \</span><br><span class="line">        --with-libxml \</span><br><span class="line">        --with-libxslt \</span><br><span class="line">        --with-ldap=no \</span><br><span class="line">        --with-perl  \</span><br><span class="line">        --with-python \</span><br><span class="line">        --with-pam</span><br><span class="line"><span class="comment"># make &amp;&amp; make install-world</span></span><br><span class="line"><span class="comment"># cd /usr/local</span></span><br><span class="line"><span class="comment"># ln -s /data/postgresql-14.5 psql</span></span><br><span class="line"><span class="comment"># chown -R postgres.postgres  /data/postgresql-14.5</span></span><br></pre></td></tr></table></figure></p>
<h3 id="安装proj"><a href="#安装proj" class="headerlink" title="安装proj"></a>安装proj</h3><p>安装proj 之前我们先要安装2个依赖 sqlite3 以及 libtiff</p>
<p>安装sqlite3<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -xzvf sqlite-autoconf-3390400.tar.gz</span></span><br><span class="line"><span class="comment"># cd sqlite-autoconf-3390400</span></span><br><span class="line"><span class="comment"># ./configure --prefix=/usr/local/sqlite3</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure></p>
<p>安装libtiff<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -xvf tiff-4.4.0.tar</span></span><br><span class="line"><span class="comment"># cd tiff-4.4.0</span></span><br><span class="line"><span class="comment"># ./configure --prefix=/usr/local/libtiff</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure></p>
<p>安装完依赖开始安装proj<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -xzvf proj-7.1.0.tar.gz</span></span><br><span class="line"><span class="comment"># cd proj-7.1.0</span></span><br><span class="line"><span class="comment"># SQLITE3_CFLAGS=&quot;-I/usr/local/sqlite3/include&quot; SQLITE3_LIBS=&quot;-L/usr/local/sqlite3/lib -lsqlite3&quot; TIFF_CFLAGS=&quot;-I/usr/local/libtiff/include&quot; TIFF_LIBS=&quot;-L/usr/local/libtiff/lib -ltiff&quot; ./configure --prefix=/usr/local/proj --without-curl</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure></p>
<h3 id="安装geos"><a href="#安装geos" class="headerlink" title="安装geos"></a>安装geos</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -xvf geos-3.8.3.tar</span></span><br><span class="line"><span class="comment"># cd geos-3.8.3</span></span><br><span class="line"><span class="comment"># ./configure --prefix=/usr/local/geos</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>
<h3 id="安装-gdal-依赖-sqlite3-跟-proj"><a href="#安装-gdal-依赖-sqlite3-跟-proj" class="headerlink" title="安装 gdal (依赖 sqlite3 跟 proj )"></a>安装 gdal (依赖 sqlite3 跟 proj )</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -xzvf gdal-3.5.2.tar.gz</span></span><br><span class="line"><span class="comment"># gdal-3.5.2</span></span><br><span class="line"><span class="comment"># ./configure --prefix=/usr/local/gdal --with-sqlite3=/usr/local/sqlite3 --with-proj=/usr/local/proj </span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>
<h3 id="安装-json-c"><a href="#安装-json-c" class="headerlink" title="安装 json-c"></a>安装 json-c</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -xzvf json-c-json-c-0.13.1-20180305.tar.gz</span></span><br><span class="line"><span class="comment"># cd json-c-json-c-0.13.1-20180305</span></span><br><span class="line"><span class="comment"># ./configure --prefix=/usr/local/jsonc</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>
<p>如果不需要支持3D 。以上库安装完后即可进行postgis 编译了</p>
<h3 id="安装-protobuf"><a href="#安装-protobuf" class="headerlink" title="安装 protobuf"></a>安装 protobuf</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -xzvf protobuf-all-3.15.0.tar.gz</span></span><br><span class="line"><span class="comment"># cd protobuf-3.15.0</span></span><br><span class="line"><span class="comment"># ./configure  --prefix=/usr/local/protobuf</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>
<h3 id="安装-protobuf-c"><a href="#安装-protobuf-c" class="headerlink" title="安装 protobuf-c"></a>安装 protobuf-c</h3><p>设置环境变量，安装protobuf-c 需要识别 protobuf<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># export PROTOBUF_HOME=/usr/local/protobuf</span></span><br><span class="line"><span class="comment"># export PKG_CONFIG_PATH=/usr/local/protobuf/lib/pkgconfig</span></span><br><span class="line"><span class="comment"># tar -zxvf protobuf-c-1.3.3.tar.gz</span></span><br><span class="line"><span class="comment"># cd protobuf-c-1.3.3</span></span><br><span class="line"><span class="comment"># ./configure  --prefix=/usr/local/protobuf-c</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure></p>
<p>CGAL 以及SFCGAL 安装需要cmake 3+的版本</p>
<h3 id="安装cmake"><a href="#安装cmake" class="headerlink" title="安装cmake"></a>安装cmake</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -xzvf cmake-3.23.4-linux-x86_64.tar.gz</span></span><br><span class="line"><span class="comment"># ln -s /data/cmake-3.23.4-linux-x86_64 /usr/local/cmake</span></span><br></pre></td></tr></table></figure>
<h3 id="将安装的相关环境变量写入-etc-profile"><a href="#将安装的相关环境变量写入-etc-profile" class="headerlink" title="将安装的相关环境变量写入/etc/profile"></a>将安装的相关环境变量写入/etc/profile</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vi /etc/profile</span></span><br><span class="line"><span class="comment"># pathmunge /usr/local/protobuf/bin after</span></span><br><span class="line"><span class="comment"># pathmunge /usr/local/protobuf-c/bin after</span></span><br><span class="line"><span class="comment"># pathmunge /usr/local/pgsql/bin after</span></span><br><span class="line"><span class="comment"># PATH=/usr/local/cmake/bin:$PATH</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure>
<h3 id="编译CGAL"><a href="#编译CGAL" class="headerlink" title="编译CGAL"></a>编译CGAL</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># unzip CGAL-4.14.3.zip </span></span><br><span class="line"><span class="comment"># cd CGAL-4.14.3</span></span><br><span class="line"><span class="comment"># mkdir build</span></span><br><span class="line"><span class="comment"># cd build</span></span><br><span class="line"><span class="comment"># /usr/local/cmake/bin/cmake ../   ###(注意这里不要指定路径。以免安装编译SFCGAL时发生意外)</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>
<h3 id="编译安装-SFCGAL"><a href="#编译安装-SFCGAL" class="headerlink" title="编译安装 SFCGAL"></a>编译安装 SFCGAL</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -xzvf SFCGAL-v1.3.10.tar.gz</span></span><br><span class="line"><span class="comment"># cd /data/SFCGAL-v1.3.10/</span></span><br><span class="line"><span class="comment"># mkdir build</span></span><br><span class="line"><span class="comment"># cmake -D CMAKE_INSTALL_PREFIX=/usr/local/sfcgal  ../</span></span><br></pre></td></tr></table></figure>
<h3 id="将以上安装的所有lib-列入LD-LIBARY-PATH-直接写到-etc-ld-so-conf-也可以"><a href="#将以上安装的所有lib-列入LD-LIBARY-PATH-直接写到-etc-ld-so-conf-也可以" class="headerlink" title="将以上安装的所有lib 列入LD_LIBARY_PATH (直接写到 /etc/ld.so.conf 也可以)"></a>将以上安装的所有lib 列入LD_LIBARY_PATH (直接写到 /etc/ld.so.conf 也可以)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># export LD_LIBRARY_PATH=/usr/local/pgsql/lib:/usr/local/gdal/lib:/usr/local/geos/lib:/usr/local/jsonc/lib:/usr/local/proj/lib:/usr/local/protobuf/lib:/usr/local/protobuf-c/lib:/usr/local/sfcgal/lib64:/usr/local/sqlite3/lib:/usr/local/tiff/lib:/usr/lib:/usr/lib64</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure>
<h3 id="编译安装-pg-routing"><a href="#编译安装-pg-routing" class="headerlink" title="编译安装 pg_routing"></a>编译安装 pg_routing</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -xzvf pgrouting-2.6.3.tar.gz </span></span><br><span class="line"><span class="comment"># cd pgrouting-2.6.3</span></span><br><span class="line"><span class="comment"># mkdir build</span></span><br><span class="line"><span class="comment"># cmake ../</span></span><br><span class="line"><span class="comment"># make</span></span><br><span class="line"><span class="comment"># make install</span></span><br></pre></td></tr></table></figure>
<h3 id="编译安装-postgis"><a href="#编译安装-postgis" class="headerlink" title="编译安装 postgis"></a>编译安装 postgis</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -xzvf postgis-3.2.4dev.tar.gz </span></span><br><span class="line"><span class="comment"># cd postgis-3.2.4dev/</span></span><br><span class="line"><span class="comment"># ./configure --with-pgconfig=/usr/local/pgsql/bin/pg_config \</span></span><br><span class="line">  --with-gdalconfig=/usr/local/gdal/bin/gdal-config \</span><br><span class="line">  --with-geosconfig=/usr/local/geos/bin/geos-config  \</span><br><span class="line">  --with-protobufdir=/usr/local/protobuf-c \</span><br><span class="line">  --with-jsondir=/usr/local/jsonc \</span><br><span class="line">  --with-sfcgal=/usr/local/sfcgal/bin/sfcgal-config \</span><br><span class="line">  --with-projdir=/usr/local/proj \</span><br><span class="line">  --with-xml2config=/usr/bin/xml2-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># make</span></span><br><span class="line"><span class="comment"># make install</span></span><br></pre></td></tr></table></figure>
<h3 id="初始化pg数据库。我们来看看create-extension-是否成功"><a href="#初始化pg数据库。我们来看看create-extension-是否成功" class="headerlink" title="初始化pg数据库。我们来看看create extension 是否成功"></a>初始化pg数据库。我们来看看create extension 是否成功</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># su - postgres</span></span><br><span class="line">$ initdb -A md5 -E utf8 --locale=C -D /usr/local/pgsql/data_sheen -W</span><br><span class="line">$ pg_ctl -D /usr/local/pgsql/data_sheen start</span><br><span class="line">$ <span class="built_in">mkdir</span> -p /data/PG_TABLESPACE/sheen_data  <span class="comment">###(创建自定义表空间目录)</span></span><br><span class="line">$ psql</span><br><span class="line">postgres=<span class="comment"># create user sheen loginin password &#x27;xxx&#x27;;</span></span><br><span class="line">postgres=<span class="comment"># create tablespace sheen_data owner sheen location &#x27;/data/PG_TABLESPACE/sheen_data&#x27;;</span></span><br><span class="line">postgres=<span class="comment"># create database sheen with owner=sheen tablespace=sheen_data;</span></span><br><span class="line">postgres=<span class="comment"># \c sheen postgres</span></span><br><span class="line">sheen=<span class="comment"># create extension postgis;</span></span><br><span class="line">sheen=<span class="comment"># create extension postgis_raster;</span></span><br><span class="line">sheen=<span class="comment"># create extension postgis_sfcgal;</span></span><br><span class="line">sheen=<span class="comment"># CREATE EXTENSION pgrouting;</span></span><br><span class="line">sheen=<span class="comment"># \dx</span></span><br><span class="line">                                   List of installed extensions</span><br><span class="line">      Name      | Version  |   Schema   |                        Description                         </span><br><span class="line">----------------+----------+------------+------------------------------------------------------------</span><br><span class="line"> pgrouting      | 2.6.3    | public     | pgRouting Extension</span><br><span class="line"> plpgsql        | 1.0      | pg_catalog | PL/pgSQL procedural language</span><br><span class="line"> postgis        | 3.2.4dev | public     | PostGIS geometry and geography spatial types and <span class="built_in">functions</span></span><br><span class="line"> postgis_raster | 3.2.4dev | public     | PostGIS raster types and <span class="built_in">functions</span></span><br><span class="line"> postgis_sfcgal | 3.2.4dev | public     | PostGIS SFCGAL <span class="built_in">functions</span></span><br><span class="line">(5 rows)</span><br></pre></td></tr></table></figure>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>安装postgis 是比较麻烦的过程。安装期间曾试过想要安装某些高版本的包而升级了gcc ,后面各种编译错误。调换各种安装包后。<br>到最后postgis 执行configure 通过，结果在make 就出现错误 原因还是boost 的版本问题。</p>
]]></content>
      <categories>
        <category>postgresql</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>postgis</tag>
        <tag>postgresql</tag>
      </tags>
  </entry>
</search>
